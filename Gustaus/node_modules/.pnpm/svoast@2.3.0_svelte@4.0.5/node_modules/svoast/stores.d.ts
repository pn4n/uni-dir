/// <reference types="svelte" />
import type { ToastFunction, ToastPosition, ToastComponentWithCustom, ToastPromiseFunction } from './types';
export declare const toast: {
    /**
     * Add a info type toast.\
     * Usually indicates information to the user, but isn’t important.
     * @param message The message to be displayed in the toast.
     * @param opts Options for the toast.
     */
    info: ToastFunction;
    /**
     * Add an attention type toast.\
     * Indicate to the user with important information.
     * @param message The message to be displayed in the toast.
     * @param opts Options for the toast.
     */
    attention: ToastFunction;
    /**
     * Add a success type toast.\
     * Indicates to the user something good has happened.
     * @param message The message to be displayed in the toast.
     * @param opts Options for the toast.
     */
    success: ToastFunction;
    /**
     * Add a warning type toast.\
     * Tell the user something may be wrong but isn’t critical.
     * @param message The message to be displayed in the toast.
     * @param opts Options for the toast.
     */
    warning: ToastFunction;
    /**
     * Add an error type toast.\
     * Alert the user something critical has happened.
     * @param message The message to be displayed in the toast.
     * @param opts Options for the toast.
     */
    error: ToastFunction;
    /**
     * Add a promise toast chain.\
     * Indicates to the user that something is happening in the background.
     * @param promise The promise to be used.
     * @param opts Options for the promise chain.
     */
    promise: ToastPromiseFunction;
    /**
     * Remove a toast based on the unique ID.
     * @param id The unique ID of the toast.
     */
    removeById: (id: number) => void;
    /**
     * Remove a toast based on the index.
     * @param index The index of the toast
     */
    removeByIndex: (index: number) => void;
    /**
     * Removes all toasts.
     */
    removeAll: () => void;
    subscribe: (this: void, run: import("svelte/store").Subscriber<ToastComponentWithCustom[]>, invalidate?: import("svelte/store").Invalidator<ToastComponentWithCustom[]> | undefined) => import("svelte/store").Unsubscriber;
};
export declare const position: import("svelte/store").Writable<ToastPosition>;
