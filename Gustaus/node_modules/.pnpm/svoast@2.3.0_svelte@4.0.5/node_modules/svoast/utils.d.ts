import type { ToastComponentOptions, ToastAnimation } from './types';
/**
 * Generate a unique ID for the toasts.
 */
export declare const ID: () => number;
/**
 * The default options of SVoast.
 */
export declare const DEFAULT_OPTIONS: ToastComponentOptions;
/**
 * Default animation for the toasts.
 */
export declare const DEFAULT_ANIMATION: ToastAnimation;
/**
 * Transforms the string value to a number.
 *
 * Supported identifiers: `ms`, `s`
 * @param value The value to be transformed.
 */
export declare const parseDuration: (value: number | string) => number;
/**
 * Shallow merges two objects while replacing the same keys.
 * @param original The original object to be overwritten.
 * @param newObject The object to be added to the original object, replacing existing keys.
 */
export declare const objectMerge: <TOriginal extends Record<string, any>, TNew extends Record<string, any> | undefined>(original: TOriginal, newObject: TNew) => TOriginal & TNew;
