{
  "version": 3,
  "sources": ["../../../../node_modules/ts-dedent/src/index.ts", "../../../../node_modules/vitefu/src/sync.cjs", "../../src/adapter-sveltekit/vite-plugin/plugin.ts", "../../src/adapter-sveltekit/vite-plugin/checks/appTemplate.ts", "../../src/adapter-sveltekit/vite-plugin/checks/routes.ts", "../../src/adapter-sveltekit/vite-plugin/config.ts", "../../../core/dist/plugin/errors/PluginSetupError.js", "../../../../node_modules/deepmerge-ts/dist/node/index.mjs", "../../../core/dist/plugin/setupPlugins.js", "../../../core/dist/config/setupConfig.js", "../../../../node_modules/zod/lib/index.mjs", "../../../core/dist/ast/zod.js", "../../../core/dist/config/parseConfig.js", "../../../core/dist/config/ideExtension/zodSchema.js", "../../../core/dist/config/zod.js", "../../../core/dist/environment/$import.js", "../../../../source-code-git/fs/dist/utilities/normalizePath.js", "../../src/config/config.ts", "../../src/exceptions.ts", "../../src/adapter-sveltekit/vite-plugin/exceptions.ts", "../../../core/dist/test/testConfig.js", "../../../core/dist/test/testConfigFile.js", "../../../core/dist/test/mockEnvironment.js", "../../../sdk-js-plugin/dist/index.js", "../../package.json", "../../../../node_modules/vitefu/src/index.js", "../../src/ast-transforms/utils/js.util.ts", "../../src/ast-transforms/utils/exports.ts", "../../src/adapter-sveltekit/vite-plugin/fileInformation.ts", "../../src/adapter-sveltekit/ast-transforms/index.ts", "../../src/adapter-sveltekit/ast-transforms/+layout.js.ts", "../../src/ast-transforms/utils/imports.ts", "../../src/ast-transforms/utils/wrap.ts", "../../src/adapter-sveltekit/ast-transforms/+layout.server.js.ts", "../../src/adapter-sveltekit/ast-transforms/_.svelte.ts", "../../src/adapter-sveltekit/ast-transforms/utils/imports.ts", "../../src/adapter-sveltekit/ast-transforms/utils/svelte.util.ts", "../../src/adapter-sveltekit/ast-transforms/+layout.svelte.ts", "../../src/adapter-sveltekit/ast-transforms/utils/exports.ts", "../../src/adapter-sveltekit/ast-transforms/utils/markup.ts", "../../node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts", "../../node_modules/magic-string/src/BitSet.js", "../../node_modules/magic-string/src/Chunk.js", "../../node_modules/magic-string/src/SourceMap.js", "../../node_modules/magic-string/src/utils/guessIndent.js", "../../node_modules/magic-string/src/utils/getRelativePath.js", "../../node_modules/magic-string/src/utils/isObject.js", "../../node_modules/magic-string/src/utils/getLocator.js", "../../node_modules/magic-string/src/utils/Mappings.js", "../../node_modules/magic-string/src/MagicString.js", "../../node_modules/magic-string/src/Bundle.js", "../../src/adapter-sveltekit/magic-string.ts", "../../src/adapter-sveltekit/ast-transforms/+page.js.ts", "../../src/adapter-sveltekit/ast-transforms/+page.server.js.ts", "../../src/adapter-sveltekit/ast-transforms/+page.svelte.ts", "../../src/adapter-sveltekit/ast-transforms/+server.js.ts", "../../src/adapter-sveltekit/ast-transforms/[language].json.ts", "../../src/ast-transforms/utils/usage.ts", "../../src/adapter-sveltekit/ast-transforms/utils/assertions.ts", "../../src/adapter-sveltekit/ast-transforms/_.js.ts", "../../src/ast-transforms/utils/assertions.ts", "../../src/adapter-sveltekit/ast-transforms/_.server.js.ts", "../../src/adapter-sveltekit/ast-transforms/hooks.server.js.ts", "../../src/adapter-sveltekit/index.ts"],
  "sourcesContent": ["export function dedent(\n  templ: TemplateStringsArray | string,\n  ...values: unknown[]\n): string {\n  let strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n\n  // 1. Remove trailing whitespace.\n  strings[strings.length - 1] = strings[strings.length - 1].replace(\n    /\\r?\\n([\\t ]*)$/,\n    '',\n  );\n\n  // 2. Find all line breaks to determine the highest common indentation level.\n  const indentLengths = strings.reduce((arr, str) => {\n    const matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n    if (matches) {\n      return arr.concat(\n        matches.map((match) => match.match(/[\\t ]/g)?.length ?? 0),\n      );\n    }\n    return arr;\n  }, <number[]>[]);\n\n  // 3. Remove the common indentation from all strings.\n  if (indentLengths.length) {\n    const pattern = new RegExp(`\\n[\\t ]{${Math.min(...indentLengths)}}`, 'g');\n\n    strings = strings.map((str) => str.replace(pattern, '\\n'));\n  }\n\n  // 4. Remove leading whitespace.\n  strings[0] = strings[0].replace(/^\\r?\\n/, '');\n\n  // 5. Perform interpolation.\n  let string = strings[0];\n\n  values.forEach((value, i) => {\n    // 5.1 Read current indentation level\n    const endentations = string.match(/(?:^|\\n)( *)$/)\n    const endentation = endentations ? endentations[1] : ''\n    let indentedValue = value\n    // 5.2 Add indentation to values with multiline strings\n    if (typeof value === 'string' && value.includes('\\n')) {\n      indentedValue = String(value)\n        .split('\\n')\n        .map((str, i) => {\n          return i === 0 ? str : `${endentation}${str}`\n        })\n        .join('\\n');\n    }\n\n    string += indentedValue + strings[i + 1];\n  });\n\n  return string;\n}\n\nexport default dedent;\n", "// contains synchronous API only so it can be exported as CJS and ESM\n\n/** @type {import('..').isDepIncluded} */\nfunction isDepIncluded(dep, optimizeDepsInclude) {\n  return optimizeDepsInclude.some((id) => parseIncludeStr(id) === dep)\n}\n\n/** @type {import('..').isDepExcluded} */\nfunction isDepExcluded(dep, optimizeDepsExclude) {\n  dep = parseIncludeStr(dep)\n  return optimizeDepsExclude.some(\n    (id) => id === dep || dep.startsWith(`${id}/`)\n  )\n}\n\n/** @type {import('..').isDepNoExternaled} */\nfunction isDepNoExternaled(dep, ssrNoExternal) {\n  if (ssrNoExternal === true) {\n    return true\n  } else {\n    return isMatch(dep, ssrNoExternal)\n  }\n}\n\n/** @type {import('..').isDepExternaled} */\nfunction isDepExternaled(dep, ssrExternal) {\n  return ssrExternal.includes(dep)\n}\n\n/**\n * @param {string} raw could be \"foo\" or \"foo > bar\" etc\n */\nfunction parseIncludeStr(raw) {\n  const lastArrow = raw.lastIndexOf('>')\n  return lastArrow === -1 ? raw : raw.slice(lastArrow + 1).trim()\n}\n\n/**\n * @param {string} target\n * @param {string | RegExp | (string | RegExp)[]} pattern\n */\nfunction isMatch(target, pattern) {\n  if (Array.isArray(pattern)) {\n    return pattern.some((p) => isMatch(target, p))\n  } else if (typeof pattern === 'string') {\n    return target === pattern\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(target)\n  }\n}\n\nmodule.exports = {\n  isDepIncluded,\n  isDepExcluded,\n  isDepNoExternaled,\n  isDepExternaled\n}\n", "import { dedent } from \"ts-dedent\"\nimport type { ViteDevServer, Plugin } from \"vite\"\nimport { assertAppTemplateIsCorrect } from \"./checks/appTemplate.js\"\nimport { assertRoutesFolderPathExists, assertNecessaryFilesArePresent } from \"./checks/routes.js\"\nimport { getTransformConfig, resetConfig, type TransformConfig } from \"./config.js\"\nimport { filePathForOutput, getFileInformation } from \"./fileInformation.js\"\nimport { transformCode } from \"../ast-transforms/index.js\"\nimport { InlangSdkException } from \"./exceptions.js\"\nimport { inspect } from \"node:util\"\n\nlet viteServer: ViteDevServer | undefined\n\nconst virtualModuleId = \"virtual:inlang-static\"\nconst resolvedVirtualModuleId = \"\\0\" + virtualModuleId\n\nexport const plugin = () => {\n\treturn {\n\t\tname: \"vite-plugin-inlang-sdk-js-sveltekit\",\n\t\t// makes sure we run before vite-plugin-svelte\n\t\tenforce: \"pre\",\n\n\t\tconfigureServer(server) {\n\t\t\tviteServer = server as unknown as ViteDevServer\n\t\t},\n\n\t\tconfig() {\n\t\t\treturn {\n\t\t\t\tssr: {\n\t\t\t\t\t// makes sure that `@inlang/sdk-js` get's transformed by vite in order\n\t\t\t\t\t// to be able to use `SvelteKit`'s `$app` aliases\n\t\t\t\t\tnoExternal: [\"@inlang/sdk-js\"],\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\tresolveId(id) {\n\t\t\tif (id === virtualModuleId) {\n\t\t\t\treturn resolvedVirtualModuleId\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\n\t\tasync load(id) {\n\t\t\tconst config = await getTransformConfig()\n\t\t\tif (id === resolvedVirtualModuleId) {\n\t\t\t\treturn dedent`\n\t\t\t\t\texport const referenceLanguage = ${JSON.stringify(config.inlang.referenceLanguage)}\n\t\t\t\t\texport const languages = ${JSON.stringify(config.inlang.languages)}\n\t\t\t\t\texport const resources = ${JSON.stringify(\n\t\t\t\t\t\tawait config.inlang.readResources({ config: config.inlang }),\n\t\t\t\t\t)}\n\t\t\t\t`\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\n\t\tasync buildStart() {\n\t\t\tconst config = await getTransformConfig()\n\n\t\t\tawait assertAppTemplateIsCorrect(config)\n\t\t\tawait assertRoutesFolderPathExists(config)\n\t\t\tconst hasCreatedANewFile = await assertNecessaryFilesArePresent(config)\n\n\t\t\tif (hasCreatedANewFile) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresetConfig()\n\t\t\t\t\tviteServer && viteServer.restart()\n\t\t\t\t}, 1000) // if the server immediately get's restarted, then you would not be able to kill the process with CTRL + C; It seems that delaying the restart fixes this issue\n\t\t\t}\n\t\t},\n\n\t\tasync transform(code, id) {\n\t\t\tconst config = await getTransformConfig()\n\t\t\tconst fileInformation = getFileInformation(config, id)\n\t\t\t// eslint-disable-next-line unicorn/no-null\n\t\t\tif (!fileInformation) return null\n\n\t\t\tconst filePath = filePathForOutput(config, id)\n\n\t\t\tlet transformedCode: string = code\n\t\t\ttry {\n\t\t\t\ttransformedCode = transformCode(id, config, code, fileInformation)\n\t\t\t} catch (error) {\n\t\t\t\tthrow new InlangTransformException(filePath, error as Error)\n\t\t\t}\n\n\t\t\tif (config.debug || includesDebugImport(code)) {\n\t\t\t\tlogConfig(config)\n\n\t\t\t\tconsole.info(dedent`\n\t\t\t\t\t-- INLANG DEBUG START ----------------------------------------------------------\n\n\t\t\t\t\ttransformed file '${filePath}' (${fileInformation.type})\n\n\t\t\t\t\t-- INPUT -----------------------------------------------------------------------\n\n\t\t\t\t\t${code}\n\n\t\t\t\t\t-- OUTPUT ----------------------------------------------------------------------\n\n\t\t\t\t\t${code === transformedCode ? \"NO TRANSFORMATIONS MADE\" : transformedCode}\n\n\t\t\t\t\t-- INLANG DEBUG END ------------------------------------------------------------\n\t\t\t\t`)\n\t\t\t}\n\n\t\t\treturn transformedCode\n\t\t},\n\t} satisfies Plugin\n}\n\nlet configLogged = false\nconst logConfig = (config: TransformConfig) => {\n\tif (configLogged) return\n\n\tconst { inlang: _, ...configToLog } = config\n\tconsole.info(dedent`\n\t\t-- INLANG RESOLVED CONFIG ------------------------------------------------------\n\n\t\t${inspect(configToLog, false, 99)}\n\n\t`)\n\n\tconfigLogged = true\n}\n\nconst REGEX_DEBUG_IMPORT = /import\\s+[\"']@inlang\\/sdk-js\\/debug[\"']/\n\nconst includesDebugImport = (code: string) => REGEX_DEBUG_IMPORT.test(code)\n\nexport class InlangTransformException extends InlangSdkException {\n\tconstructor(path: string, override readonly cause: Error) {\n\t\tsuper(dedent`\n\t\t\tAn error occurred while transforming the code in file (${path})\n\n\t\t\tPlease open an issue on GitHub so we can investigate and improve the SDK: https://github.com/inlang/inlang/issues/new/\n\n\t\t\tDon't worry, we can probably already unblock you so you can continue working on your project.\n\t\t\tYou can find more information about it here: https://inlang.com/documentation/sdk/sveltekit/advanced\n\t\t`)\n\t}\n}\n", "import { readFile, writeFile } from \"node:fs/promises\"\nimport type { TransformConfig } from \"../config.js\"\n\nexport const assertAppTemplateIsCorrect = async ({ svelteKit, cwdFolderPath }: TransformConfig) => {\n\tconst appTemplatePath = svelteKit.files.appTemplate\n\tconst markup = await readFile(appTemplatePath, { encoding: \"utf-8\" })\n\n\tconst updatedMarkup = removeHtmlLangAttribute(markup)\n\tif (!updatedMarkup) return\n\n\tconsole.info(\n\t\t`Updating '${appTemplatePath.replace(\n\t\t\tcwdFolderPath,\n\t\t\t\"\",\n\t\t)}' to remove the 'lang' attribute from the <html> tag.`,\n\t)\n\n\tawait writeFile(appTemplatePath, updatedMarkup, { encoding: \"utf-8\" })\n}\n\nconst REGEX_LANG_ATTRIBUTE = /<html[^>]*(\\slang=\"[^\"]*\")[^>]*>/\n\nexport const removeHtmlLangAttribute = (markup: string) => {\n\tconst execArray = REGEX_LANG_ATTRIBUTE.exec(markup)\n\tif (!execArray) return\n\n\tconst htmlTag = execArray[0] as string\n\tconst langAttribute = execArray[1] as string\n\tconst index = execArray.index\n\n\treturn (\n\t\tmarkup.slice(0, index) +\n\t\thtmlTag.replace(langAttribute, \"\") +\n\t\tmarkup.slice(index + htmlTag.length)\n\t)\n}\n", "import { mkdir, writeFile } from \"node:fs/promises\"\nimport path, { dirname } from \"node:path\"\nimport { dedent } from \"ts-dedent\"\nimport { doesPathExist, type TransformConfig } from \"../config.js\"\nimport type { FileType } from \"../fileInformation.js\"\nimport { InlangException } from \"../../../exceptions.js\"\nimport { InlangSdkException } from \"../exceptions.js\"\n\nexport const assertRoutesFolderPathExists = async (config: TransformConfig) => {\n\tif (!(await doesPathExist(config.rootRoutesFolder))) {\n\t\tthrow new InlangException(dedent`\n\n\t\t\tCould not find the folder '${config.rootRoutesFolder.replace(config.cwdFolderPath, \"\")}'.\n\t\t\tIt is needed in order to circumvent a current limitation of SvelteKit. See https://github.com/inlang/inlang/issues/647.\n\t\t\tPlease create the folder and move all existing route files into it.\n\n\t\t`)\n\t}\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const assertNecessaryFilesArePresent = async (config: TransformConfig) => {\n\tconst preferredFileEnding = config.svelteKit.usesTypeScript ? \"ts\" : \"js\"\n\n\tconst getPathForFileType = (\n\t\tfileType: FileType,\n\t\tfileEnding: \"ts\" | \"js\" = preferredFileEnding,\n\t) => {\n\t\tswitch (fileType) {\n\t\t\tcase \"hooks.server.js\":\n\t\t\t\treturn `${config.svelteKit.files.serverHooks}.${fileEnding}`\n\t\t\tcase \"[language].json\":\n\t\t\t\treturn path.resolve(\n\t\t\t\t\tconfig.svelteKit.files.routes,\n\t\t\t\t\t\"inlang\",\n\t\t\t\t\t\"[language].json\",\n\t\t\t\t\t`+server.${fileEnding}`,\n\t\t\t\t)\n\t\t\tcase \"+layout.server.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+layout.server.${fileEnding}`)\n\t\t\tcase \"+layout.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+layout.${fileEnding}`)\n\t\t\tcase \"+layout.svelte\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+layout.svelte`)\n\t\t\tcase \"+page.server.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+page.server.${fileEnding}`)\n\t\t\tcase \"+page.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+page.${fileEnding}`)\n\t\t\tcase \"+page.svelte\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+page.svelte`)\n\t\t}\n\n\t\tthrow new InlangSdkException(`Could not find path for file type '${fileType}'`)\n\t}\n\n\tconst doesFileOfTypeExist = async (fileType: FileType): Promise<boolean> => {\n\t\tconst files = fileType.endsWith(\".svelte\")\n\t\t\t? [getPathForFileType(fileType)]\n\t\t\t: [getPathForFileType(fileType, \"js\"), getPathForFileType(fileType, \"ts\")]\n\n\t\treturn (await Promise.all(files.map((file) => doesPathExist(file)))).some((result) => result)\n\t}\n\n\tconst filesTypesToCreate = [\n\t\t`hooks.server.js`,\n\t\t`[language].json`,\n\t\t`+layout.server.js`,\n\t\t`+layout.js`,\n\t\t\"+layout.svelte\",\n\t\t...(config.isStatic && config.languageInUrl\n\t\t\t? ([`+page.js`, \"+page.svelte\"] satisfies FileType[])\n\t\t\t: []),\n\t] satisfies FileType[]\n\n\t// eslint-disable-next-line no-async-promise-executor\n\tconst results = await Promise.all(\n\t\tfilesTypesToCreate.map(\n\t\t\t(fileType) =>\n\t\t\t\t// eslint-disable-next-line no-async-promise-executor\n\t\t\t\tnew Promise<boolean>(async (resolve) => {\n\t\t\t\t\tif (await doesFileOfTypeExist(fileType)) {\n\t\t\t\t\t\treturn resolve(false)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = getPathForFileType(fileType)\n\t\t\t\t\tawait mkdir(dirname(path), { recursive: true }).catch(() => undefined)\n\t\t\t\t\t// TODO: improve robustness by using something like `vite-plugin-restart` that recreates those file if they were deleted\n\t\t\t\t\tconst message = dedent`\n\t\t\t\t\t\tThis file was created by inlang.\n\t\t\t\t\t\tIt is needed in order to circumvent a current limitation of SvelteKit. See https://github.com/inlang/inlang/issues/647\n\t\t\t\t\t\tYou can remove this comment and modify the file as you like. We just need to make sure it exists.\n\t\t\t\t\t\tPlease do not delete it (inlang will recreate it if needed).\n\t\t\t\t\t`\n\t\t\t\t\tawait writeFile(\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tpath.endsWith(\".svelte\") ? `<!-- ${message} -->` : `/* ${message} */`,\n\t\t\t\t\t)\n\n\t\t\t\t\tresolve(true)\n\t\t\t\t}),\n\t\t),\n\t)\n\n\t// TODO: remove not needed files if config changes\n\n\t// returns true if a new file was created\n\treturn results.some((result) => result)\n}\n", "import { mkdir, readFile, writeFile, stat } from \"node:fs/promises\"\nimport { initConfig } from \"../../config/index.js\"\nimport { dedent } from \"ts-dedent\"\nimport type { InlangConfig } from \"@inlang/core/config\"\nimport { testConfigFile } from \"@inlang/core/test\"\nimport { initInlangEnvironment, type InlangConfigWithSdkProps } from \"../../config/config.js\"\nimport { validateSdkConfig } from \"@inlang/sdk-js-plugin\"\n// @ts-ignore\nimport { version } from \"../../../package.json\"\nimport path from \"node:path\"\nimport { pathToFileURL } from \"node:url\"\nimport type { Config as SvelteConfig } from \"@sveltejs/kit\"\nimport * as svelteKit from \"@sveltejs/kit\"\nimport { findDepPkgJsonPath } from \"vitefu\"\nimport { InlangSdkException } from \"./exceptions.js\"\nimport { codeToSourceFile } from \"../../ast-transforms/utils/js.util.js\"\nimport { Node } from \"ts-morph\"\nimport { findExport } from \"../../ast-transforms/utils/exports.js\"\n\nexport const doesPathExist = async (path: string) => !!(await stat(path).catch(() => false))\n\ntype VersionString = `${number}.${number}.${number}`\n\nexport type TransformConfig = {\n\tcwdFolderPath: string\n\tdebug?: boolean\n\tlanguageInUrl: boolean\n\tisStatic: boolean\n\trootRoutesFolder: string\n\tsourceFileName?: string\n\tsourceMapName?: string\n\tinlang: InlangConfigWithSdkProps\n\tsvelteKit: {\n\t\tversion: VersionString | undefined\n\t\tusesTypeScript: boolean\n\t\tfiles: {\n\t\t\tappTemplate: string\n\t\t\troutes: string\n\t\t\tserverHooks: string\n\t\t}\n\t}\n}\n\nconst cwdFolderPath = process.cwd()\nconst inlangConfigFilePath = path.resolve(cwdFolderPath, \"inlang.config.js\")\n\nlet configPromise: Promise<TransformConfig> | undefined = undefined\n\nexport const getTransformConfig = async (): Promise<TransformConfig> => {\n\tif (configPromise) return configPromise\n\n\t// eslint-disable-next-line no-async-promise-executor\n\treturn (configPromise = new Promise<TransformConfig>(async (resolve) => {\n\t\tawait createInlangConfigIfNotPresentYet()\n\t\tawait updateSdkPluginVersion()\n\n\t\t// TODO: combine `testConfigFile` and `initConfig` functionality\n\t\tconst inlangConfigAsString = await readFile(inlangConfigFilePath, { encoding: \"utf-8\" })\n\n\t\tconst [, exception] = await testConfigFile({\n\t\t\tfile: inlangConfigAsString,\n\t\t\tenv: await initInlangEnvironment(),\n\t\t})\n\t\tif (exception) {\n\t\t\tthrow exception\n\t\t}\n\t\tconst inlangConfigModule = await import(pathToFileURL(inlangConfigFilePath).toString())\n\t\tconst inlangConfig = await initConfig(inlangConfigModule)\n\n\t\tconst { default: svelteConfig } = (await import(\n\t\t\tpathToFileURL(path.resolve(cwdFolderPath, \"svelte.config.js\")).toString()\n\t\t)) as { default: SvelteConfig }\n\t\tconst files = {\n\t\t\tappTemplate: path.resolve(\n\t\t\t\tcwdFolderPath,\n\t\t\t\tsvelteConfig.kit?.files?.appTemplate || path.resolve(\"src\", \"app.html\"),\n\t\t\t),\n\t\t\troutes: path.resolve(\n\t\t\t\tcwdFolderPath,\n\t\t\t\tsvelteConfig.kit?.files?.routes || path.resolve(\"src\", \"routes\"),\n\t\t\t),\n\t\t\tserverHooks: path.resolve(\n\t\t\t\tcwdFolderPath,\n\t\t\t\tsvelteConfig.kit?.files?.hooks?.server || path.resolve(\"src\", \"hooks.server\"),\n\t\t\t),\n\t\t}\n\n\t\tassertConfigWithSdk(inlangConfig)\n\t\tinlangConfig.sdk = validateSdkConfig(inlangConfig.sdk)\n\n\t\tconst languageInUrl =\n\t\t\tinlangConfig?.sdk?.languageNegotiation?.strategies?.some(({ type }) => type === \"url\") ||\n\t\t\tfalse\n\n\t\tconst rootRoutesFolder = path.resolve(files.routes, languageInUrl ? \"[lang]\" : \"\")\n\t\tconst isStatic =\n\t\t\t(await shouldContentBePrerendered(files.routes)) ||\n\t\t\t(await shouldContentBePrerendered(rootRoutesFolder))\n\n\t\tconst usesTypeScript = await doesPathExist(path.resolve(cwdFolderPath, \"tsconfig.json\"))\n\n\t\tconst svelteKitVersion =\n\t\t\t(svelteKit as unknown as { VERSION: string }).VERSION ||\n\t\t\t(await getInstalledVersionOfPackage(\"@sveltejs/kit\"))\n\n\t\tresolve({\n\t\t\tcwdFolderPath,\n\t\t\tdebug: !!inlangConfig.sdk?.debug,\n\t\t\tlanguageInUrl,\n\t\t\tisStatic,\n\t\t\trootRoutesFolder,\n\t\t\tinlang: inlangConfig,\n\t\t\tsvelteKit: {\n\t\t\t\tversion: svelteKitVersion,\n\t\t\t\tusesTypeScript,\n\t\t\t\tfiles,\n\t\t\t},\n\t\t})\n\t}))\n}\n\nexport const resetConfig = () => (configPromise = undefined)\n\n// ------------------------------------------------------------------------------------------------\n\nclass InlangSdkConfigException extends InlangSdkException {}\n\nfunction assertConfigWithSdk(\n\tconfig: InlangConfig | undefined,\n): asserts config is InlangConfigWithSdkProps {\n\tif (!config) {\n\t\tthrow new InlangSdkConfigException(dedent`\n\t\t\tCould not locate 'inlang.config.js' at the root of your project (${inlangConfigFilePath}).\n\t\t\tMake sure the file exists. You can generate the file using the inlang CLI.\n\t\t\tSee https://inlang.com/documentation/apps/inlang-cli\n\t\t`)\n\t}\n\n\tif (!(\"sdk\" in config)) {\n\t\tthrow new InlangSdkConfigException(dedent`\n\t\t\tInvalid config. Make sure to add the 'sdkPlugin' to your 'inlang.config.js' file.\n\t\t\tSee https://inlang.com/documentation/sdk/configuration\n\t\t`)\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst createInlangConfigIfNotPresentYet = async () => {\n\tconst inlangConfigExists = await doesPathExist(inlangConfigFilePath)\n\tif (inlangConfigExists) return\n\n\tawait createDemoResources()\n\n\treturn writeFile(\n\t\tinlangConfigFilePath,\n\t\t`\n/**\n * @type { import(\"@inlang/core/config\").DefineConfig }\n */\nexport async function defineConfig(env) {\n\tconst { default: jsonPlugin } = await env.$import(\n\t\t\"https://cdn.jsdelivr.net/npm/@inlang/plugin-json@3/dist/index.js\"\n\t)\n\tconst { default: sdkPlugin } = await env.$import(\n\t\t\"https://cdn.jsdelivr.net/npm/@inlang/sdk-js-plugin/dist/index.js\"\n\t)\n\n\treturn {\n\t\treferenceLanguage: \"en\",\n\t\tplugins: [\n\t\t\tjsonPlugin({\n\t\t\t\tpathPattern: \"./languages/{language}.json\",\n\t\t\t}),\n\t\t\tsdkPlugin({\n\t\t\t\tlanguageNegotiation: {\n\t\t\t\t\tstrategies: [{ type: \"localStorage\" }]\n\t\t\t\t}\n\t\t\t}),\n\t\t],\n\t}\n}\n`,\n\t)\n}\n\n// TODO: do this in a better way https://github.com/inlang/inlang/issues/708\nconst createDemoResources = async () => {\n\tconst resourcesFolder = path.resolve(cwdFolderPath, \"languages\")\n\n\tif (!(await doesPathExist(resourcesFolder))) {\n\t\tawait mkdir(path.resolve(resourcesFolder))\n\t}\n\n\tawait writeFile(\n\t\tpath.resolve(resourcesFolder, \"en.json\"),\n\t\tdedent`\n\t\t{\n\t\t  \"welcome\": \"Welcome to inlang\"\n\t\t}\n\t`,\n\t\t{ encoding: \"utf-8\" },\n\t)\n\n\tawait writeFile(\n\t\tpath.resolve(resourcesFolder, \"de.json\"),\n\t\tdedent`\n\t\t{\n\t\t  \"welcome\": \"Willkommen bei inlang\"\n\t\t}\n\t`,\n\t\t{ encoding: \"utf-8\" },\n\t)\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst shouldContentBePrerendered = async (routesFolder: string) => {\n\tconst filesToLookFor = [\"+layout.server.js\", \"+layout.server.ts\", \"+layout.js\", \"+layout.ts\"]\n\n\tconst prerenderExportVCalues = await Promise.all(\n\t\tfilesToLookFor.map(async (file) => {\n\t\t\tconst filePath = path.resolve(routesFolder, file)\n\t\t\tconst contents = await readFile(filePath, { encoding: \"utf-8\" }).catch(() => undefined)\n\t\t\tif (!contents || !contents.trim()) return undefined\n\n\t\t\tconst sourceFile = codeToSourceFile(contents)\n\n\t\t\tconst prerenderExport = findExport(sourceFile, \"prerender\")\n\t\t\tif (!prerenderExport) {\n\t\t\t\treturn undefined\n\t\t\t}\n\n\t\t\tif (!Node.isVariableDeclaration(prerenderExport)) {\n\t\t\t\treturn undefined\n\t\t\t}\n\n\t\t\treturn prerenderExport.getInitializer() as Node | undefined\n\t\t}),\n\t)\n\n\treturn prerenderExportVCalues\n\t\t.map(\n\t\t\t(node) =>\n\t\t\t\tNode.isTrueLiteral(node) ||\n\t\t\t\t(Node.isStringLiteral(node) && node.getLiteralText() === \"auto\"),\n\t\t)\n\t\t.some(Boolean)\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst updateSdkPluginVersion = async () => {\n\tconst inlangConfigAsString = await readFile(inlangConfigFilePath, { encoding: \"utf-8\" })\n\n\t// this regex detects the new `https://cdn.jsdelivr.net/npm/@inlang/sdk-js-plugin/dist/index.js` as well as\n\t// the older https://cdn.jsdelivr.net/npm/@inlang/sdk-js/dist/plugin/index.js url\n\t// both urls are also detected with the optional @version identifier\n\tconst REGEX_PLUGIN_VERSION =\n\t\t/https:\\/\\/cdn\\.jsdelivr\\.net\\/npm\\/@inlang\\/sdk-js(-plugin)?@?(.*)?\\/dist(\\/plugin)?\\/index\\.js/g\n\n\tconst newConfig = inlangConfigAsString.replace(\n\t\tREGEX_PLUGIN_VERSION,\n\t\t`https://cdn.jsdelivr.net/npm/@inlang/sdk-js-plugin@${version}/dist/index.js`,\n\t)\n\n\tif (inlangConfigAsString !== newConfig) {\n\t\tconsole.info(\n\t\t\t`Updating 'inlang.config.js' to use the correct version of '@inlang/sdk-js-plugin' (${version})`,\n\t\t)\n\n\t\tawait writeFile(inlangConfigFilePath, newConfig)\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst getInstalledVersionOfPackage = async (pkg: string) => {\n\tconst pkgJsonPath = await findDepPkgJsonPath(pkg, cwdFolderPath)\n\tif (!pkgJsonPath) return undefined\n\n\tconst pkgJson = JSON.parse(await readFile(pkgJsonPath, { encoding: \"utf-8\" }))\n\treturn pkgJson.version\n}\n", "var _PluginSetupError_id;\n/**\n * Error thrown when a plugin fails to setup.\n */\nexport class PluginSetupError extends Error {\n    constructor() {\n        super(...arguments);\n        _PluginSetupError_id.set(this, \"PluginSetupError\");\n    }\n}\n_PluginSetupError_id = new WeakMap();\n", "/**\n * Special values that tell deepmerge to perform a certain action.\n */\nconst actions = {\n    defaultMerge: Symbol(\"deepmerge-ts: default merge\"),\n    skip: Symbol(\"deepmerge-ts: skip\"),\n};\n/**\n * Special values that tell deepmergeInto to perform a certain action.\n */\nconst actionsInto = {\n    defaultMerge: actions.defaultMerge,\n};\n\n/**\n * The default function to update meta data.\n */\nfunction defaultMetaDataUpdater(previousMeta, metaMeta) {\n    return metaMeta;\n}\n\n/**\n * Get the type of the given object.\n *\n * @param object - The object to get the type of.\n * @returns The type of the given object.\n */\nfunction getObjectType(object) {\n    if (typeof object !== \"object\" || object === null) {\n        return 0 /* ObjectType.NOT */;\n    }\n    if (Array.isArray(object)) {\n        return 2 /* ObjectType.ARRAY */;\n    }\n    if (isRecord(object)) {\n        return 1 /* ObjectType.RECORD */;\n    }\n    if (object instanceof Set) {\n        return 3 /* ObjectType.SET */;\n    }\n    if (object instanceof Map) {\n        return 4 /* ObjectType.MAP */;\n    }\n    return 5 /* ObjectType.OTHER */;\n}\n/**\n * Get the keys of the given objects including symbol keys.\n *\n * Note: Only keys to enumerable properties are returned.\n *\n * @param objects - An array of objects to get the keys of.\n * @returns A set containing all the keys of all the given objects.\n */\nfunction getKeys(objects) {\n    const keys = new Set();\n    /* eslint-disable functional/no-loop-statements, functional/no-expression-statements -- using a loop here is more efficient. */\n    for (const object of objects) {\n        for (const key of [\n            ...Object.keys(object),\n            ...Object.getOwnPropertySymbols(object),\n        ]) {\n            keys.add(key);\n        }\n    }\n    /* eslint-enable functional/no-loop-statements, functional/no-expression-statements */\n    return keys;\n}\n/**\n * Does the given object have the given property.\n *\n * @param object - The object to test.\n * @param property - The property to test.\n * @returns Whether the object has the property.\n */\nfunction objectHasProperty(object, property) {\n    return (typeof object === \"object\" &&\n        Object.prototype.propertyIsEnumerable.call(object, property));\n}\n/**\n * Get an iterable object that iterates over the given iterables.\n */\nfunction getIterableOfIterables(iterables) {\n    return {\n        // eslint-disable-next-line functional/functional-parameters\n        *[Symbol.iterator]() {\n            // eslint-disable-next-line functional/no-loop-statements\n            for (const iterable of iterables) {\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const value of iterable) {\n                    yield value;\n                }\n            }\n        },\n    };\n}\nconst validRecordToStringValues = new Set([\n    \"[object Object]\",\n    \"[object Module]\",\n]);\n/**\n * Does the given object appear to be a record.\n */\nfunction isRecord(value) {\n    // All records are objects.\n    if (!validRecordToStringValues.has(Object.prototype.toString.call(value))) {\n        return false;\n    }\n    const { constructor } = value;\n    // If has modified constructor.\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (constructor === undefined) {\n        return true;\n    }\n    // eslint-disable-next-line prefer-destructuring\n    const prototype = constructor.prototype;\n    // If has modified prototype.\n    if (prototype === null ||\n        typeof prototype !== \"object\" ||\n        !validRecordToStringValues.has(Object.prototype.toString.call(prototype))) {\n        return false;\n    }\n    // If constructor does not have an Object-specific method.\n    // eslint-disable-next-line sonarjs/prefer-single-boolean-return, no-prototype-builtins\n    if (!prototype.hasOwnProperty(\"isPrototypeOf\")) {\n        return false;\n    }\n    // Most likely a record.\n    return true;\n}\n\n/**\n * The default strategy to merge records.\n *\n * @param values - The records.\n */\nfunction mergeRecords$2(values, utils, meta) {\n    const result = {};\n    /* eslint-disable functional/no-loop-statements, functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data -- using imperative code here is more performant. */\n    for (const key of getKeys(values)) {\n        const propValues = [];\n        for (const value of values) {\n            if (objectHasProperty(value, key)) {\n                propValues.push(value[key]);\n            }\n        }\n        if (propValues.length === 0) {\n            continue;\n        }\n        const updatedMeta = utils.metaDataUpdater(meta, {\n            key,\n            parents: values,\n        });\n        const propertyResult = mergeUnknowns(propValues, utils, updatedMeta);\n        if (propertyResult === actions.skip) {\n            continue;\n        }\n        if (key === \"__proto__\") {\n            Object.defineProperty(result, key, {\n                value: propertyResult,\n                configurable: true,\n                enumerable: true,\n                writable: true,\n            });\n        }\n        else {\n            result[key] = propertyResult;\n        }\n    }\n    /* eslint-enable functional/no-loop-statements, functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data */\n    return result;\n}\n/**\n * The default strategy to merge arrays.\n *\n * @param values - The arrays.\n */\nfunction mergeArrays$2(values) {\n    return values.flat();\n}\n/**\n * The default strategy to merge sets.\n *\n * @param values - The sets.\n */\nfunction mergeSets$2(values) {\n    return new Set(getIterableOfIterables(values));\n}\n/**\n * The default strategy to merge maps.\n *\n * @param values - The maps.\n */\nfunction mergeMaps$2(values) {\n    return new Map(getIterableOfIterables(values));\n}\n/**\n * Get the last value in the given array.\n */\nfunction mergeOthers$2(values) {\n    return values.at(-1);\n}\n\nvar defaultMergeFunctions = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    mergeArrays: mergeArrays$2,\n    mergeMaps: mergeMaps$2,\n    mergeOthers: mergeOthers$2,\n    mergeRecords: mergeRecords$2,\n    mergeSets: mergeSets$2\n});\n\n/**\n * Deeply merge objects.\n *\n * @param objects - The objects to merge.\n */\nfunction deepmerge(\n// eslint-disable-next-line functional/functional-parameters\n...objects) {\n    return deepmergeCustom({})(...objects);\n}\nfunction deepmergeCustom(options, rootMetaData) {\n    const utils = getUtils(options, customizedDeepmerge);\n    /**\n     * The customized deepmerge function.\n     */\n    function customizedDeepmerge(\n    // eslint-disable-next-line functional/functional-parameters\n    ...objects) {\n        return mergeUnknowns(objects, utils, rootMetaData);\n    }\n    return customizedDeepmerge;\n}\n/**\n * The the utils that are available to the merge functions.\n *\n * @param options - The options the user specified\n */\nfunction getUtils(options, customizedDeepmerge) {\n    return {\n        defaultMergeFunctions,\n        mergeFunctions: {\n            ...defaultMergeFunctions,\n            ...Object.fromEntries(Object.entries(options)\n                .filter(([key, option]) => Object.hasOwn(defaultMergeFunctions, key))\n                .map(([key, option]) => option === false\n                ? [key, mergeOthers$2]\n                : [key, option])),\n        },\n        metaDataUpdater: (options.metaDataUpdater ??\n            defaultMetaDataUpdater),\n        deepmerge: customizedDeepmerge,\n        useImplicitDefaultMerging: options.enableImplicitDefaultMerging ?? false,\n        actions,\n    };\n}\n/**\n * Merge unknown things.\n *\n * @param values - The values.\n */\nfunction mergeUnknowns(values, utils, meta) {\n    if (values.length === 0) {\n        return undefined;\n    }\n    if (values.length === 1) {\n        return mergeOthers$1(values, utils, meta);\n    }\n    const type = getObjectType(values[0]);\n    /* eslint-disable functional/no-loop-statements, functional/no-conditional-statements -- using imperative code here is more performant. */\n    if (type !== 0 /* ObjectType.NOT */ && type !== 5 /* ObjectType.OTHER */) {\n        for (let m_index = 1; m_index < values.length; m_index++) {\n            if (getObjectType(values[m_index]) === type) {\n                continue;\n            }\n            return mergeOthers$1(values, utils, meta);\n        }\n    }\n    /* eslint-enable functional/no-loop-statements, functional/no-conditional-statements */\n    switch (type) {\n        case 1 /* ObjectType.RECORD */: {\n            return mergeRecords$1(values, utils, meta);\n        }\n        case 2 /* ObjectType.ARRAY */: {\n            return mergeArrays$1(values, utils, meta);\n        }\n        case 3 /* ObjectType.SET */: {\n            return mergeSets$1(values, utils, meta);\n        }\n        case 4 /* ObjectType.MAP */: {\n            return mergeMaps$1(values, utils, meta);\n        }\n        default: {\n            return mergeOthers$1(values, utils, meta);\n        }\n    }\n}\n/**\n * Merge records.\n *\n * @param values - The records.\n */\nfunction mergeRecords$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeRecords(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeRecords !==\n                utils.defaultMergeFunctions.mergeRecords)) {\n        return utils.defaultMergeFunctions.mergeRecords(values, utils, meta);\n    }\n    return result;\n}\n/**\n * Merge arrays.\n *\n * @param values - The arrays.\n */\nfunction mergeArrays$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeArrays(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeArrays !==\n                utils.defaultMergeFunctions.mergeArrays)) {\n        return utils.defaultMergeFunctions.mergeArrays(values);\n    }\n    return result;\n}\n/**\n * Merge sets.\n *\n * @param values - The sets.\n */\nfunction mergeSets$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeSets(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeSets !== utils.defaultMergeFunctions.mergeSets)) {\n        return utils.defaultMergeFunctions.mergeSets(values);\n    }\n    return result;\n}\n/**\n * Merge maps.\n *\n * @param values - The maps.\n */\nfunction mergeMaps$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeMaps(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeMaps !== utils.defaultMergeFunctions.mergeMaps)) {\n        return utils.defaultMergeFunctions.mergeMaps(values);\n    }\n    return result;\n}\n/**\n * Merge other things.\n *\n * @param values - The other things.\n */\nfunction mergeOthers$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeOthers(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeOthers !==\n                utils.defaultMergeFunctions.mergeOthers)) {\n        return utils.defaultMergeFunctions.mergeOthers(values);\n    }\n    return result;\n}\n\n/**\n * The default strategy to merge records into a target record.\n *\n * @param m_target - The result will be mutated into this record\n * @param values - The records (including the target's value if there is one).\n */\nfunction mergeRecords(m_target, values, utils, meta) {\n    for (const key of getKeys(values)) {\n        const propValues = [];\n        for (const value of values) {\n            if (objectHasProperty(value, key)) {\n                propValues.push(value[key]);\n            }\n        }\n        if (propValues.length === 0) {\n            continue;\n        }\n        const updatedMeta = utils.metaDataUpdater(meta, {\n            key,\n            parents: values,\n        });\n        const propertyTarget = { value: propValues[0] };\n        mergeUnknownsInto(propertyTarget, propValues, utils, updatedMeta);\n        if (key === \"__proto__\") {\n            Object.defineProperty(m_target, key, {\n                value: propertyTarget.value,\n                configurable: true,\n                enumerable: true,\n                writable: true,\n            });\n        }\n        else {\n            m_target.value[key] = propertyTarget.value;\n        }\n    }\n}\n/**\n * The default strategy to merge arrays into a target array.\n *\n * @param m_target - The result will be mutated into this array\n * @param values - The arrays (including the target's value if there is one).\n */\nfunction mergeArrays(m_target, values) {\n    m_target.value.push(...values.slice(1).flat());\n}\n/**\n * The default strategy to merge sets into a target set.\n *\n * @param m_target - The result will be mutated into this set\n * @param values - The sets (including the target's value if there is one).\n */\nfunction mergeSets(m_target, values) {\n    for (const value of getIterableOfIterables(values.slice(1))) {\n        m_target.value.add(value);\n    }\n}\n/**\n * The default strategy to merge maps into a target map.\n *\n * @param m_target - The result will be mutated into this map\n * @param values - The maps (including the target's value if there is one).\n */\nfunction mergeMaps(m_target, values) {\n    for (const [key, value] of getIterableOfIterables(values.slice(1))) {\n        m_target.value.set(key, value);\n    }\n}\n/**\n * Set the target to the last value.\n */\nfunction mergeOthers(m_target, values) {\n    m_target.value = values.at(-1);\n}\n\nvar defaultMergeIntoFunctions = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    mergeArrays: mergeArrays,\n    mergeMaps: mergeMaps,\n    mergeOthers: mergeOthers,\n    mergeRecords: mergeRecords,\n    mergeSets: mergeSets\n});\n\nfunction deepmergeInto(target, ...objects) {\n    return void deepmergeIntoCustom({})(target, ...objects);\n}\nfunction deepmergeIntoCustom(options, rootMetaData) {\n    const utils = getIntoUtils(options, customizedDeepmergeInto);\n    /**\n     * The customized deepmerge function.\n     */\n    function customizedDeepmergeInto(target, ...objects) {\n        mergeUnknownsInto({ value: target }, [target, ...objects], utils, rootMetaData);\n    }\n    return customizedDeepmergeInto;\n}\n/**\n * The the utils that are available to the merge functions.\n *\n * @param options - The options the user specified\n */\nfunction getIntoUtils(options, customizedDeepmergeInto) {\n    return {\n        defaultMergeFunctions: defaultMergeIntoFunctions,\n        mergeFunctions: {\n            ...defaultMergeIntoFunctions,\n            ...Object.fromEntries(Object.entries(options)\n                .filter(([key, option]) => Object.hasOwn(defaultMergeIntoFunctions, key))\n                .map(([key, option]) => option === false\n                ? [key, mergeOthers]\n                : [key, option])),\n        },\n        metaDataUpdater: (options.metaDataUpdater ??\n            defaultMetaDataUpdater),\n        deepmergeInto: customizedDeepmergeInto,\n        actions: actionsInto,\n    };\n}\n/**\n * Merge unknown things into a target.\n *\n * @param m_target - The target to merge into.\n * @param values - The values.\n */\nfunction mergeUnknownsInto(m_target, values, utils, meta\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n) {\n    if (values.length === 0) {\n        return;\n    }\n    if (values.length === 1) {\n        return void mergeOthersInto(m_target, values, utils, meta);\n    }\n    const type = getObjectType(m_target.value);\n    if (type !== 0 /* ObjectType.NOT */ && type !== 5 /* ObjectType.OTHER */) {\n        for (let m_index = 1; m_index < values.length; m_index++) {\n            if (getObjectType(values[m_index]) === type) {\n                continue;\n            }\n            return void mergeOthersInto(m_target, values, utils, meta);\n        }\n    }\n    switch (type) {\n        case 1 /* ObjectType.RECORD */: {\n            return void mergeRecordsInto(m_target, values, utils, meta);\n        }\n        case 2 /* ObjectType.ARRAY */: {\n            return void mergeArraysInto(m_target, values, utils, meta);\n        }\n        case 3 /* ObjectType.SET */: {\n            return void mergeSetsInto(m_target, values, utils, meta);\n        }\n        case 4 /* ObjectType.MAP */: {\n            return void mergeMapsInto(m_target, values, utils, meta);\n        }\n        default: {\n            return void mergeOthersInto(m_target, values, utils, meta);\n        }\n    }\n}\n/**\n * Merge records into a target record.\n *\n * @param m_target - The target to merge into.\n * @param values - The records.\n */\nfunction mergeRecordsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeRecords(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeRecords(m_target, values, utils, meta);\n    }\n}\n/**\n * Merge arrays into a target array.\n *\n * @param m_target - The target to merge into.\n * @param values - The arrays.\n */\nfunction mergeArraysInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeArrays(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeArrays(m_target, values);\n    }\n}\n/**\n * Merge sets into a target set.\n *\n * @param m_target - The target to merge into.\n * @param values - The sets.\n */\nfunction mergeSetsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeSets(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeSets(m_target, values);\n    }\n}\n/**\n * Merge maps into a target map.\n *\n * @param m_target - The target to merge into.\n * @param values - The maps.\n */\nfunction mergeMapsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeMaps(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeMaps(m_target, values);\n    }\n}\n/**\n * Merge other things into a target.\n *\n * @param m_target - The target to merge into.\n * @param values - The other things.\n */\nfunction mergeOthersInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeOthers(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge ||\n        m_target.value === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeOthers(m_target, values);\n    }\n}\n\nexport { deepmerge, deepmergeCustom, deepmergeInto, deepmergeIntoCustom, getKeys, getObjectType, objectHasProperty };\n", "import { PluginSetupError } from \"./errors/PluginSetupError.js\";\nimport { deepmergeInto } from \"deepmerge-ts\";\nimport { dedent } from \"ts-dedent\";\n/**\n * Setup the plugins and process the config callback.\n *\n * Returns a tuple of the config and errors that occured during the setup of plugins.\n * The function mutates the config object. Mutating the config object\n * is expected to:\n *\n * 1. decrease the initial startup time of inlang apps with 10+ plugins\n *     (immutability is expensive).\n * 2. leads to a lightly better API for `setupConfig`.\n * 3. plugins configs are only merged\n *\n * We can change this behaviour\n * if required as this function is only used internally.\n *\n */\nexport async function setupPlugins(args) {\n    if (args.config.plugins === undefined) {\n        args.config.plugins = [];\n        return [args.config];\n    }\n    // Note: we can't use structuredClone because the object could contain functions\n    // To have some sort of immutability (for the first level), we destructure it into a new object\n    const mergedConfig = { ...args.config };\n    const errors = [];\n    for (let i = 0; i < args.config.plugins.length; i++) {\n        try {\n            // If a plugin uses a setup function, the setup function needs to be invoked.\n            if (typeof args.config.plugins[i] === \"function\") {\n                args.config.plugins[i] = args.config.plugins[i](args.env);\n            }\n            const plugin = args.config.plugins[i];\n            // const withErrorHandlingPlugin = withErrorHandling(plugin.id, plugin)\n            // const config = await withErrorHandlingPlugin?.config({ ...mergedConfig })\n            const config = await plugin?.config({ ...mergedConfig });\n            deepmergeInto(mergedConfig, config);\n        }\n        catch (error) {\n            // continue with next plugin.\n            // if one plugin fails, the whole app should not crash.\n            if (!error || typeof error !== \"object\" || !(\"message\" in error)) {\n                errors.push(new PluginSetupError(\"\" + error));\n                continue;\n            }\n            const id = args.config.plugins[i]?.id;\n            if (!id) {\n                errors.push(new PluginSetupError(dedent `\n\t\t\t\t\tFailed to setup a plugin:\n\n\t\t\t\t\t${error?.message ?? \"Unknown error\"}\n\n\t\t\t\t\tIt seems a plugin was configured incorrectly.\n\t\t\t\t\tTry to change 'plugin' to 'plugin()' or consult the documentation of that plugin.\n\t\t\t\t`));\n            }\n            else {\n                errors.push(new PluginSetupError(dedent `\n\t\t\t\t\tFailed to setup plugin '${id}':\n\n\t\t\t\t\t${error?.message ?? \"Unknown error\"}\n\t\t\t\t`));\n            }\n        }\n    }\n    // remove duplicates from languages in case multiple plugins add the same language.\n    mergedConfig.languages = [...new Set(mergedConfig.languages)];\n    return [mergedConfig, errors.length > 0 ? errors : undefined];\n}\n", "import { setupPlugins } from \"../plugin/setupPlugins.js\";\nimport { dedent } from \"ts-dedent\";\nimport { parseConfig } from \"./parseConfig.js\";\nimport { ZodError } from \"zod\";\n/**\n * Sets up the inlang config module.\n *\n * @throws {Error} If the config is invalid.\n *\n * @example\n * \timport { setupConfig, type InlangConfigModule } from \"@inlang/core/config\"\n *\n * \tconst module = (await import(\"./inlang.config.js\")) as InlangConfigModule\n * \tconst config = await setupConfig({ module, env })\n */\nexport async function setupConfig(args) {\n    if (args.module.defineConfig === undefined) {\n        throw new Error(`The \"defineConfig\" function is missing from the \"inlang.config.js\" file.`);\n    }\n    let config = await args.module.defineConfig(args.env);\n    const [configWithPlugins, pluginErrors] = await setupPlugins({ config, env: args.env });\n    config = configWithPlugins;\n    const [parsedConfig, testConfigException] = await parseConfig({ config: config });\n    // throw an error. the config is broken without a path to recovery\n    if (testConfigException) {\n        throw new Error(dedent `\n\t\t\tThe inlang.config.js is invalid.\n\n\t\t\t# The following errors occurred during the setup of plugins:\n\n\t\t\t${pluginErrors ? pluginErrors.map((e) => e.message).join(\"\\n\") : \"None \u2705\"}\n\n\t\t\t# The following errors occurred during the validation of the config:\n\n\t\t\t${formatErrors(testConfigException)}\n\n\t\t\t---\n\n\t\t\tIf plugins return errors, chances are high that the plugin errors are the root cause\n\t\t\tfor the config errors. Try to fix the plugin errors first.\n\n\t\t`);\n    }\n    // plugins returned an error but the config is still usable\n    // -> only log the errors\n    if (pluginErrors) {\n        for (const e of pluginErrors)\n            console.error(e);\n    }\n    return parsedConfig;\n}\nconst formatErrors = (error) => {\n    if (error instanceof ZodError) {\n        return error.errors.map((e) => `[${e.path}] ${e.message}`).join(\"\\n\");\n    }\n    return error.message;\n};\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nconst custom = (check, params = {}, \n/*\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { z } from \"zod\";\n/**\n * The zod schemas for the AST.\n *\n * The zod schema can be used to parse and validate\n * the AST nodes. Read more at https://zod.dev/\n */\nconst Node = z.object({\n    type: z.string(),\n    metadata: z.any().optional(),\n});\nconst Identifier = Node.extend({\n    type: z.literal(\"Identifier\"),\n    name: z.string(),\n});\nconst LanguageTag = Node.extend({\n    type: z.literal(\"LanguageTag\"),\n    name: z.string(),\n});\nconst Text = Node.extend({\n    type: z.literal(\"Text\"),\n    value: z.string(),\n});\nconst VariableReference = Node.extend({\n    type: z.literal(\"VariableReference\"),\n    name: z.string(),\n});\nconst Placeholder = Node.extend({\n    type: z.literal(\"Placeholder\"),\n    body: VariableReference,\n});\nconst Pattern = Node.extend({\n    type: z.literal(\"Pattern\"),\n    elements: z.array(Text.or(Placeholder)),\n});\nconst Message = Node.extend({\n    type: z.literal(\"Message\"),\n    id: Identifier,\n    pattern: Pattern,\n});\nexport const Resource = Node.extend({\n    type: z.literal(\"Resource\"),\n    languageTag: LanguageTag,\n    body: z.array(Message),\n});\n", "var _ParseConfigException_id;\nimport { Resource } from \"../ast/zod.js\";\nimport { dedent } from \"ts-dedent\";\nimport { zConfig } from \"./zod.js\";\nexport class ParseConfigException extends Error {\n    constructor() {\n        super(...arguments);\n        _ParseConfigException_id.set(this, \"ParseConfigException\");\n    }\n}\n_ParseConfigException_id = new WeakMap();\n/**\n * Validates the config.\n *\n * If you want to test the config of the inlang.config.js file,\n * use the `testConfigFile` function instead.\n *\n * @example\n * const [success, error] = await testConfig(args)\n */\nexport async function parseConfig(args) {\n    // each function throws an error if the validation fails.\n    try {\n        // validate the config -> throws if invalid\n        hasSetupAResourcePlugin(args.config);\n        const parsedConfig = zConfig.passthrough().parse(args.config);\n        referenceLanguageMustBeInLanguages(args.config);\n        const resources = await args.config.readResources({ config: args.config });\n        validateResources(resources);\n        await languagesMatch(args.config, resources);\n        await roundtripTest(args.config, resources);\n        return [parsedConfig, undefined];\n    }\n    catch (error) {\n        return [undefined, error];\n    }\n}\nfunction hasSetupAResourcePlugin(config) {\n    if (!config.readResources || !config.writeResources) {\n        throw new ParseConfigException(`It seems you didn't set up a plugin to handle Resource files. See https://inlang.com/documentation/plugins/registry.`);\n    }\n}\nfunction referenceLanguageMustBeInLanguages(config) {\n    if (!config.languages.includes(config.referenceLanguage)) {\n        throw new ParseConfigException(`The reference language \"${config.referenceLanguage}\" must be included in the list of languages.`);\n    }\n}\nfunction validateResources(resources) {\n    for (const resource of resources) {\n        // parse throws an error if any resource is invalid\n        Resource.parse(resource);\n    }\n}\nasync function languagesMatch(config, resources) {\n    const languages = resources.map((resource) => resource.languageTag.name);\n    // sort the languages to ensure that the order does not matter\n    // and convert the array to a string to compare the arrays\n    const areEqual = languages.sort().join(\",\") === config.languages.sort().join(\",\");\n    if (areEqual === false) {\n        // TODO error message should contain the languages that are missing\n        throw new ParseConfigException(`The list of languages in the config file does not match the returned resources from \\`readResources()\\`.`);\n    }\n}\n/**\n * Testing a roundtrip of reading and writing resources.\n *\n * readResources -> AST (1) -> writeResources -> readResources -> AST (2).\n * AST (1) and AST (2) must be equal if the AST is not modified.\n *\n * Otherwise, the defined readResources and writeResources functions are not\n * implemented correctly e.g. by missing messages in the roundtrip.\n */\nasync function roundtripTest(config, initialResources) {\n    const commonErrorMessage = \"A roundtrip test of the readResources and writeResources functions failed:\\n\";\n    await config.writeResources({ config, resources: initialResources });\n    const readResourcesAgain = await config.readResources({ config });\n    // check if the number of resources is the same\n    if (initialResources.length !== readResourcesAgain.length) {\n        throw new ParseConfigException(commonErrorMessage + \"The number of resources don't match.\");\n    }\n    // check if the resources match\n    for (const intialResource of initialResources) {\n        // find the matching resource\n        const matchingReadResourceAgain = readResourcesAgain.find((readResourceAgain) => readResourceAgain.languageTag.name === intialResource.languageTag.name);\n        // check if the resource exists\n        if (matchingReadResourceAgain === undefined) {\n            throw new ParseConfigException(commonErrorMessage + `Missing the resource \"${intialResource.languageTag.name}\"`);\n        }\n        // check if the messages are identical\n        for (const [messageIndex, initialMessage] of intialResource.body.entries()) {\n            if (JSON.stringify(initialMessage) !==\n                JSON.stringify(matchingReadResourceAgain.body[messageIndex]))\n                throw new ParseConfigException(dedent(`\n${commonErrorMessage}\nThe message with id \"${initialMessage.id.name}\" does not match for the resource\nwith languageTag.name \"${intialResource.languageTag.name}\".\n\nReceived:\n${JSON.stringify(matchingReadResourceAgain.body[messageIndex], undefined, 2)}\n\nExpected:\n${JSON.stringify(initialMessage, undefined, 2)}\n`));\n        }\n    }\n}\n", "import * as z from \"zod\";\n/**\n * The document selector settings for the IDE extension.\n */\nconst documentSelectorSchema = z\n    .array(z.object({\n    language: z.string().optional(),\n    scheme: z.string().optional(),\n    pattern: z.string().optional(),\n    notebookType: z.string().optional(),\n}))\n    .optional();\n/**\n * The position from where to where the reference can be found.\n */\nconst positionSchema = z.object({\n    start: z.object({\n        line: z.number(),\n        character: z.number(),\n    }),\n    end: z.object({\n        line: z.number(),\n        character: z.number(),\n    }),\n});\nconst messageReferenceSchema = z.object({\n    messageId: z.string(),\n    position: positionSchema,\n});\nexport const zodIdeExtensionConfigSchema = z.object({\n    /**\n     * Defines matchers for message references inside the code.\n     *\n     * @param args represents the data to conduct the search on\n     * @returns a promise with matched message references\n     */\n    messageReferenceMatchers: z\n        .array(z\n        .function()\n        .args(z.object({ documentText: z.string() }))\n        .returns(z.promise(z.array(messageReferenceSchema))))\n        .optional(),\n    /**\n     * Defines the options to extract messages.\n     */\n    extractMessageOptions: z\n        .array(z.object({\n        /**\n         * Function which is called, when the user finished the message extraction command.\n         *\n         * @param messageId is the message identifier entered by the user\n         * @param selection is the text which was extracted\n         * @returns the code which is inserted into the document\n         */\n        callback: z.function().args(z.string(), z.string()).returns(z.string()),\n    }))\n        .optional(),\n    /**\n     * An array of VSCode DocumentSelectors.\n     *\n     * The document selectors specify for which files/programming languages\n     * (typescript, svelte, etc.) the extension should be activated.\n     *\n     * See https://code.visualstudio.com/api/references/document-selector\n     */\n    documentSelectors: documentSelectorSchema,\n});\n", "import { z } from \"zod\";\nimport { Resource } from \"../ast/zod.js\";\nimport { zodIdeExtensionConfigSchema } from \"./ideExtension/zodSchema.js\";\n/**\n * The zod schema for the config.\n *\n * The zod schema can be used to parse and\n * validate the config schema. Read more\n * at https://zod.dev/\n */\nexport const zConfig = z.object({\n    referenceLanguage: z.string().transform((value) => value),\n    languages: z.array(z.string()).refine((items) => new Set(items).size === items.length, {\n        message: \"Languages contains duplicates. The provided languages must be unique.\",\n    }),\n    lint: z\n        .object({\n        rules: z.array(z.any()),\n    })\n        .optional(),\n    readResources: z\n        .function()\n        .args(z.any())\n        .returns(z.promise(z.array(Resource))),\n    writeResources: z.function().args(z.any()).returns(z.promise(z.void())),\n    ideExtension: zodIdeExtensionConfigSchema.optional(),\n    plugins: z.union([z.undefined(), z.array(z.object({ id: z.string(), config: z.function() }))]),\n    // TODO define lint and experimental\n});\n", "/**\n * Importing ES modules either from a local path, or from a url.\n *\n * The imported module must be ESM. A good indicator is whether\n * the \"type\" property in a package.json is set to \"module\" if\n * node is used.\n *\n * Read more on https://inlang.com/documentation/config\n */\n//\n// - explitcly export the interface of $import to be consumed\n//   in the config with JSdoc.\n//\n// - not using ReturnType or FunctionArguments to increase DX\n//   when hovering over the type.\nimport { dedent } from \"ts-dedent\";\nimport { normalizePath } from \"@inlang-git/fs\";\n/**\n * Initializes the $import function.\n *\n * @example\n * const $import = initialize$import({ fs: fs, fetch });\n * const module = await $import('./some-module.js');\n */\nexport function initialize$import(args) {\n    // resembles a native import api\n    return (uri) => $import(uri, args);\n}\n/**\n * Error thrown when the $import function fails.\n *\n * Dedicated class to make it easier to identify this error.\n */\nclass $ImportError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"$ImportError\";\n    }\n}\n/**\n * Importing ES modules either from a local path, or from a url.\n *\n * The imported module must be ESM. A good indicator is whether\n * the \"type\" property in a package.json is set to \"module\" if\n * node is used.\n *\n * Read more on https://inlang.com/documentation/config\n */\nasync function $import(uri, environment) {\n    // avoiding browser built-in shadowing of fetch as global variable\n    const _fetch = environment.fetch;\n    // polyfill for environments that don't support dynamic\n    // http imports yet like VSCode.\n    const moduleAsText = uri.startsWith(\"http\")\n        ? await (await _fetch(uri)).text()\n        : (await environment.fs.readFile(normalizePath(uri), { encoding: \"utf-8\" }));\n    const moduleWithMimeType = \"data:application/javascript,\" + encodeURIComponent(moduleAsText);\n    try {\n        return await import(/* @vite-ignore */ moduleWithMimeType);\n    }\n    catch (error) {\n        let message = `Error while importing ${uri}: ${error?.message ?? \"Unknown error\"}`;\n        if (error instanceof SyntaxError && uri.includes(\"jsdelivr\")) {\n            message += dedent `\\n\\n\nAre you sure that the file exists on JSDelivr?\n\nThe error indicates that the imported file does not exist on JSDelivr. For non-existent files, JSDelivr returns a 404 text that JS cannot parse as a module and throws a SyntaxError.\n\t\t\t`;\n        }\n        throw new $ImportError(message);\n    }\n}\n", "/*\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\nexport function normalizePath(path) {\n    if (path === \"\\\\\" || path === \"/\")\n        return \"/\";\n    const len = path.length;\n    if (len <= 1)\n        return path;\n    // ensure that win32 namespaces has two leading slashes, so that the path is\n    // handled properly by the win32 version of path.parse() after being normalized\n    // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n    let prefix = \"\";\n    if (len > 4 && path[3] === \"\\\\\") {\n        const ch = path[2];\n        if ((ch === \"?\" || ch === \".\") && path.slice(0, 2) === \"\\\\\\\\\") {\n            path = path.slice(2);\n            prefix = \"//\";\n        }\n    }\n    const segs = path.split(/[/\\\\]+/);\n    return prefix + segs.join(\"/\");\n}\n", "import type { $fs } from \"@inlang/core/environment\"\nimport { type InlangConfig, type InlangConfigModule, setupConfig } from \"@inlang/core/config\"\nimport { initialize$import, type InlangEnvironment } from \"@inlang/core/environment\"\nimport type { SdkConfig } from \"@inlang/sdk-js-plugin\"\nimport { dedent } from \"ts-dedent\"\nimport { InlangSdkException } from \"../adapter-sveltekit/vite-plugin/exceptions.js\"\n\nexport type InlangConfigWithSdkProps = InlangConfig & {\n\tsdk: SdkConfig\n}\n\nexport const initInlangEnvironment = async (): Promise<InlangEnvironment> => {\n\tconst fs = await import(\"node:fs/promises\").catch(\n\t\t() =>\n\t\t\tnew Proxy({} as $fs, {\n\t\t\t\tget: (target, key) => {\n\t\t\t\t\tif (key === \"then\") return Promise.resolve(target)\n\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tthrow new InlangSdkException(\n\t\t\t\t\t\t\t\"`node:fs/promises` is not available in the current environment\",\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t)\n\n\treturn {\n\t\t$fs: fs,\n\t\t$import: initialize$import({\n\t\t\tfs,\n\t\t\tfetch: async (...args) =>\n\t\t\t\tawait fetch(...args).catch((error) => {\n\t\t\t\t\t// TODO: create an issue\n\t\t\t\t\tif (\n\t\t\t\t\t\terror instanceof TypeError &&\n\t\t\t\t\t\t(error.cause as any)?.code === \"UND_ERR_CONNECT_TIMEOUT\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new InlangSdkException(\n\t\t\t\t\t\t\tdedent`\n\t\t\t\t\t\t\t\tNode.js failed to resolve the URL. This can happen sometimes during development.\n\t\t\t\t\t\t\t\tUsually restarting the server helps.\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new InlangSdkException(`Failed to fetch from (${args[0]})`, error)\n\t\t\t\t}),\n\t\t}),\n\t}\n}\n\nexport const initConfig = async (module: InlangConfigModule) => {\n\tif (!module) {\n\t\tthrow new InlangSdkException(\"could not read `inlang.config.js`\")\n\t}\n\tconst env = await initInlangEnvironment()\n\n\treturn setupConfig({ module, env })\n}\n", "export class InlangException extends Error {}\n", "import { InlangException } from \"../../exceptions.js\"\n\nexport class InlangSdkException extends InlangException {\n\tconstructor(message: string, override readonly cause?: Error) {\n\t\tsuper()\n\n\t\tthis.message = `\n\n--------------------------------------------------------------------------------\n\n[${this.constructor.name}]\n\n${message}\n\n--------------------------------------------------------------------------------\n\nCause:\n`\n\t}\n}\n", "var _TestConfigException_id;\nimport { parseConfig, ParseConfigException } from \"../config/parseConfig.js\";\n/**\n * @deprecated Use `ParseConfigException` from `@inlang/core/config` instead.\n */\nexport class TestConfigException extends Error {\n    constructor() {\n        super(...arguments);\n        _TestConfigException_id.set(this, \"TestConfigException\");\n    }\n}\n_TestConfigException_id = new WeakMap();\n/**\n * @deprecated Use `parseConfig` from `@inlang/core/config` instead.\n */\nexport const testConfig = (...args) => {\n    try {\n        return parseConfig(...args);\n    }\n    catch (error) {\n        if (error instanceof ParseConfigException)\n            throw new TestConfigException(error.message);\n        throw error;\n    }\n};\n", "import { setupConfig } from \"../config/setupConfig.js\";\nimport { parseConfig, ParseConfigException } from \"../config/parseConfig.js\";\n/**\n * Validates the inlang.config.js file.\n *\n * If you only want to validate the config object,\n * use the `testConfig` function instead.\n *\n * @example\n * const [success, error] = await testConfigFile(args)\n */\nexport async function testConfigFile(args) {\n    try {\n        const [, importKeywordUsedException] = importKeywordUsed(args.file);\n        if (importKeywordUsedException) {\n            return [undefined, importKeywordUsedException];\n        }\n        const module = await import(\"data:application/javascript;base64,\" + btoa(args.file));\n        const config = await setupConfig({ module, env: args.env });\n        const [, exception] = await parseConfig({ config });\n        if (exception) {\n            return [undefined, exception];\n        }\n        return [true, undefined];\n    }\n    catch (e) {\n        return [undefined, new ParseConfigException(e.message)];\n    }\n}\n/**\n * Detects if the import keyword is used in the config file.\n */\nfunction importKeywordUsed(configFile) {\n    // This regex uses a negative lookbehind assertion (?<!...)\n    // to match import keywords that are not immediately preceded\n    // by a dollar sign. The \\b ensures that the regex matches\n    // only complete words.\n    // $import, and JSDoc import statements are allowed\n    const regex = /(?<!(\\$)|\\{|\\{\\s|\\{\\s\\s)import\\b/;\n    const hasError = regex.test(configFile);\n    if (hasError) {\n        return [\n            undefined,\n            new ParseConfigException(\"Regular import statements are not allowed inside `inlang.config.js`. Use `$import` of the inlang environment instead. See https://inlang.com/documentation/inlang-environment.\"),\n        ];\n    }\n    return [true, undefined];\n}\n", "import { createMemoryFs, normalizePath } from \"@inlang-git/fs\";\nimport { dedent } from \"ts-dedent\";\nimport { initialize$import } from \"../environment/$import.js\";\n/**\n * Initializes a mock environment.\n *\n * The mock environment uses a virtual file system (memoryFs). If\n * testing inlang depends on files in the local file system,\n * you can copy directories into the environment by providing\n * the `copyDirectory` argument.\n *\n * @param copyDirectory - if defined, copies directories (paths) into the environment\n */\nexport async function mockEnvironment(args) {\n    const $fs = createMemoryFs();\n    const $import = initialize$import({\n        fs: $fs,\n        fetch,\n    });\n    const env = {\n        $fs,\n        $import,\n    };\n    if (args.copyDirectory) {\n        for (const path of args.copyDirectory.paths) {\n            await copyDirectory({ copyFrom: args.copyDirectory.fs, copyTo: $fs, path });\n        }\n    }\n    return env;\n}\n/**\n * Copies a directory from one fs to another.\n *\n * Useful for mocking the environment.\n */\nexport async function copyDirectory(args) {\n    try {\n        await args.copyFrom.readdir(args.path);\n    }\n    catch {\n        throw new Error(dedent `\nThe directory specified in \\`copyDirectory.path\\` \"${args.path}\" does not exist.\n\nSolution: Make sure that the \\`copyDirectory.path\\` is relative to the current working directory.\n\nContext: The path is relative to the current working directory, not the file that calls \\`mockEnvironment\\`.\n\t\t`);\n    }\n    // create directory\n    await args.copyTo.mkdir(args.path, { recursive: true });\n    const pathsInDirectory = await args.copyFrom.readdir(args.path);\n    for (const subpath of pathsInDirectory) {\n        // check if the path is a file\n        const path = normalizePath(`${args.path}/${subpath}`);\n        try {\n            const file = await args.copyFrom.readFile(path, { encoding: \"binary\" });\n            await args.copyTo.writeFile(path, file);\n        }\n        catch (err) {\n            await copyDirectory({ ...args, path });\n        }\n    }\n}\n", "var _;(function(s){s.assertEqual=r=>r;function e(r){}s.assertIs=e;function t(r){throw new Error}s.assertNever=t,s.arrayToEnum=r=>{let a={};for(let i of r)a[i]=i;return a},s.getValidEnumValues=r=>{let a=s.objectKeys(r).filter(o=>typeof r[r[o]]!=\"number\"),i={};for(let o of a)i[o]=r[o];return s.objectValues(i)},s.objectValues=r=>s.objectKeys(r).map(function(a){return r[a]}),s.objectKeys=typeof Object.keys==\"function\"?r=>Object.keys(r):r=>{let a=[];for(let i in r)Object.prototype.hasOwnProperty.call(r,i)&&a.push(i);return a},s.find=(r,a)=>{for(let i of r)if(a(i))return i},s.isInteger=typeof Number.isInteger==\"function\"?r=>Number.isInteger(r):r=>typeof r==\"number\"&&isFinite(r)&&Math.floor(r)===r;function n(r,a=\" | \"){return r.map(i=>typeof i==\"string\"?`'${i}'`:i).join(a)}s.joinValues=n,s.jsonStringifyReplacer=(r,a)=>typeof a==\"bigint\"?a.toString():a})(_||(_={}));var Te;(function(s){s.mergeShapes=(e,t)=>({...e,...t})})(Te||(Te={}));var d=_.arrayToEnum([\"string\",\"nan\",\"number\",\"integer\",\"float\",\"boolean\",\"date\",\"bigint\",\"symbol\",\"function\",\"undefined\",\"null\",\"array\",\"object\",\"unknown\",\"promise\",\"void\",\"never\",\"map\",\"set\"]),$=s=>{switch(typeof s){case\"undefined\":return d.undefined;case\"string\":return d.string;case\"number\":return isNaN(s)?d.nan:d.number;case\"boolean\":return d.boolean;case\"function\":return d.function;case\"bigint\":return d.bigint;case\"symbol\":return d.symbol;case\"object\":return Array.isArray(s)?d.array:s===null?d.null:s.then&&typeof s.then==\"function\"&&s.catch&&typeof s.catch==\"function\"?d.promise:typeof Map<\"u\"&&s instanceof Map?d.map:typeof Set<\"u\"&&s instanceof Set?d.set:typeof Date<\"u\"&&s instanceof Date?d.date:d.object;default:return d.unknown}},c=_.arrayToEnum([\"invalid_type\",\"invalid_literal\",\"custom\",\"invalid_union\",\"invalid_union_discriminator\",\"invalid_enum_value\",\"unrecognized_keys\",\"invalid_arguments\",\"invalid_return_type\",\"invalid_date\",\"invalid_string\",\"too_small\",\"too_big\",\"invalid_intersection_types\",\"not_multiple_of\",\"not_finite\"]);var S=class extends Error{constructor(e){super(),this.issues=[],this.addIssue=n=>{this.issues=[...this.issues,n]},this.addIssues=(n=[])=>{this.issues=[...this.issues,...n]};let t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name=\"ZodError\",this.issues=e}get errors(){return this.issues}format(e){let t=e||function(a){return a.message},n={_errors:[]},r=a=>{for(let i of a.issues)if(i.code===\"invalid_union\")i.unionErrors.map(r);else if(i.code===\"invalid_return_type\")r(i.returnTypeError);else if(i.code===\"invalid_arguments\")r(i.argumentsError);else if(i.path.length===0)n._errors.push(t(i));else{let o=n,f=0;for(;f<i.path.length;){let l=i.path[f];f===i.path.length-1?(o[l]=o[l]||{_errors:[]},o[l]._errors.push(t(i))):o[l]=o[l]||{_errors:[]},o=o[l],f++}}};return r(this),n}toString(){return this.message}get message(){return JSON.stringify(this.issues,_.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=t=>t.message){let t={},n=[];for(let r of this.issues)r.path.length>0?(t[r.path[0]]=t[r.path[0]]||[],t[r.path[0]].push(e(r))):n.push(e(r));return{formErrors:n,fieldErrors:t}}get formErrors(){return this.flatten()}};S.create=s=>new S(s);var le=(s,e)=>{let t;switch(s.code){case c.invalid_type:s.received===d.undefined?t=\"Required\":t=`Expected ${s.expected}, received ${s.received}`;break;case c.invalid_literal:t=`Invalid literal value, expected ${JSON.stringify(s.expected,_.jsonStringifyReplacer)}`;break;case c.unrecognized_keys:t=`Unrecognized key(s) in object: ${_.joinValues(s.keys,\", \")}`;break;case c.invalid_union:t=\"Invalid input\";break;case c.invalid_union_discriminator:t=`Invalid discriminator value. Expected ${_.joinValues(s.options)}`;break;case c.invalid_enum_value:t=`Invalid enum value. Expected ${_.joinValues(s.options)}, received '${s.received}'`;break;case c.invalid_arguments:t=\"Invalid function arguments\";break;case c.invalid_return_type:t=\"Invalid function return type\";break;case c.invalid_date:t=\"Invalid date\";break;case c.invalid_string:typeof s.validation==\"object\"?\"includes\"in s.validation?(t=`Invalid input: must include \"${s.validation.includes}\"`,typeof s.validation.position==\"number\"&&(t=`${t} at one or more positions greater than or equal to ${s.validation.position}`)):\"startsWith\"in s.validation?t=`Invalid input: must start with \"${s.validation.startsWith}\"`:\"endsWith\"in s.validation?t=`Invalid input: must end with \"${s.validation.endsWith}\"`:_.assertNever(s.validation):s.validation!==\"regex\"?t=`Invalid ${s.validation}`:t=\"Invalid\";break;case c.too_small:s.type===\"array\"?t=`Array must contain ${s.exact?\"exactly\":s.inclusive?\"at least\":\"more than\"} ${s.minimum} element(s)`:s.type===\"string\"?t=`String must contain ${s.exact?\"exactly\":s.inclusive?\"at least\":\"over\"} ${s.minimum} character(s)`:s.type===\"number\"?t=`Number must be ${s.exact?\"exactly equal to \":s.inclusive?\"greater than or equal to \":\"greater than \"}${s.minimum}`:s.type===\"date\"?t=`Date must be ${s.exact?\"exactly equal to \":s.inclusive?\"greater than or equal to \":\"greater than \"}${new Date(Number(s.minimum))}`:t=\"Invalid input\";break;case c.too_big:s.type===\"array\"?t=`Array must contain ${s.exact?\"exactly\":s.inclusive?\"at most\":\"less than\"} ${s.maximum} element(s)`:s.type===\"string\"?t=`String must contain ${s.exact?\"exactly\":s.inclusive?\"at most\":\"under\"} ${s.maximum} character(s)`:s.type===\"number\"?t=`Number must be ${s.exact?\"exactly\":s.inclusive?\"less than or equal to\":\"less than\"} ${s.maximum}`:s.type===\"bigint\"?t=`BigInt must be ${s.exact?\"exactly\":s.inclusive?\"less than or equal to\":\"less than\"} ${s.maximum}`:s.type===\"date\"?t=`Date must be ${s.exact?\"exactly\":s.inclusive?\"smaller than or equal to\":\"smaller than\"} ${new Date(Number(s.maximum))}`:t=\"Invalid input\";break;case c.custom:t=\"Invalid input\";break;case c.invalid_intersection_types:t=\"Intersection results could not be merged\";break;case c.not_multiple_of:t=`Number must be a multiple of ${s.multipleOf}`;break;case c.not_finite:t=\"Number must be finite\";break;default:t=e.defaultError,_.assertNever(s)}return{message:t}},je=le;function pe(){return je}var me=s=>{let{data:e,path:t,errorMaps:n,issueData:r}=s,a=[...t,...r.path||[]],i={...r,path:a},o=\"\",f=n.filter(l=>!!l).slice().reverse();for(let l of f)o=l(i,{data:e,defaultError:o}).message;return{...r,path:a,message:r.message||o}};function u(s,e){let t=me({issueData:e,data:s.data,path:s.path,errorMaps:[s.common.contextualErrorMap,s.schemaErrorMap,pe(),le].filter(n=>!!n)});s.common.issues.push(t)}var k=class{constructor(){this.value=\"valid\"}dirty(){this.value===\"valid\"&&(this.value=\"dirty\")}abort(){this.value!==\"aborted\"&&(this.value=\"aborted\")}static mergeArray(e,t){let n=[];for(let r of t){if(r.status===\"aborted\")return m;r.status===\"dirty\"&&e.dirty(),n.push(r.value)}return{status:e.value,value:n}}static async mergeObjectAsync(e,t){let n=[];for(let r of t)n.push({key:await r.key,value:await r.value});return k.mergeObjectSync(e,n)}static mergeObjectSync(e,t){let n={};for(let r of t){let{key:a,value:i}=r;if(a.status===\"aborted\"||i.status===\"aborted\")return m;a.status===\"dirty\"&&e.dirty(),i.status===\"dirty\"&&e.dirty(),(typeof i.value<\"u\"||r.alwaysSet)&&(n[a.value]=i.value)}return{status:e.value,value:n}}},m=Object.freeze({status:\"aborted\"}),Re=s=>({status:\"dirty\",value:s}),b=s=>({status:\"valid\",value:s}),Se=s=>s.status===\"aborted\",Ce=s=>s.status===\"dirty\",ge=s=>s.status===\"valid\",ye=s=>typeof Promise<\"u\"&&s instanceof Promise,h;(function(s){s.errToObj=e=>typeof e==\"string\"?{message:e}:e||{},s.toString=e=>typeof e==\"string\"?e:e?.message})(h||(h={}));var N=class{constructor(e,t,n,r){this._cachedPath=[],this.parent=e,this.data=t,this._path=n,this._key=r}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},Ne=(s,e)=>{if(ge(e))return{success:!0,data:e.value};if(!s.common.issues.length)throw new Error(\"Validation failed but no issues detected.\");return{success:!1,get error(){if(this._error)return this._error;let t=new S(s.common.issues);return this._error=t,this._error}}};function g(s){if(!s)return{};let{errorMap:e,invalid_type_error:t,required_error:n,description:r}=s;if(e&&(t||n))throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);return e?{errorMap:e,description:r}:{errorMap:(i,o)=>i.code!==\"invalid_type\"?{message:o.defaultError}:typeof o.data>\"u\"?{message:n??o.defaultError}:{message:t??o.defaultError},description:r}}var v=class{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return $(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:$(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new k,ctx:{common:e.parent.common,data:e.data,parsedType:$(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){let t=this._parse(e);if(ye(t))throw new Error(\"Synchronous parse encountered promise.\");return t}_parseAsync(e){let t=this._parse(e);return Promise.resolve(t)}parse(e,t){let n=this.safeParse(e,t);if(n.success)return n.data;throw n.error}safeParse(e,t){var n;let r={common:{issues:[],async:(n=t?.async)!==null&&n!==void 0?n:!1,contextualErrorMap:t?.errorMap},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:$(e)},a=this._parseSync({data:e,path:r.path,parent:r});return Ne(r,a)}async parseAsync(e,t){let n=await this.safeParseAsync(e,t);if(n.success)return n.data;throw n.error}async safeParseAsync(e,t){let n={common:{issues:[],contextualErrorMap:t?.errorMap,async:!0},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:$(e)},r=this._parse({data:e,path:n.path,parent:n}),a=await(ye(r)?r:Promise.resolve(r));return Ne(n,a)}refine(e,t){let n=r=>typeof t==\"string\"||typeof t>\"u\"?{message:t}:typeof t==\"function\"?t(r):t;return this._refinement((r,a)=>{let i=e(r),o=()=>a.addIssue({code:c.custom,...n(r)});return typeof Promise<\"u\"&&i instanceof Promise?i.then(f=>f?!0:(o(),!1)):i?!0:(o(),!1)})}refinement(e,t){return this._refinement((n,r)=>e(n)?!0:(r.addIssue(typeof t==\"function\"?t(n,r):t),!1))}_refinement(e){return new I({schema:this,typeName:p.ZodEffects,effect:{type:\"refinement\",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return j.create(this,this._def)}nullable(){return V.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return C.create(this,this._def)}promise(){return U.create(this,this._def)}or(e){return Y.create([this,e],this._def)}and(e){return H.create(this,e,this._def)}transform(e){return new I({...g(this._def),schema:this,typeName:p.ZodEffects,effect:{type:\"transform\",transform:e}})}default(e){let t=typeof e==\"function\"?e:()=>e;return new F({...g(this._def),innerType:this,defaultValue:t,typeName:p.ZodDefault})}brand(){return new _e({typeName:p.ZodBranded,type:this,...g(this._def)})}catch(e){let t=typeof e==\"function\"?e:()=>e;return new ce({...g(this._def),innerType:this,catchValue:t,typeName:p.ZodCatch})}describe(e){let t=this.constructor;return new t({...this._def,description:e})}pipe(e){return ee.create(this,e)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},Ae=/^c[^\\s-]{8,}$/i,Ze=/^[a-z][a-z0-9]*$/,Me=/[0-9A-HJKMNP-TV-Z]{26}/,Pe=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i,ze=/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/,Ve=/^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u,$e=/^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,Le=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,De=s=>s.precision?s.offset?new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${s.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`):new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${s.precision}}Z$`):s.precision===0?s.offset?new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$\"):new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$\"):s.offset?new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$\"):new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$\");function Ue(s,e){return!!((e===\"v4\"||!e)&&$e.test(s)||(e===\"v6\"||!e)&&Le.test(s))}var O=class extends v{constructor(){super(...arguments),this._regex=(e,t,n)=>this.refinement(r=>e.test(r),{validation:t,code:c.invalid_string,...h.errToObj(n)}),this.nonempty=e=>this.min(1,h.errToObj(e)),this.trim=()=>new O({...this._def,checks:[...this._def.checks,{kind:\"trim\"}]}),this.toLowerCase=()=>new O({...this._def,checks:[...this._def.checks,{kind:\"toLowerCase\"}]}),this.toUpperCase=()=>new O({...this._def,checks:[...this._def.checks,{kind:\"toUpperCase\"}]})}_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==d.string){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.string,received:a.parsedType}),m}let n=new k,r;for(let a of this._def.checks)if(a.kind===\"min\")e.data.length<a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_small,minimum:a.value,type:\"string\",inclusive:!0,exact:!1,message:a.message}),n.dirty());else if(a.kind===\"max\")e.data.length>a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_big,maximum:a.value,type:\"string\",inclusive:!0,exact:!1,message:a.message}),n.dirty());else if(a.kind===\"length\"){let i=e.data.length>a.value,o=e.data.length<a.value;(i||o)&&(r=this._getOrReturnCtx(e,r),i?u(r,{code:c.too_big,maximum:a.value,type:\"string\",inclusive:!0,exact:!0,message:a.message}):o&&u(r,{code:c.too_small,minimum:a.value,type:\"string\",inclusive:!0,exact:!0,message:a.message}),n.dirty())}else if(a.kind===\"email\")ze.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"email\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"emoji\")Ve.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"emoji\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"uuid\")Pe.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"uuid\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"cuid\")Ae.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"cuid\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"cuid2\")Ze.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"cuid2\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"ulid\")Me.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"ulid\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"url\")try{new URL(e.data)}catch{r=this._getOrReturnCtx(e,r),u(r,{validation:\"url\",code:c.invalid_string,message:a.message}),n.dirty()}else a.kind===\"regex\"?(a.regex.lastIndex=0,a.regex.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"regex\",code:c.invalid_string,message:a.message}),n.dirty())):a.kind===\"trim\"?e.data=e.data.trim():a.kind===\"includes\"?e.data.includes(a.value,a.position)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:{includes:a.value,position:a.position},message:a.message}),n.dirty()):a.kind===\"toLowerCase\"?e.data=e.data.toLowerCase():a.kind===\"toUpperCase\"?e.data=e.data.toUpperCase():a.kind===\"startsWith\"?e.data.startsWith(a.value)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:{startsWith:a.value},message:a.message}),n.dirty()):a.kind===\"endsWith\"?e.data.endsWith(a.value)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:{endsWith:a.value},message:a.message}),n.dirty()):a.kind===\"datetime\"?De(a).test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:\"datetime\",message:a.message}),n.dirty()):a.kind===\"ip\"?Ue(e.data,a.version)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"ip\",code:c.invalid_string,message:a.message}),n.dirty()):_.assertNever(a);return{status:n.value,value:e.data}}_addCheck(e){return new O({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:\"email\",...h.errToObj(e)})}url(e){return this._addCheck({kind:\"url\",...h.errToObj(e)})}emoji(e){return this._addCheck({kind:\"emoji\",...h.errToObj(e)})}uuid(e){return this._addCheck({kind:\"uuid\",...h.errToObj(e)})}cuid(e){return this._addCheck({kind:\"cuid\",...h.errToObj(e)})}cuid2(e){return this._addCheck({kind:\"cuid2\",...h.errToObj(e)})}ulid(e){return this._addCheck({kind:\"ulid\",...h.errToObj(e)})}ip(e){return this._addCheck({kind:\"ip\",...h.errToObj(e)})}datetime(e){var t;return typeof e==\"string\"?this._addCheck({kind:\"datetime\",precision:null,offset:!1,message:e}):this._addCheck({kind:\"datetime\",precision:typeof e?.precision>\"u\"?null:e?.precision,offset:(t=e?.offset)!==null&&t!==void 0?t:!1,...h.errToObj(e?.message)})}regex(e,t){return this._addCheck({kind:\"regex\",regex:e,...h.errToObj(t)})}includes(e,t){return this._addCheck({kind:\"includes\",value:e,position:t?.position,...h.errToObj(t?.message)})}startsWith(e,t){return this._addCheck({kind:\"startsWith\",value:e,...h.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:\"endsWith\",value:e,...h.errToObj(t)})}min(e,t){return this._addCheck({kind:\"min\",value:e,...h.errToObj(t)})}max(e,t){return this._addCheck({kind:\"max\",value:e,...h.errToObj(t)})}length(e,t){return this._addCheck({kind:\"length\",value:e,...h.errToObj(t)})}get isDatetime(){return!!this._def.checks.find(e=>e.kind===\"datetime\")}get isEmail(){return!!this._def.checks.find(e=>e.kind===\"email\")}get isURL(){return!!this._def.checks.find(e=>e.kind===\"url\")}get isEmoji(){return!!this._def.checks.find(e=>e.kind===\"emoji\")}get isUUID(){return!!this._def.checks.find(e=>e.kind===\"uuid\")}get isCUID(){return!!this._def.checks.find(e=>e.kind===\"cuid\")}get isCUID2(){return!!this._def.checks.find(e=>e.kind===\"cuid2\")}get isULID(){return!!this._def.checks.find(e=>e.kind===\"ulid\")}get isIP(){return!!this._def.checks.find(e=>e.kind===\"ip\")}get minLength(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}};O.create=s=>{var e;return new O({checks:[],typeName:p.ZodString,coerce:(e=s?.coerce)!==null&&e!==void 0?e:!1,...g(s)})};function Be(s,e){let t=(s.toString().split(\".\")[1]||\"\").length,n=(e.toString().split(\".\")[1]||\"\").length,r=t>n?t:n,a=parseInt(s.toFixed(r).replace(\".\",\"\")),i=parseInt(e.toFixed(r).replace(\".\",\"\"));return a%i/Math.pow(10,r)}var M=class extends v{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==d.number){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.number,received:a.parsedType}),m}let n,r=new k;for(let a of this._def.checks)a.kind===\"int\"?_.isInteger(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{code:c.invalid_type,expected:\"integer\",received:\"float\",message:a.message}),r.dirty()):a.kind===\"min\"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_small,minimum:a.value,type:\"number\",inclusive:a.inclusive,exact:!1,message:a.message}),r.dirty()):a.kind===\"max\"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_big,maximum:a.value,type:\"number\",inclusive:a.inclusive,exact:!1,message:a.message}),r.dirty()):a.kind===\"multipleOf\"?Be(e.data,a.value)!==0&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):a.kind===\"finite\"?Number.isFinite(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{code:c.not_finite,message:a.message}),r.dirty()):_.assertNever(a);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit(\"min\",e,!0,h.toString(t))}gt(e,t){return this.setLimit(\"min\",e,!1,h.toString(t))}lte(e,t){return this.setLimit(\"max\",e,!0,h.toString(t))}lt(e,t){return this.setLimit(\"max\",e,!1,h.toString(t))}setLimit(e,t,n,r){return new M({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:h.toString(r)}]})}_addCheck(e){return new M({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:\"int\",message:h.toString(e)})}positive(e){return this._addCheck({kind:\"min\",value:0,inclusive:!1,message:h.toString(e)})}negative(e){return this._addCheck({kind:\"max\",value:0,inclusive:!1,message:h.toString(e)})}nonpositive(e){return this._addCheck({kind:\"max\",value:0,inclusive:!0,message:h.toString(e)})}nonnegative(e){return this._addCheck({kind:\"min\",value:0,inclusive:!0,message:h.toString(e)})}multipleOf(e,t){return this._addCheck({kind:\"multipleOf\",value:e,message:h.toString(t)})}finite(e){return this._addCheck({kind:\"finite\",message:h.toString(e)})}safe(e){return this._addCheck({kind:\"min\",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:h.toString(e)})._addCheck({kind:\"max\",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:h.toString(e)})}get minValue(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find(e=>e.kind===\"int\"||e.kind===\"multipleOf\"&&_.isInteger(e.value))}get isFinite(){let e=null,t=null;for(let n of this._def.checks){if(n.kind===\"finite\"||n.kind===\"int\"||n.kind===\"multipleOf\")return!0;n.kind===\"min\"?(t===null||n.value>t)&&(t=n.value):n.kind===\"max\"&&(e===null||n.value<e)&&(e=n.value)}return Number.isFinite(t)&&Number.isFinite(e)}};M.create=s=>new M({checks:[],typeName:p.ZodNumber,coerce:s?.coerce||!1,...g(s)});var P=class extends v{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==d.bigint){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.bigint,received:a.parsedType}),m}let n,r=new k;for(let a of this._def.checks)a.kind===\"min\"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_small,type:\"bigint\",minimum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty()):a.kind===\"max\"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_big,type:\"bigint\",maximum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty()):a.kind===\"multipleOf\"?e.data%a.value!==BigInt(0)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):_.assertNever(a);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit(\"min\",e,!0,h.toString(t))}gt(e,t){return this.setLimit(\"min\",e,!1,h.toString(t))}lte(e,t){return this.setLimit(\"max\",e,!0,h.toString(t))}lt(e,t){return this.setLimit(\"max\",e,!1,h.toString(t))}setLimit(e,t,n,r){return new P({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:h.toString(r)}]})}_addCheck(e){return new P({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:\"min\",value:BigInt(0),inclusive:!1,message:h.toString(e)})}negative(e){return this._addCheck({kind:\"max\",value:BigInt(0),inclusive:!1,message:h.toString(e)})}nonpositive(e){return this._addCheck({kind:\"max\",value:BigInt(0),inclusive:!0,message:h.toString(e)})}nonnegative(e){return this._addCheck({kind:\"min\",value:BigInt(0),inclusive:!0,message:h.toString(e)})}multipleOf(e,t){return this._addCheck({kind:\"multipleOf\",value:e,message:h.toString(t)})}get minValue(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}};P.create=s=>{var e;return new P({checks:[],typeName:p.ZodBigInt,coerce:(e=s?.coerce)!==null&&e!==void 0?e:!1,...g(s)})};var se=class extends v{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==d.boolean){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.boolean,received:n.parsedType}),m}return b(e.data)}};se.create=s=>new se({typeName:p.ZodBoolean,coerce:s?.coerce||!1,...g(s)});var D=class extends v{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==d.date){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.date,received:a.parsedType}),m}if(isNaN(e.data.getTime())){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_date}),m}let n=new k,r;for(let a of this._def.checks)a.kind===\"min\"?e.data.getTime()<a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_small,message:a.message,inclusive:!0,exact:!1,minimum:a.value,type:\"date\"}),n.dirty()):a.kind===\"max\"?e.data.getTime()>a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_big,message:a.message,inclusive:!0,exact:!1,maximum:a.value,type:\"date\"}),n.dirty()):_.assertNever(a);return{status:n.value,value:new Date(e.data.getTime())}}_addCheck(e){return new D({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:\"min\",value:e.getTime(),message:h.toString(t)})}max(e,t){return this._addCheck({kind:\"max\",value:e.getTime(),message:h.toString(t)})}get minDate(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e!=null?new Date(e):null}get maxDate(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e!=null?new Date(e):null}};D.create=s=>new D({checks:[],coerce:s?.coerce||!1,typeName:p.ZodDate,...g(s)});var ne=class extends v{_parse(e){if(this._getType(e)!==d.symbol){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.symbol,received:n.parsedType}),m}return b(e.data)}};ne.create=s=>new ne({typeName:p.ZodSymbol,...g(s)});var q=class extends v{_parse(e){if(this._getType(e)!==d.undefined){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.undefined,received:n.parsedType}),m}return b(e.data)}};q.create=s=>new q({typeName:p.ZodUndefined,...g(s)});var J=class extends v{_parse(e){if(this._getType(e)!==d.null){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.null,received:n.parsedType}),m}return b(e.data)}};J.create=s=>new J({typeName:p.ZodNull,...g(s)});var re=class extends v{constructor(){super(...arguments),this._any=!0}_parse(e){return b(e.data)}};re.create=s=>new re({typeName:p.ZodAny,...g(s)});var Z=class extends v{constructor(){super(...arguments),this._unknown=!0}_parse(e){return b(e.data)}};Z.create=s=>new Z({typeName:p.ZodUnknown,...g(s)});var R=class extends v{_parse(e){let t=this._getOrReturnCtx(e);return u(t,{code:c.invalid_type,expected:d.never,received:t.parsedType}),m}};R.create=s=>new R({typeName:p.ZodNever,...g(s)});var ae=class extends v{_parse(e){if(this._getType(e)!==d.undefined){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.void,received:n.parsedType}),m}return b(e.data)}};ae.create=s=>new ae({typeName:p.ZodVoid,...g(s)});var C=class extends v{_parse(e){let{ctx:t,status:n}=this._processInputParams(e),r=this._def;if(t.parsedType!==d.array)return u(t,{code:c.invalid_type,expected:d.array,received:t.parsedType}),m;if(r.exactLength!==null){let i=t.data.length>r.exactLength.value,o=t.data.length<r.exactLength.value;(i||o)&&(u(t,{code:i?c.too_big:c.too_small,minimum:o?r.exactLength.value:void 0,maximum:i?r.exactLength.value:void 0,type:\"array\",inclusive:!0,exact:!0,message:r.exactLength.message}),n.dirty())}if(r.minLength!==null&&t.data.length<r.minLength.value&&(u(t,{code:c.too_small,minimum:r.minLength.value,type:\"array\",inclusive:!0,exact:!1,message:r.minLength.message}),n.dirty()),r.maxLength!==null&&t.data.length>r.maxLength.value&&(u(t,{code:c.too_big,maximum:r.maxLength.value,type:\"array\",inclusive:!0,exact:!1,message:r.maxLength.message}),n.dirty()),t.common.async)return Promise.all([...t.data].map((i,o)=>r.type._parseAsync(new N(t,i,t.path,o)))).then(i=>k.mergeArray(n,i));let a=[...t.data].map((i,o)=>r.type._parseSync(new N(t,i,t.path,o)));return k.mergeArray(n,a)}get element(){return this._def.type}min(e,t){return new C({...this._def,minLength:{value:e,message:h.toString(t)}})}max(e,t){return new C({...this._def,maxLength:{value:e,message:h.toString(t)}})}length(e,t){return new C({...this._def,exactLength:{value:e,message:h.toString(t)}})}nonempty(e){return this.min(1,e)}};C.create=(s,e)=>new C({type:s,minLength:null,maxLength:null,exactLength:null,typeName:p.ZodArray,...g(e)});function W(s){if(s instanceof x){let e={};for(let t in s.shape){let n=s.shape[t];e[t]=j.create(W(n))}return new x({...s._def,shape:()=>e})}else return s instanceof C?new C({...s._def,type:W(s.element)}):s instanceof j?j.create(W(s.unwrap())):s instanceof V?V.create(W(s.unwrap())):s instanceof E?E.create(s.items.map(e=>W(e))):s}var x=class extends v{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;let e=this._def.shape(),t=_.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==d.object){let l=this._getOrReturnCtx(e);return u(l,{code:c.invalid_type,expected:d.object,received:l.parsedType}),m}let{status:n,ctx:r}=this._processInputParams(e),{shape:a,keys:i}=this._getCached(),o=[];if(!(this._def.catchall instanceof R&&this._def.unknownKeys===\"strip\"))for(let l in r.data)i.includes(l)||o.push(l);let f=[];for(let l of i){let y=a[l],B=r.data[l];f.push({key:{status:\"valid\",value:l},value:y._parse(new N(r,B,r.path,l)),alwaysSet:l in r.data})}if(this._def.catchall instanceof R){let l=this._def.unknownKeys;if(l===\"passthrough\")for(let y of o)f.push({key:{status:\"valid\",value:y},value:{status:\"valid\",value:r.data[y]}});else if(l===\"strict\")o.length>0&&(u(r,{code:c.unrecognized_keys,keys:o}),n.dirty());else if(l!==\"strip\")throw new Error(\"Internal ZodObject error: invalid unknownKeys value.\")}else{let l=this._def.catchall;for(let y of o){let B=r.data[y];f.push({key:{status:\"valid\",value:y},value:l._parse(new N(r,B,r.path,y)),alwaysSet:y in r.data})}}return r.common.async?Promise.resolve().then(async()=>{let l=[];for(let y of f){let B=await y.key;l.push({key:B,value:await y.value,alwaysSet:y.alwaysSet})}return l}).then(l=>k.mergeObjectSync(n,l)):k.mergeObjectSync(n,f)}get shape(){return this._def.shape()}strict(e){return h.errToObj,new x({...this._def,unknownKeys:\"strict\",...e!==void 0?{errorMap:(t,n)=>{var r,a,i,o;let f=(i=(a=(r=this._def).errorMap)===null||a===void 0?void 0:a.call(r,t,n).message)!==null&&i!==void 0?i:n.defaultError;return t.code===\"unrecognized_keys\"?{message:(o=h.errToObj(e).message)!==null&&o!==void 0?o:f}:{message:f}}}:{}})}strip(){return new x({...this._def,unknownKeys:\"strip\"})}passthrough(){return new x({...this._def,unknownKeys:\"passthrough\"})}extend(e){return new x({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new x({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:p.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new x({...this._def,catchall:e})}pick(e){let t={};return _.objectKeys(e).forEach(n=>{e[n]&&this.shape[n]&&(t[n]=this.shape[n])}),new x({...this._def,shape:()=>t})}omit(e){let t={};return _.objectKeys(this.shape).forEach(n=>{e[n]||(t[n]=this.shape[n])}),new x({...this._def,shape:()=>t})}deepPartial(){return W(this)}partial(e){let t={};return _.objectKeys(this.shape).forEach(n=>{let r=this.shape[n];e&&!e[n]?t[n]=r:t[n]=r.optional()}),new x({...this._def,shape:()=>t})}required(e){let t={};return _.objectKeys(this.shape).forEach(n=>{if(e&&!e[n])t[n]=this.shape[n];else{let a=this.shape[n];for(;a instanceof j;)a=a._def.innerType;t[n]=a}}),new x({...this._def,shape:()=>t})}keyof(){return Oe(_.objectKeys(this.shape))}};x.create=(s,e)=>new x({shape:()=>s,unknownKeys:\"strip\",catchall:R.create(),typeName:p.ZodObject,...g(e)});x.strictCreate=(s,e)=>new x({shape:()=>s,unknownKeys:\"strict\",catchall:R.create(),typeName:p.ZodObject,...g(e)});x.lazycreate=(s,e)=>new x({shape:s,unknownKeys:\"strip\",catchall:R.create(),typeName:p.ZodObject,...g(e)});var Y=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n=this._def.options;function r(a){for(let o of a)if(o.result.status===\"valid\")return o.result;for(let o of a)if(o.result.status===\"dirty\")return t.common.issues.push(...o.ctx.common.issues),o.result;let i=a.map(o=>new S(o.ctx.common.issues));return u(t,{code:c.invalid_union,unionErrors:i}),m}if(t.common.async)return Promise.all(n.map(async a=>{let i={...t,common:{...t.common,issues:[]},parent:null};return{result:await a._parseAsync({data:t.data,path:t.path,parent:i}),ctx:i}})).then(r);{let a,i=[];for(let f of n){let l={...t,common:{...t.common,issues:[]},parent:null},y=f._parseSync({data:t.data,path:t.path,parent:l});if(y.status===\"valid\")return y;y.status===\"dirty\"&&!a&&(a={result:y,ctx:l}),l.common.issues.length&&i.push(l.common.issues)}if(a)return t.common.issues.push(...a.ctx.common.issues),a.result;let o=i.map(f=>new S(f));return u(t,{code:c.invalid_union,unionErrors:o}),m}}get options(){return this._def.options}};Y.create=(s,e)=>new Y({options:s,typeName:p.ZodUnion,...g(e)});var ue=s=>s instanceof Q?ue(s.schema):s instanceof I?ue(s.innerType()):s instanceof X?[s.value]:s instanceof A?s.options:s instanceof K?Object.keys(s.enum):s instanceof F?ue(s._def.innerType):s instanceof q?[void 0]:s instanceof J?[null]:null,ie=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==d.object)return u(t,{code:c.invalid_type,expected:d.object,received:t.parsedType}),m;let n=this.discriminator,r=t.data[n],a=this.optionsMap.get(r);return a?t.common.async?a._parseAsync({data:t.data,path:t.path,parent:t}):a._parseSync({data:t.data,path:t.path,parent:t}):(u(t,{code:c.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[n]}),m)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,n){let r=new Map;for(let a of t){let i=ue(a.shape[e]);if(!i)throw new Error(`A discriminator value for key \\`${e}\\` could not be extracted from all schema options`);for(let o of i){if(r.has(o))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(o)}`);r.set(o,a)}}return new ie({typeName:p.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:r,...g(n)})}};function ve(s,e){let t=$(s),n=$(e);if(s===e)return{valid:!0,data:s};if(t===d.object&&n===d.object){let r=_.objectKeys(e),a=_.objectKeys(s).filter(o=>r.indexOf(o)!==-1),i={...s,...e};for(let o of a){let f=ve(s[o],e[o]);if(!f.valid)return{valid:!1};i[o]=f.data}return{valid:!0,data:i}}else if(t===d.array&&n===d.array){if(s.length!==e.length)return{valid:!1};let r=[];for(let a=0;a<s.length;a++){let i=s[a],o=e[a],f=ve(i,o);if(!f.valid)return{valid:!1};r.push(f.data)}return{valid:!0,data:r}}else return t===d.date&&n===d.date&&+s==+e?{valid:!0,data:s}:{valid:!1}}var H=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e),r=(a,i)=>{if(Se(a)||Se(i))return m;let o=ve(a.value,i.value);return o.valid?((Ce(a)||Ce(i))&&t.dirty(),{status:t.value,value:o.data}):(u(n,{code:c.invalid_intersection_types}),m)};return n.common.async?Promise.all([this._def.left._parseAsync({data:n.data,path:n.path,parent:n}),this._def.right._parseAsync({data:n.data,path:n.path,parent:n})]).then(([a,i])=>r(a,i)):r(this._def.left._parseSync({data:n.data,path:n.path,parent:n}),this._def.right._parseSync({data:n.data,path:n.path,parent:n}))}};H.create=(s,e,t)=>new H({left:s,right:e,typeName:p.ZodIntersection,...g(t)});var E=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.array)return u(n,{code:c.invalid_type,expected:d.array,received:n.parsedType}),m;if(n.data.length<this._def.items.length)return u(n,{code:c.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:\"array\"}),m;!this._def.rest&&n.data.length>this._def.items.length&&(u(n,{code:c.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:\"array\"}),t.dirty());let a=[...n.data].map((i,o)=>{let f=this._def.items[o]||this._def.rest;return f?f._parse(new N(n,i,n.path,o)):null}).filter(i=>!!i);return n.common.async?Promise.all(a).then(i=>k.mergeArray(t,i)):k.mergeArray(t,a)}get items(){return this._def.items}rest(e){return new E({...this._def,rest:e})}};E.create=(s,e)=>{if(!Array.isArray(s))throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");return new E({items:s,typeName:p.ZodTuple,rest:null,...g(e)})};var G=class extends v{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.object)return u(n,{code:c.invalid_type,expected:d.object,received:n.parsedType}),m;let r=[],a=this._def.keyType,i=this._def.valueType;for(let o in n.data)r.push({key:a._parse(new N(n,o,n.path,o)),value:i._parse(new N(n,n.data[o],n.path,o))});return n.common.async?k.mergeObjectAsync(t,r):k.mergeObjectSync(t,r)}get element(){return this._def.valueType}static create(e,t,n){return t instanceof v?new G({keyType:e,valueType:t,typeName:p.ZodRecord,...g(n)}):new G({keyType:O.create(),valueType:e,typeName:p.ZodRecord,...g(t)})}},oe=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.map)return u(n,{code:c.invalid_type,expected:d.map,received:n.parsedType}),m;let r=this._def.keyType,a=this._def.valueType,i=[...n.data.entries()].map(([o,f],l)=>({key:r._parse(new N(n,o,n.path,[l,\"key\"])),value:a._parse(new N(n,f,n.path,[l,\"value\"]))}));if(n.common.async){let o=new Map;return Promise.resolve().then(async()=>{for(let f of i){let l=await f.key,y=await f.value;if(l.status===\"aborted\"||y.status===\"aborted\")return m;(l.status===\"dirty\"||y.status===\"dirty\")&&t.dirty(),o.set(l.value,y.value)}return{status:t.value,value:o}})}else{let o=new Map;for(let f of i){let l=f.key,y=f.value;if(l.status===\"aborted\"||y.status===\"aborted\")return m;(l.status===\"dirty\"||y.status===\"dirty\")&&t.dirty(),o.set(l.value,y.value)}return{status:t.value,value:o}}}};oe.create=(s,e,t)=>new oe({valueType:e,keyType:s,typeName:p.ZodMap,...g(t)});var z=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.set)return u(n,{code:c.invalid_type,expected:d.set,received:n.parsedType}),m;let r=this._def;r.minSize!==null&&n.data.size<r.minSize.value&&(u(n,{code:c.too_small,minimum:r.minSize.value,type:\"set\",inclusive:!0,exact:!1,message:r.minSize.message}),t.dirty()),r.maxSize!==null&&n.data.size>r.maxSize.value&&(u(n,{code:c.too_big,maximum:r.maxSize.value,type:\"set\",inclusive:!0,exact:!1,message:r.maxSize.message}),t.dirty());let a=this._def.valueType;function i(f){let l=new Set;for(let y of f){if(y.status===\"aborted\")return m;y.status===\"dirty\"&&t.dirty(),l.add(y.value)}return{status:t.value,value:l}}let o=[...n.data.values()].map((f,l)=>a._parse(new N(n,f,n.path,l)));return n.common.async?Promise.all(o).then(f=>i(f)):i(o)}min(e,t){return new z({...this._def,minSize:{value:e,message:h.toString(t)}})}max(e,t){return new z({...this._def,maxSize:{value:e,message:h.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}};z.create=(s,e)=>new z({valueType:s,minSize:null,maxSize:null,typeName:p.ZodSet,...g(e)});var L=class extends v{constructor(){super(...arguments),this.validate=this.implement}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==d.function)return u(t,{code:c.invalid_type,expected:d.function,received:t.parsedType}),m;function n(o,f){return me({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,pe(),le].filter(l=>!!l),issueData:{code:c.invalid_arguments,argumentsError:f}})}function r(o,f){return me({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,pe(),le].filter(l=>!!l),issueData:{code:c.invalid_return_type,returnTypeError:f}})}let a={errorMap:t.common.contextualErrorMap},i=t.data;return this._def.returns instanceof U?b(async(...o)=>{let f=new S([]),l=await this._def.args.parseAsync(o,a).catch(he=>{throw f.addIssue(n(o,he)),f}),y=await i(...l);return await this._def.returns._def.type.parseAsync(y,a).catch(he=>{throw f.addIssue(r(y,he)),f})}):b((...o)=>{let f=this._def.args.safeParse(o,a);if(!f.success)throw new S([n(o,f.error)]);let l=i(...f.data),y=this._def.returns.safeParse(l,a);if(!y.success)throw new S([r(l,y.error)]);return y.data})}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new L({...this._def,args:E.create(e).rest(Z.create())})}returns(e){return new L({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,n){return new L({args:e||E.create([]).rest(Z.create()),returns:t||Z.create(),typeName:p.ZodFunction,...g(n)})}},Q=class extends v{get schema(){return this._def.getter()}_parse(e){let{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}};Q.create=(s,e)=>new Q({getter:s,typeName:p.ZodLazy,...g(e)});var X=class extends v{_parse(e){if(e.data!==this._def.value){let t=this._getOrReturnCtx(e);return u(t,{received:t.data,code:c.invalid_literal,expected:this._def.value}),m}return{status:\"valid\",value:e.data}}get value(){return this._def.value}};X.create=(s,e)=>new X({value:s,typeName:p.ZodLiteral,...g(e)});function Oe(s,e){return new A({values:s,typeName:p.ZodEnum,...g(e)})}var A=class extends v{_parse(e){if(typeof e.data!=\"string\"){let t=this._getOrReturnCtx(e),n=this._def.values;return u(t,{expected:_.joinValues(n),received:t.parsedType,code:c.invalid_type}),m}if(this._def.values.indexOf(e.data)===-1){let t=this._getOrReturnCtx(e),n=this._def.values;return u(t,{received:t.data,code:c.invalid_enum_value,options:n}),m}return b(e.data)}get options(){return this._def.values}get enum(){let e={};for(let t of this._def.values)e[t]=t;return e}get Values(){let e={};for(let t of this._def.values)e[t]=t;return e}get Enum(){let e={};for(let t of this._def.values)e[t]=t;return e}extract(e){return A.create(e)}exclude(e){return A.create(this.options.filter(t=>!e.includes(t)))}};A.create=Oe;var K=class extends v{_parse(e){let t=_.getValidEnumValues(this._def.values),n=this._getOrReturnCtx(e);if(n.parsedType!==d.string&&n.parsedType!==d.number){let r=_.objectValues(t);return u(n,{expected:_.joinValues(r),received:n.parsedType,code:c.invalid_type}),m}if(t.indexOf(e.data)===-1){let r=_.objectValues(t);return u(n,{received:n.data,code:c.invalid_enum_value,options:r}),m}return b(e.data)}get enum(){return this._def.values}};K.create=(s,e)=>new K({values:s,typeName:p.ZodNativeEnum,...g(e)});var U=class extends v{unwrap(){return this._def.type}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==d.promise&&t.common.async===!1)return u(t,{code:c.invalid_type,expected:d.promise,received:t.parsedType}),m;let n=t.parsedType===d.promise?t.data:Promise.resolve(t.data);return b(n.then(r=>this._def.type.parseAsync(r,{path:t.path,errorMap:t.common.contextualErrorMap})))}};U.create=(s,e)=>new U({type:s,typeName:p.ZodPromise,...g(e)});var I=class extends v{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===p.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){let{status:t,ctx:n}=this._processInputParams(e),r=this._def.effect||null;if(r.type===\"preprocess\"){let i=r.transform(n.data);return n.common.async?Promise.resolve(i).then(o=>this._def.schema._parseAsync({data:o,path:n.path,parent:n})):this._def.schema._parseSync({data:i,path:n.path,parent:n})}let a={addIssue:i=>{u(n,i),i.fatal?t.abort():t.dirty()},get path(){return n.path}};if(a.addIssue=a.addIssue.bind(a),r.type===\"refinement\"){let i=o=>{let f=r.refinement(o,a);if(n.common.async)return Promise.resolve(f);if(f instanceof Promise)throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");return o};if(n.common.async===!1){let o=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});return o.status===\"aborted\"?m:(o.status===\"dirty\"&&t.dirty(),i(o.value),{status:t.value,value:o.value})}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(o=>o.status===\"aborted\"?m:(o.status===\"dirty\"&&t.dirty(),i(o.value).then(()=>({status:t.value,value:o.value}))))}if(r.type===\"transform\")if(n.common.async===!1){let i=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});if(!ge(i))return i;let o=r.transform(i.value,a);if(o instanceof Promise)throw new Error(\"Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.\");return{status:t.value,value:o}}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(i=>ge(i)?Promise.resolve(r.transform(i.value,a)).then(o=>({status:t.value,value:o})):i);_.assertNever(r)}};I.create=(s,e,t)=>new I({schema:s,typeName:p.ZodEffects,effect:e,...g(t)});I.createWithPreprocess=(s,e,t)=>new I({schema:e,effect:{type:\"preprocess\",transform:s},typeName:p.ZodEffects,...g(t)});var j=class extends v{_parse(e){return this._getType(e)===d.undefined?b(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};j.create=(s,e)=>new j({innerType:s,typeName:p.ZodOptional,...g(e)});var V=class extends v{_parse(e){return this._getType(e)===d.null?b(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};V.create=(s,e)=>new V({innerType:s,typeName:p.ZodNullable,...g(e)});var F=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n=t.data;return t.parsedType===d.undefined&&(n=this._def.defaultValue()),this._def.innerType._parse({data:n,path:t.path,parent:t})}removeDefault(){return this._def.innerType}};F.create=(s,e)=>new F({innerType:s,typeName:p.ZodDefault,defaultValue:typeof e.default==\"function\"?e.default:()=>e.default,...g(e)});var ce=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n={...t,common:{...t.common,issues:[]}},r=this._def.innerType._parse({data:n.data,path:n.path,parent:{...n}});return ye(r)?r.then(a=>({status:\"valid\",value:a.status===\"valid\"?a.value:this._def.catchValue({get error(){return new S(n.common.issues)},input:n.data})})):{status:\"valid\",value:r.status===\"valid\"?r.value:this._def.catchValue({get error(){return new S(n.common.issues)},input:n.data})}}removeCatch(){return this._def.innerType}};ce.create=(s,e)=>new ce({innerType:s,typeName:p.ZodCatch,catchValue:typeof e.catch==\"function\"?e.catch:()=>e.catch,...g(e)});var de=class extends v{_parse(e){if(this._getType(e)!==d.nan){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.nan,received:n.parsedType}),m}return{status:\"valid\",value:e.data}}};de.create=s=>new de({typeName:p.ZodNaN,...g(s)});var Fe=Symbol(\"zod_brand\"),_e=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n=t.data;return this._def.type._parse({data:n,path:t.path,parent:t})}unwrap(){return this._def.type}},ee=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.common.async)return(async()=>{let a=await this._def.in._parseAsync({data:n.data,path:n.path,parent:n});return a.status===\"aborted\"?m:a.status===\"dirty\"?(t.dirty(),Re(a.value)):this._def.out._parseAsync({data:a.value,path:n.path,parent:n})})();{let r=this._def.in._parseSync({data:n.data,path:n.path,parent:n});return r.status===\"aborted\"?m:r.status===\"dirty\"?(t.dirty(),{status:\"dirty\",value:r.value}):this._def.out._parseSync({data:r.value,path:n.path,parent:n})}}static create(e,t){return new ee({in:e,out:t,typeName:p.ZodPipeline})}};var et={object:x.lazycreate},p;(function(s){s.ZodString=\"ZodString\",s.ZodNumber=\"ZodNumber\",s.ZodNaN=\"ZodNaN\",s.ZodBigInt=\"ZodBigInt\",s.ZodBoolean=\"ZodBoolean\",s.ZodDate=\"ZodDate\",s.ZodSymbol=\"ZodSymbol\",s.ZodUndefined=\"ZodUndefined\",s.ZodNull=\"ZodNull\",s.ZodAny=\"ZodAny\",s.ZodUnknown=\"ZodUnknown\",s.ZodNever=\"ZodNever\",s.ZodVoid=\"ZodVoid\",s.ZodArray=\"ZodArray\",s.ZodObject=\"ZodObject\",s.ZodUnion=\"ZodUnion\",s.ZodDiscriminatedUnion=\"ZodDiscriminatedUnion\",s.ZodIntersection=\"ZodIntersection\",s.ZodTuple=\"ZodTuple\",s.ZodRecord=\"ZodRecord\",s.ZodMap=\"ZodMap\",s.ZodSet=\"ZodSet\",s.ZodFunction=\"ZodFunction\",s.ZodLazy=\"ZodLazy\",s.ZodLiteral=\"ZodLiteral\",s.ZodEnum=\"ZodEnum\",s.ZodEffects=\"ZodEffects\",s.ZodNativeEnum=\"ZodNativeEnum\",s.ZodOptional=\"ZodOptional\",s.ZodNullable=\"ZodNullable\",s.ZodDefault=\"ZodDefault\",s.ZodCatch=\"ZodCatch\",s.ZodPromise=\"ZodPromise\",s.ZodBranded=\"ZodBranded\",s.ZodPipeline=\"ZodPipeline\"})(p||(p={}));var te=O.create,Ee=M.create,tt=de.create,st=P.create,xe=se.create,nt=D.create,rt=ne.create,at=q.create,it=J.create,ot=re.create,ct=Z.create,dt=R.create,ut=ae.create,ke=C.create,w=x.create,lt=x.strictCreate,fe=Y.create,ft=ie.create,ht=H.create,pt=E.create,mt=G.create,gt=oe.create,yt=z.create,vt=L.create,_t=Q.create,T=X.create,xt=A.create,kt=K.create,bt=U.create,wt=I.create,Tt=j.create,St=V.create,Ct=I.createWithPreprocess,Nt=ee.create;var Ie=w({type:T(\"path\")}),It=w({type:T(\"domain\"),level:fe([T(\"tld\"),T(\"subdomain\"),Ee()])}),jt=w({type:T(\"query\"),parameter:te().default(\"lang\")}),We=w({type:T(\"url\"),variant:fe([Ie]).default(Ie.parse({type:\"path\"}))}),Rt=w({type:T(\"cookie\"),key:te().default(\"language\")}),qe=w({type:T(\"acceptLanguageHeader\")}),Je=w({type:T(\"navigator\")}),Ye=w({type:T(\"localStorage\"),key:te().default(\"language\")}),At=w({type:T(\"sessionStorage\"),key:te().default(\"language\")}),He=fe([We,qe,Je,Ye]),Ge=w({cache:T(\"build-time\").default(\"build-time\")}),Qe=w({debug:xe().default(!1),languageNegotiation:w({strict:xe().optional().default(!1),strategies:ke(He).min(1,\"You must define at least one language negotiation strategy.\").transform(s=>s)}),resources:Ge.default({cache:\"build-time\"}),routing:w({exclude:ke(te().startsWith(\"/\")).default([])}).default({exclude:[]})}),be=s=>Qe.parse(s);function we(s){return e=>t=>s({settings:e,env:t})}var Xe=we(({settings:s})=>({id:\"inlang.sdk-js\",config:async()=>({sdk:be(s),ideExtension:Ke})})),Ke={messageReferenceMatchers:[async s=>{let e=/(?<!\\w){?i\\(['\"](?<messageId>\\S+)['\"]\\)}?/gm,t=s.documentText,n,r=[];for(;(n=e.exec(t))!==null;){let a=(t.slice(0,Math.max(0,n.index)).match(/\\n/g)||[]).length+1,i=n.index-t.lastIndexOf(`\n`,n.index-1),o=n.index+n[0].length-t.lastIndexOf(`\n`,n.index+n[0].length-1),f=(t.slice(0,Math.max(0,n.index+n[0].length)).match(/\\n/g)||[]).length+1;n.groups&&\"messageId\"in n.groups&&r.push({messageId:n.groups.messageId,position:{start:{line:a,character:i},end:{line:f,character:o}}})}return r}],extractMessageOptions:[{callback:s=>`{i(\"${s}\")}`}],documentSelectors:[{language:\"javascript\"},{language:\"typescript\"},{language:\"svelte\"}]};export{Xe as default,be as validateSdkConfig};\n//! DON'T TOP-LEVEL IMPORT ESBUILD PLUGINS. USE DYNAMIC IMPORTS.\n//! See https://github.com/inlang/inlang/issues/486\n", "{\n\t\"name\": \"@inlang/sdk-js\",\n\t\"description\": \"The official Inlang SDK\",\n\t\"keywords\": [\n\t\t\"inlang\",\n\t\t\"sveltekit\",\n\t\t\"svelte\",\n\t\t\"i18n\",\n\t\t\"internationalization\",\n\t\t\"L10n\",\n\t\t\"localization\",\n\t\t\"unplugin\",\n\t\t\"vite\"\n\t],\n\t\"version\": \"0.11.8\",\n\t\"scripts\": {\n\t\t\"dev\": \"npm-run-all --print-label --parallel dev:runtime dev:plugin tsc:watch\",\n\t\t\"build\": \"rm -rf dist && npm run build:runtime && npm run build:plugin\",\n\t\t\"dev:runtime\": \"tsc --project ./tsconfig.build.json --watch\",\n\t\t\"build:runtime\": \"tsc --project ./tsconfig.build.json\",\n\t\t\"dev:plugin\": \"DEV=true node ./build.js\",\n\t\t\"build:plugin\": \"node ./build.js && tsc -p tsconfig.build.plugin.json\",\n\t\t\"---- TEST ----------------------------------------------------------\": \"\",\n\t\t\"test\": \"tsc --noEmit && vitest run --passWithNoTests --coverage\",\n\t\t\"test:watch\": \"npm-run-all --print-label --parallel tsc:watch vitest:watch tsc:watch:plugin\",\n\t\t\"tsc:watch\": \"tsc --noEmit --watch\",\n\t\t\"tsc:watch:plugin\": \"tsc -p tsconfig.build.plugin.json --watch\",\n\t\t\"vitest:watch\": \"vitest watch --passWithNoTests --coverage\",\n\t\t\"---- LINT ----------------------------------------------------------\": \"\",\n\t\t\"lint\": \"cd ../.. && npm run lint:base ./source-code/sdk-js\",\n\t\t\"lint:fix\": \"cd ../.. && npm run lint:fix:base ./source-code/sdk-js\",\n\t\t\"format\": \"cd ../.. && npm run format:base ./source-code/sdk-js\",\n\t\t\"format:fix\": \"cd ../.. && npm run format:fix:base ./source-code/sdk-js\",\n\t\t\"---- OTHER ---------------------------------------------------------\": \"\",\n\t\t\"clean\": \"rm -rf ./dist ./.turbo ./coverage ./node_modules\"\n\t},\n\t\"dependencies\": {\n\t\t\"@inlang/core\": \"*\",\n\t\t\"ts-morph\": \"^19.0.0\",\n\t\t\"typescript\": \"^5.1.6\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@inlang/sdk-js-plugin\": \"*\",\n\t\t\"@sveltejs/kit\": \"1.0.0\",\n\t\t\"deepmerge-ts\": \"^5.1.0\",\n\t\t\"esbuild\": \"^0.18.11\",\n\t\t\"magic-string\": \"^0.30.1\",\n\t\t\"msw\": \"^1.2.2\",\n\t\t\"npm-run-all\": \"^4.1.5\",\n\t\t\"svelte\": \"3.54.0\",\n\t\t\"ts-dedent\": \"^2.2.0\",\n\t\t\"vitefu\": \"^0.2.4\"\n\t},\n\t\"peerDependencies\": {\n\t\t\"@sveltejs/kit\": \"^1.0.0\",\n\t\t\"svelte\": \"^3.54.0 || ^4.0.0\"\n\t},\n\t\"exports\": {\n\t\t\".\": \"./dist/index.js\",\n\t\t\"./adapter-sveltekit\": \"./dist/adapter-sveltekit/index.js\",\n\t\t\"./adapter-sveltekit/*\": \"./dist/adapter-sveltekit/runtime/*/index.js\",\n\t\t\"./detectors\": \"./dist/detectors/index.js\",\n\t\t\"./detectors/*\": \"./dist/detectors/detectors/*/index.js\",\n\t\t\"./runtime\": \"./dist/runtime/index.js\",\n\t\t\"./no-transforms\": \"./dist/no-transforms.js\",\n\t\t\"./debug\": \"./dist/debug.js\"\n\t},\n\t\"module\": \"dist/index.js\",\n\t\"types\": \"dist/index.d.ts\",\n\t\"typesVersions\": {\n\t\t\"*\": {\n\t\t\t\"adapter-sveltekit\": [\n\t\t\t\t\"./dist/adapter-sveltekit/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/client\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/client/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/client/not-reactive\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/client/not-reactive/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/client/reactive\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/client/reactive/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/client/reactive-workaround\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/client/reactive-workaround/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/server\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/server/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/shared\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/shared/index.d.ts\"\n\t\t\t],\n\t\t\t\"detectors\": [\n\t\t\t\t\"./dist/detectors/index.d.ts\"\n\t\t\t],\n\t\t\t\"runtime\": [\n\t\t\t\t\"./dist/runtime/index.d.ts\"\n\t\t\t]\n\t\t}\n\t},\n\t\"files\": [\n\t\t\"./dist\"\n\t],\n\t\"type\": \"module\",\n\t\"engines\": {\n\t\t\"node\": \">=18\"\n\t},\n\t\"publishConfig\": {\n\t\t\"access\": \"public\"\n\t},\n\t\"license\": \"Apache-2.0\"\n}\n", "import fs from 'node:fs/promises'\nimport fsSync from 'node:fs'\nimport path from 'node:path'\nimport {\n  isDepIncluded,\n  isDepExcluded,\n  isDepNoExternaled,\n  isDepExternaled\n} from './sync.cjs'\n\n/** @type {import('pnpapi')} */\nlet pnp\nif (process.versions.pnp) {\n  try {\n    const { createRequire } = (await import('module')).default\n    pnp = createRequire(import.meta.url)('pnpapi')\n  } catch {}\n}\n\nexport { isDepIncluded, isDepExcluded, isDepNoExternaled, isDepExternaled }\n\n/** @type {import('..').crawlFrameworkPkgs} */\nexport async function crawlFrameworkPkgs(options) {\n  const pkgJsonPath = await findClosestPkgJsonPath(options.root)\n  if (!pkgJsonPath) {\n    // @ts-expect-error don't throw in deno as package.json is not required\n    if (typeof Deno !== 'undefined') {\n      return {\n        optimizeDeps: { include: [], exclude: [] },\n        ssr: { noExternal: [], external: [] }\n      }\n    } else {\n      throw new Error(`Cannot find package.json from ${options.root}`)\n    }\n  }\n  const pkgJson = await readJson(pkgJsonPath).catch((e) => {\n    throw new Error(`Unable to read ${pkgJsonPath}`, { cause: e })\n  })\n\n  /** @type {string[]} */\n  let optimizeDepsInclude = []\n  /** @type {string[]} */\n  let optimizeDepsExclude = []\n  /** @type {string[]} */\n  let ssrNoExternal = []\n  /** @type {string[]} */\n  let ssrExternal = []\n\n  await crawl(pkgJsonPath, pkgJson)\n\n  // respect vite user config\n  if (options.viteUserConfig) {\n    // remove includes that are explicitly excluded in optimizeDeps\n    const _optimizeDepsExclude = options.viteUserConfig?.optimizeDeps?.exclude\n    if (_optimizeDepsExclude) {\n      optimizeDepsInclude = optimizeDepsInclude.filter(\n        (dep) => !isDepExcluded(dep, _optimizeDepsExclude)\n      )\n    }\n    // remove excludes that are explicitly included in optimizeDeps\n    const _optimizeDepsInclude = options.viteUserConfig?.optimizeDeps?.include\n    if (_optimizeDepsInclude) {\n      optimizeDepsExclude = optimizeDepsExclude.filter(\n        (dep) => !isDepIncluded(dep, _optimizeDepsInclude)\n      )\n    }\n    // remove noExternals that are explicitly externalized\n    const _ssrExternal = options.viteUserConfig?.ssr?.external\n    if (_ssrExternal) {\n      ssrNoExternal = ssrNoExternal.filter(\n        (dep) => !isDepExternaled(dep, _ssrExternal)\n      )\n    }\n    // remove externals that are explicitly noExternal\n    const _ssrNoExternal = options.viteUserConfig?.ssr?.noExternal\n    if (_ssrNoExternal) {\n      ssrExternal = ssrExternal.filter(\n        (dep) => !isDepNoExternaled(dep, _ssrNoExternal)\n      )\n    }\n  }\n\n  return {\n    optimizeDeps: {\n      include: optimizeDepsInclude,\n      exclude: optimizeDepsExclude\n    },\n    ssr: {\n      noExternal: ssrNoExternal,\n      external: ssrExternal\n    }\n  }\n\n  /**\n   * crawl the package.json dependencies for framework packages. rules:\n   * 1. a framework package should be `optimizeDeps.exclude` and `ssr.noExternal`.\n   * 2. the deps of the framework package should be `optimizeDeps.include` and `ssr.external`\n   *    unless the dep is also a framework package, in which case do no1 & no2 recursively.\n   * 3. any non-framework packages that aren't imported by a framework package can be skipped entirely.\n   * 4. a semi-framework package is like a framework package, except it isn't `optimizeDeps.exclude`,\n   *    but only applies `ssr.noExternal`.\n   * @param {string} pkgJsonPath\n   * @param {Record<string, any>} pkgJson\n   * @param {string[]} [parentDepNames]\n   */\n  async function crawl(pkgJsonPath, pkgJson, parentDepNames = []) {\n    const isRoot = parentDepNames.length === 0\n\n    /** @type {string[]} */\n    let deps = [\n      ...Object.keys(pkgJson.dependencies || {}),\n      ...(isRoot ? Object.keys(pkgJson.devDependencies || {}) : [])\n    ]\n\n    deps = deps.filter((dep) => {\n      // skip circular deps\n      if (parentDepNames.includes(dep)) {\n        return false\n      }\n\n      const isFrameworkPkg = options.isFrameworkPkgByName?.(dep)\n      const isSemiFrameworkPkg = options.isSemiFrameworkPkgByName?.(dep)\n      if (isFrameworkPkg) {\n        // framework packages should be excluded from optimization as esbuild can't handle them.\n        // otherwise it'll cause https://github.com/vitejs/vite/issues/3910\n        optimizeDepsExclude.push(dep)\n        // framework packages should be noExternal so that they go through vite's transformation\n        // pipeline, since nodejs can't support them.\n        ssrNoExternal.push(dep)\n      } else if (isSemiFrameworkPkg) {\n        // semi-framework packages should do the same except for optimization exclude as they\n        // aren't needed to work (they don't contain raw framework components)\n        ssrNoExternal.push(dep)\n      }\n\n      // only those that are explictly false can skip crawling since we don't need to do anything\n      // special for them\n      if (isFrameworkPkg === false || isSemiFrameworkPkg === false) {\n        return false\n      }\n      // if `true`, we need to crawl the nested deps to deep include and ssr externalize them in dev.\n      // if `undefined`, it's the same as \"i don't know\". we need to crawl and find the package.json\n      // to find out.\n      else {\n        return true\n      }\n    })\n\n    const promises = deps.map(async (dep) => {\n      const depPkgJsonPath = await findDepPkgJsonPath(dep, pkgJsonPath)\n      if (!depPkgJsonPath) return\n      const depPkgJson = await readJson(depPkgJsonPath).catch(() => {})\n      if (!depPkgJson) return\n\n      // fast path if this dep is already a framework dep based on the filter condition above\n      const cachedIsFrameworkPkg = ssrNoExternal.includes(dep)\n      if (cachedIsFrameworkPkg) {\n        return crawl(depPkgJsonPath, depPkgJson, parentDepNames.concat(dep))\n      }\n\n      // check if this dep is a framework dep, if so, track and crawl it\n      const isFrameworkPkg = options.isFrameworkPkgByJson?.(depPkgJson)\n      const isSemiFrameworkPkg = options.isSemiFrameworkPkgByJson?.(depPkgJson)\n      if (isFrameworkPkg || isSemiFrameworkPkg) {\n        // see explanation in filter condition above\n        if (isFrameworkPkg) {\n          optimizeDepsExclude.push(dep)\n          ssrNoExternal.push(dep)\n        } else if (isSemiFrameworkPkg) {\n          ssrNoExternal.push(dep)\n        }\n        return crawl(depPkgJsonPath, depPkgJson, parentDepNames.concat(dep))\n      }\n\n      // if we're crawling in a non-root state, the parent is 100% a framework package\n      // because of the above if block. in this case, if it's dep of a non-framework\n      // package, handle special cases for them.\n      if (!isRoot) {\n        // deep include it if it's a CJS package, so it becomes ESM and vite is happy.\n        if (await pkgNeedsOptimization(depPkgJson, depPkgJsonPath)) {\n          optimizeDepsInclude.push(parentDepNames.concat(dep).join(' > '))\n        }\n        // also externalize it in dev so it doesn't trip vite's SSR transformation.\n        // we do in dev only as build cannot access deep external packages in strict\n        // dependency installations, such as pnpm.\n        if (!options.isBuild && !ssrExternal.includes(dep)) {\n          ssrExternal.push(dep)\n        }\n      }\n    })\n\n    await Promise.all(promises)\n  }\n}\n\n/** @type {import('..').findDepPkgJsonPath} */\nexport async function findDepPkgJsonPath(dep, parent) {\n  if (pnp) {\n    const depRoot = pnp.resolveToUnqualified(dep, parent)\n    if (!depRoot) return undefined\n    return path.join(depRoot, 'package.json')\n  }\n\n  let root = await findClosestPkgJsonPath(parent)\n  if (!root) return undefined\n  root = path.dirname(root)\n  while (root) {\n    const pkg = path.join(root, 'node_modules', dep, 'package.json')\n    try {\n      await fs.access(pkg)\n      // use 'node:fs' version to match 'vite:resolve' and avoid realpath.native quirk\n      // https://github.com/sveltejs/vite-plugin-svelte/issues/525#issuecomment-1355551264\n      return fsSync.realpathSync(pkg)\n    } catch {}\n    const nextRoot = path.dirname(root)\n    if (nextRoot === root) break\n    root = nextRoot\n  }\n  return undefined\n}\n\n/** @type {import('..').findClosestPkgJsonPath} */\nexport async function findClosestPkgJsonPath(dir, predicate = undefined) {\n  if (dir.endsWith('package.json')) {\n    dir = path.dirname(dir)\n  }\n  while (dir) {\n    const pkg = path.join(dir, 'package.json')\n    try {\n      const stat = await fs.stat(pkg)\n      if (stat.isFile() && (!predicate || (await predicate(pkg)))) {\n        return pkg\n      }\n    } catch {}\n    const nextDir = path.dirname(dir)\n    if (nextDir === dir) break\n    dir = nextDir\n  }\n  return undefined\n}\n\n/** @type {import('..').pkgNeedsOptimization} */\nexport async function pkgNeedsOptimization(pkgJson, pkgJsonPath) {\n  // only optimize if is cjs, using the below as heuristic\n  // see https://github.com/sveltejs/vite-plugin-svelte/issues/162\n  if (pkgJson.module || pkgJson.exports) return false\n  // if have main, ensure entry is js so vite can prebundle it\n  // see https://github.com/sveltejs/vite-plugin-svelte/issues/233\n  if (pkgJson.main) {\n    const entryExt = path.extname(pkgJson.main)\n    return !entryExt || entryExt === '.js' || entryExt === '.cjs'\n  }\n  // check if has implicit index.js entrypoint to prebundle\n  // see https://github.com/sveltejs/vite-plugin-svelte/issues/281\n  // see https://github.com/solidjs/vite-plugin-solid/issues/70#issuecomment-1306488154\n  try {\n    await fs.access(path.join(path.dirname(pkgJsonPath), 'index.js'))\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * @param {string} findDepPkgJsonPath\n * @returns {Promise<Record<string, any>>}\n */\nasync function readJson(findDepPkgJsonPath) {\n  return JSON.parse(await fs.readFile(findDepPkgJsonPath, 'utf8'))\n}\n", "import { Project, Node, QuoteKind, IndentationText, ScriptKind } from \"ts-morph\"\nimport { dedent } from \"ts-dedent\"\nimport { InlangException } from \"../../exceptions.js\"\n\n// ------------------------------------------------------------------------------------------------\n\nconst parseCode = (code: string, filePath: string | undefined) =>\n\tnew Project({\n\t\tmanipulationSettings: {\n\t\t\tquoteKind: QuoteKind.Single,\n\t\t\tindentationText: IndentationText.Tab,\n\t\t\tuseTrailingCommas: true,\n\t\t},\n\t}).createSourceFile(filePath || \"_dummy_.ts\", code, { overwrite: true })\n\nconst printCode = (node: Node) => (node && node.print({ scriptKind: ScriptKind.TS }).trim()) || \"\"\n\n// ------------------------------------------------------------------------------------------------\n\nexport const codeToSourceFile = (code: string, filePath?: string) =>\n\tparseCode(dedent(code), filePath)\n\nexport const codeToNode = (code: string) => {\n\tconst node = codeToSourceFile(code, \"\")\n\t\t.getStatement(Node.isVariableStatement)\n\t\t?.getDeclarationList()\n\t\t.getDeclarations()[0]\n\n\tif (!node) {\n\t\tthrow new InlangException(\"Could not find variable declaration.\")\n\t}\n\n\tif (node.getName() !== \"x\") {\n\t\tthrow new InlangException(\"The variable must be named 'x'.\")\n\t}\n\n\tconst initializer = node.getInitializer()\n\tif (!initializer) {\n\t\tthrow new InlangException(\"Could not find variable initializer.\")\n\t}\n\n\treturn initializer\n}\n\nexport const nodeToCode = (node: Node) => printCode(node)\n", "import { dedent } from \"ts-dedent\"\nimport { InlangSdkException } from \"../../adapter-sveltekit/vite-plugin/exceptions.js\"\nimport { codeToSourceFile } from \"./js.util.js\"\nimport { Node, SyntaxKind, type SourceFile } from \"ts-morph\"\n\n// ------------------------------------------------------------------------------------------------\n\nexport const findExport = (sourceFile: SourceFile, name: string) => {\n\tif (!Node.isSourceFile(sourceFile)) return // we only work on the root node\n\n\tconst exportVariableStatements = sourceFile\n\t\t.getVariableStatements()\n\t\t.filter((statement) => statement.getModifiers().some((m) => m.isKind(SyntaxKind.ExportKeyword)))\n\n\tfor (const variableStatements of exportVariableStatements) {\n\t\tconst declarations = variableStatements.getDeclarations()\n\t\tfor (const declaration of declarations) {\n\t\t\tconst nameNode = declaration.getNameNode()\n\t\t\tif (nameNode && nameNode.getText() === name) {\n\t\t\t\treturn declaration\n\t\t\t}\n\t\t}\n\t}\n\n\tconst exportFunctionDeclarations = sourceFile\n\t\t.getFunctions()\n\t\t.filter((declaration) =>\n\t\t\tdeclaration.getModifiers().some((m) => m.isKind(SyntaxKind.ExportKeyword)),\n\t\t)\n\n\tfor (const declaration of exportFunctionDeclarations) {\n\t\tconst nameNode = declaration.getNameNode()\n\t\tif (nameNode && nameNode.getText() === name) {\n\t\t\treturn declaration\n\t\t}\n\t}\n\n\tconst exportDeclararions = sourceFile.getExportDeclarations()\n\n\tfor (const declaration of exportDeclararions) {\n\t\tconst namedExports = declaration.getNamedExports()\n\t\tfor (const namedExport of namedExports) {\n\t\t\tif ((namedExport.getAliasNode() || namedExport.getNameNode()).getText()) return namedExport\n\t\t}\n\t}\n\n\treturn\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const findOrCreateExport = (\n\tsourceFile: SourceFile,\n\tname: string,\n\tdefaultImplementation: string,\n) => {\n\tconst fnExport = findExport(sourceFile, name)\n\tif (fnExport) return fnExport\n\n\tconst isVariableAlreadyDefined = !!sourceFile.getVariableStatements().filter((statement) =>\n\t\tstatement\n\t\t\t.getDeclarationList()\n\t\t\t.getDeclarations()\n\t\t\t.some((declaration) => declaration.getName() === name),\n\t).length\n\tif (isVariableAlreadyDefined)\n\t\tthrow new InlangSdkException(dedent`\n\t\t\tVariable '${name}' already exists. The inlang SDK needs to export a variable with this name.\n\t\t\tPlease rename the variable in this file.\n\t\t`)\n\t// TODO: use `export { randomVariableName as load } instead of throwing an error\n\n\tconst createdFn = codeToSourceFile(`export const ${name} = ${defaultImplementation}`)\n\tsourceFile.addVariableStatement(createdFn.getVariableStatement(name)!.getStructure())\n\n\treturn findExport(sourceFile, name)!\n}\n", "import path, { normalize } from \"node:path\"\nimport type { TransformConfig } from \"./config.js\"\n\nexport type FileType =\n\t| \"hooks.server.js\"\n\t| \"[language].json\"\n\t| \"+server.js\"\n\t| \"+layout.server.js\"\n\t| \"+layout.js\"\n\t| \"+layout.svelte\"\n\t| \"+page.server.js\"\n\t| \"+page.js\"\n\t| \"+page.svelte\"\n\t| \"*.server.js\"\n\t| \"*.js\"\n\t| \"*.svelte\"\n\nexport type FileInformation = {\n\ttype: FileType\n\troot: boolean\n}\n\nconst scriptExtensions = [\".js\", \".ts\"]\n\nexport const getFileInformation = (\n\tconfig: TransformConfig,\n\trawId: string,\n): FileInformation | undefined => {\n\tconst id = normalize(rawId)\n\n\tif (\n\t\t!id.startsWith(config.cwdFolderPath) ||\n\t\tid.startsWith(path.resolve(config.cwdFolderPath, \"node_modules\")) ||\n\t\tid.startsWith(path.resolve(config.cwdFolderPath, \".svelte-kit\"))\n\t)\n\t\treturn undefined\n\n\tif (scriptExtensions.map((ext) => `${config.svelteKit.files.serverHooks}${ext}`).includes(id)) {\n\t\treturn {\n\t\t\ttype: \"hooks.server.js\",\n\t\t\troot: true,\n\t\t}\n\t}\n\n\tconst { dir, name, ext } = path.parse(id)\n\tconst root = dir === config.svelteKit.files.routes\n\n\tif (\n\t\tdir === path.resolve(config.svelteKit.files.routes, \"inlang\", \"[language].json\") &&\n\t\tname === \"+server\" &&\n\t\tscriptExtensions.includes(ext)\n\t) {\n\t\treturn {\n\t\t\ttype: \"[language].json\",\n\t\t\troot: true,\n\t\t}\n\t}\n\n\tif (name === \"+server\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+server.js\",\n\t\t\troot,\n\t\t}\n\t}\n\n\tif (name === \"+layout.server\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+layout.server.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+layout\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+layout.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+layout\" && ext === \".svelte\") {\n\t\treturn {\n\t\t\ttype: \"+layout.svelte\",\n\t\t\troot,\n\t\t}\n\t}\n\n\tif (name === \"+page.server\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+page.server.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+page\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+page.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+page\" && ext === \".svelte\") {\n\t\treturn {\n\t\t\ttype: \"+page.svelte\",\n\t\t\troot,\n\t\t}\n\t}\n\n\tif (name.endsWith(\".server\") && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"*.server.js\",\n\t\t\troot: false,\n\t\t}\n\t}\n\n\tif (scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"*.js\",\n\t\t\troot: false,\n\t\t}\n\t}\n\n\tif (ext === \".svelte\") {\n\t\treturn {\n\t\t\ttype: \"*.svelte\",\n\t\t\troot: false,\n\t\t}\n\t}\n\n\treturn undefined\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const filePathForOutput = (config: TransformConfig, path: string) => {\n\tconst relativePath = path.replace(config.cwdFolderPath, \"\")\n\treturn relativePath.startsWith(\"/\") ? relativePath.slice(1) : relativePath\n}\n", "import { dedent } from \"ts-dedent\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\nimport { InlangSdkException } from \"../vite-plugin/exceptions.js\"\nimport type { FileInformation } from \"../vite-plugin/fileInformation.js\"\nimport { transformLayoutJs } from \"./+layout.js.js\"\nimport { transformLayoutServerJs } from \"./+layout.server.js.js\"\nimport { transformLayoutSvelte } from \"./+layout.svelte.js\"\nimport { transformPageJs } from \"./+page.js.js\"\nimport { transformPageServerJs } from \"./+page.server.js.js\"\nimport { transformPageSvelte } from \"./+page.svelte.js\"\nimport { transformServerRequestJs } from \"./+server.js.js\"\nimport { transformLanguageJson } from \"./[language].json.js\"\nimport { transformJs } from \"./_.js.js\"\nimport { transformServerJs } from \"./_.server.js.js\"\nimport { transformSvelte } from \"./_.svelte.js\"\nimport { transformHooksServerJs } from \"./hooks.server.js.js\"\n\nexport const transformCode = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n\t{ type, root }: FileInformation,\n) => {\n\tif (!pluginOrderVerified && type.endsWith(\".svelte\")) assertCorrectPluginOrder(code)\n\n\tswitch (type) {\n\t\tcase \"hooks.server.js\":\n\t\t\treturn transformHooksServerJs(filePath, config, code)\n\t\tcase \"[language].json\":\n\t\t\treturn transformLanguageJson(filePath, config, code)\n\t\tcase \"+server.js\":\n\t\t\treturn transformServerRequestJs(filePath, config, code)\n\t\tcase \"+layout.server.js\":\n\t\t\treturn transformLayoutServerJs(filePath, config, code, root)\n\t\tcase \"+layout.js\":\n\t\t\treturn transformLayoutJs(filePath, config, code, root)\n\t\tcase \"+layout.svelte\":\n\t\t\treturn transformLayoutSvelte(filePath, config, code, root)\n\t\tcase \"+page.server.js\":\n\t\t\treturn transformPageServerJs(filePath, config, code)\n\t\tcase \"+page.js\":\n\t\t\treturn transformPageJs(filePath, config, code, root)\n\t\tcase \"+page.svelte\":\n\t\t\treturn transformPageSvelte(filePath, config, code, root)\n\t\tcase \"*.server.js\":\n\t\t\treturn transformServerJs(filePath, config, code)\n\t\tcase \"*.js\":\n\t\t\treturn transformJs(filePath, config, code)\n\t\tcase \"*.svelte\":\n\t\t\treturn transformSvelte(filePath, config, code)\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nlet pluginOrderVerified = false\n\nconst REGEX_SVELTE_COMPILER_INFO = /^\\/\\*\\s.*\\.svelte generated by Svelte v\\d+.\\d+.\\d+\\s\\*\\/$/\n\nconst assertCorrectPluginOrder = (code: string) => {\n\tif (code.split(\"\\n\")[0]?.match(REGEX_SVELTE_COMPILER_INFO)) {\n\t\tthrow new InlangSdkException(dedent`\n\t\t\tMake sure to place the inlang plugin before the svelte plugin in your vite config.\n\t\t\tSee https://inlang.com/documentation/sdk/sveltekit#getting-started.\n\t\t`)\n\t}\n\n\tpluginOrderVerified = true\n}\n", "import { dedent } from \"ts-dedent\"\nimport type { SourceFile } from \"ts-morph\"\nimport {\n\taddImport,\n\tisOptOutImportPresent,\n\tisSdkImportPresent,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { wrapExportedFunction } from \"../../ast-transforms/utils/wrap.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: test\nconst addImports = (\n\tsourceFile: SourceFile,\n\tconfig: TransformConfig,\n\troot: boolean,\n\twrapperFunctionName: string,\n) => {\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/shared\", wrapperFunctionName)\n\tif (root && !config.languageInUrl) {\n\t\taddImport(sourceFile, \"$app/environment\", \"browser\")\n\t\taddImport(\n\t\t\tsourceFile,\n\t\t\t\"@inlang/sdk-js/detectors/client\",\n\t\t\t\"initLocalStorageDetector\",\n\t\t\t\"navigatorDetector\",\n\t\t)\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: use ast transformation instead of string manipulation\n// TODO: test\nconst getOptions = (config: TransformConfig, root: boolean) =>\n\tconfig.languageInUrl\n\t\t? \"{}\"\n\t\t: dedent`\n\t\t\t{\n\t\t\t\tinitDetectors: browser\n\t\t\t\t\t? () => [initLocalStorageDetector(), navigatorDetector]\n\t\t\t\t\t: undefined\n\t\t\t}`\n\n// ------------------------------------------------------------------------------------------------\n\nexport const _FOR_TESTING = {\n\taddImports,\n\tgetOptions,\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const transformLayoutJs = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n\troot: boolean,\n) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\tif (!root && !isSdkImportPresent(sourceFile)) return code\n\n\tconst wrapperFunctionName = root ? \"initRootLayoutLoadWrapper\" : \"initLoadWrapper\"\n\n\taddImports(sourceFile, config, root, wrapperFunctionName)\n\n\tconst options = root ? getOptions(config, root) : undefined\n\twrapExportedFunction(sourceFile, options, wrapperFunctionName, \"load\")\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n\n\treturn nodeToCode(sourceFile)\n}\n", "import { type SourceFile, Node, type ImportDeclaration } from \"ts-morph\"\n\n// ------------------------------------------------------------------------------------------------\n// ------------------------------------------------------------------------------------------------\n\nexport const removeImport = (sourceFile: SourceFile, path: string, ...names: string[]) => {\n\tif (!Node.isSourceFile(sourceFile)) return // we only work on the root node\n\n\tconst importDeclarations = findImportDeclarations(sourceFile, path)\n\tif (!importDeclarations.length) return\n\n\tfor (const importDeclaration of importDeclarations) {\n\t\tif (!importDeclaration.getImportClause()?.getNamedBindings()) return\n\n\t\tfor (const name of names) {\n\t\t\tconst importSpecifier = findNamedImportSpecifier(importDeclaration, name)\n\t\t\tif (!importSpecifier) continue\n\n\t\t\timportSpecifier.remove()\n\t\t}\n\n\t\tif (\n\t\t\t// remove import completely\n\t\t\t!names.length || // if no names get passed\n\t\t\t!getNamedImportSpecifiers(importDeclaration).length // if no specifiers are left\n\t\t) {\n\t\t\timportDeclaration.remove()\n\t\t}\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const addImport = (\n\tsourceFile: SourceFile,\n\tpath: string,\n\t...names: [string, ...string[]]\n) => {\n\tif (!Node.isSourceFile(sourceFile)) return // we only work on the root node\n\tif (names.length === 0) return // return early if no names are passed\n\n\tconst importDeclarations = findImportDeclarations(sourceFile, path)\n\t\t// only keep import declarations with specifiers\n\t\t.filter((importDeclaration) => !!getNamedImportSpecifiers(importDeclaration).length)\n\t\t.filter((importDeclaration) => !importDeclaration.isTypeOnly())\n\n\tif (!importDeclarations.length) {\n\t\t// add new import declaration at the beginning of the file\n\t\tsourceFile.insertImportDeclarations(0, [\n\t\t\t{\n\t\t\t\tmoduleSpecifier: path,\n\t\t\t\tnamedImports: names.map((name) => ({ name })),\n\t\t\t},\n\t\t])\n\n\t\treturn\n\t}\n\n\t// add new import specifiers\n\tfor (const name of names) {\n\t\t// check if one of the import declarations already contains the import\n\t\tif (\n\t\t\timportDeclarations.some((importDeclaration) =>\n\t\t\t\tfindNamedImportSpecifier(importDeclaration, name),\n\t\t\t)\n\t\t)\n\t\t\tcontinue\n\n\t\t// add the import to the first import declaration\n\t\tconst importDeclaration = importDeclarations[0]!\n\t\tif (!findNamedImportSpecifier(importDeclaration, name))\n\t\t\timportDeclaration.addNamedImports(names.map((name) => ({ name })))\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst textWithoutQuotes = (text: string) => text.replace(/^['\"]|['\"]$/g, \"\")\n\nexport const findImportDeclarations = (sourceFile: SourceFile, path: string) =>\n\tsourceFile\n\t\t.forEachChildAsArray()\n\t\t.map((node) =>\n\t\t\tNode.isImportDeclaration(node) &&\n\t\t\ttextWithoutQuotes(node.getModuleSpecifier().getText()) === path\n\t\t\t\t? node\n\t\t\t\t: undefined,\n\t\t)\n\t\t.filter(Boolean) as ImportDeclaration[]\n\nconst getNamedImportSpecifiers = (importDeclaration: ImportDeclaration) => {\n\tconst namedImports = importDeclaration.getImportClause()?.getNamedBindings()\n\tif (!Node.isNamedImports(namedImports)) return []\n\n\treturn namedImports.getElements()\n}\n\nexport const findNamedImportSpecifier = (importDeclaration: ImportDeclaration, name: string) =>\n\tgetNamedImportSpecifiers(importDeclaration).find(\n\t\t(element) => (element.getAliasNode()?.getText() || element.getName()) === name,\n\t)\n\n// TODO: test\nexport const getImportSpecifiers = (importDeclaration: ImportDeclaration) =>\n\tgetNamedImportSpecifiers(importDeclaration)\n\n// ------------------------------------------------------------------------------------------------\n\nexport const getImportSpecifiersAsStrings = (sourceFile: SourceFile, path: string) => {\n\tconst importDeclarations = findImportDeclarations(sourceFile, path)\n\tconst importSpecifiers = []\n\tfor (const importDeclaration of importDeclarations) {\n\t\timportSpecifiers.push(...getImportSpecifiers(importDeclaration))\n\t}\n\n\treturn importSpecifiers.map((importSpecifier) => importSpecifier.getText().replace(\"as\", \":\"))\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const isOptOutImportPresent = (sourceFile: SourceFile) =>\n\t!!findImportDeclarations(sourceFile, \"@inlang/sdk-js/no-transforms\").length\n\n// TODO: test\nexport const isSdkImportPresent = (sourceFile: SourceFile) =>\n\t!!findImportDeclarations(sourceFile, \"@inlang/sdk-js\").length\n", "import {\n\tNode,\n\tCallExpression,\n\tSyntaxKind,\n\tSourceFile,\n\tVariableDeclaration,\n\tFunctionDeclaration,\n\tExportSpecifier,\n\tArrowFunction,\n\tFunctionExpression,\n\tParenthesizedExpression,\n\tSatisfiesExpression,\n} from \"ts-morph\"\nimport { codeToNode, nodeToCode } from \"./js.util.js\"\nimport { findOrCreateExport } from \"./exports.js\"\nimport { InlangException } from \"../../exceptions.js\"\nimport { InlangSdkException } from \"../../adapter-sveltekit/vite-plugin/exceptions.js\"\nimport { dedent } from \"ts-dedent\"\nimport { getImportSpecifiersAsStrings } from \"./imports.js\"\n\nconst WRAP_IDENTIFIER = \"$$_INLANG_WRAP_$$\"\n\n// ------------------------------------------------------------------------------------------------\n\nexport function wrapWithPlaceholder(node: Node): CallExpression {\n\tif (\n\t\tNode.isArrowFunction(node) ||\n\t\tNode.isFunctionExpression(node) ||\n\t\tNode.isIdentifier(node) ||\n\t\tNode.isCallExpression(node) ||\n\t\tNode.isSatisfiesExpression(node) ||\n\t\tNode.isParenthesizedExpression(node)\n\t) {\n\t\treturn node.replaceWithText(`$$_INLANG_WRAP_$$(${nodeToCode(node)})`) as CallExpression\n\t}\n\n\tthrow new InlangSdkException(\n\t\t`Wrapping placeholder does not support node of kind '${node.getKindName()}'.`,\n\t)\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const createWrapperAst = (name: string, options = \"\") =>\n\tcodeToNode(`\n\tconst x = ${name}(${options}).use(${WRAP_IDENTIFIER})\n`) as CallExpression\n\n// ------------------------------------------------------------------------------------------------\n\nconst findWrappingPoint = (callExpression: CallExpression) => {\n\tif (!callExpression.getExpression().getText()) {\n\t\tthrow new InlangSdkException(dedent`\n\t\t\tCould not find CallExpression in code:\n\n\t\t\t${callExpression.getText()}\n\n\t\t`)\n\t}\n\n\tconst argument = callExpression.getArguments()[0]\n\tif (!argument) {\n\t\tthrow new InlangSdkException(dedent`\n\t\t\tCould not find Argument in code:\n\n\t\t\t${callExpression.getText()}\n\n\t\t`)\n\t}\n\n\treturn argument\n}\n\nconst findInsertionPoint = (callExpression: CallExpression) => {\n\tconst insertionPoint = callExpression\n\t\t.getDescendantsOfKind(SyntaxKind.Identifier)\n\t\t.find((identifier) => identifier.getText() === WRAP_IDENTIFIER)\n\n\tif (!insertionPoint) {\n\t\tthrow new InlangSdkException(dedent`\n\t\t\tCould not find insertion point in code:\n\n\t\t\t${callExpression.getText()}\n\n\t\t`)\n\t}\n\n\treturn insertionPoint\n}\n\nexport const mergeWrapperAst = (toWrapAst: CallExpression, wrapWithAst: CallExpression) => {\n\tconst wrappingPoint = findWrappingPoint(toWrapAst)\n\tconst insertionPoint = findInsertionPoint(wrapWithAst)\n\n\tinsertionPoint.replaceWithText(nodeToCode(wrappingPoint))\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst findFunctionExpression = (\n\tnode: VariableDeclaration | FunctionDeclaration | ExportSpecifier,\n) => {\n\tif (Node.isVariableDeclaration(node)) {\n\t\treturn node.getInitializer()!\n\t}\n\n\tif (Node.isFunctionDeclaration(node)) {\n\t\treturn node\n\t}\n\n\tthrow new InlangSdkException(dedent`\n\t\tCould not find function expression in code:\n\n\t\t${node.getText()}\n\n\t`)\n}\n\nconst findFunction = (node: Node): ArrowFunction | FunctionExpression => {\n\tif (ArrowFunction.isArrowFunction(node) || FunctionExpression.isFunctionExpression(node))\n\t\treturn node\n\n\tif (\n\t\tParenthesizedExpression.isParenthesizedExpression(node) ||\n\t\tSatisfiesExpression.isSatisfiesExpression(node)\n\t) {\n\t\treturn findFunction(node.getExpression())\n\t}\n\n\tif (CallExpression.isCallExpression(node)) {\n\t\treturn findFunction(node.getArguments()[0]!)\n\t}\n\n\tthrow new InlangException(`Could not find function for type '${node.getKindName()}'`)\n}\n\nexport const wrapExportedFunction = (\n\tsourceFile: SourceFile,\n\toptions: string | undefined,\n\twrapperFunctionName: string,\n\texportName: string,\n\tdefaultImplementation = \"() => { }\",\n) => {\n\tconst fnExport = findOrCreateExport(sourceFile, exportName, defaultImplementation)\n\n\t// if export is a function declaration, convert it to a function expression\n\tif (Node.isFunctionDeclaration(fnExport)) {\n\t\tfnExport.toggleModifier(\"export\", false)\n\t\tfnExport.replaceWithText(`export const ${exportName} = ${nodeToCode(fnExport)}`)\n\t\twrapExportedFunction(sourceFile, options, wrapperFunctionName, exportName)\n\t\treturn\n\t}\n\n\tconst fn = findFunctionExpression(fnExport)\n\tif (!fn) {\n\t\tthrow new InlangSdkException(`Could not find exported function '${exportName}'`)\n\t}\n\n\t// inject SDK imports as parameters\n\tconst imports = getImportSpecifiersAsStrings(sourceFile, \"@inlang/sdk-js\")\n\tif (imports.length) {\n\t\tconst func = findFunction(fn)\n\t\tif (!func.getParameters().length) {\n\t\t\tfunc.insertParameters(0, [{ name: \"_\" }])\n\t\t}\n\n\t\t// TODO: only add params that get used inside that function\n\t\tfunc.insertParameters(1, [{ name: `{ ${imports} }` }])\n\t}\n\n\tconst wrapped = wrapWithPlaceholder(fn)\n\tconst wrapWithAst = createWrapperAst(wrapperFunctionName, options)\n\n\tmergeWrapperAst(wrapped, wrapWithAst)\n\twrapped.replaceWithText(nodeToCode(wrapWithAst))\n}\n", "import {\n\taddImport,\n\tisOptOutImportPresent,\n\tisSdkImportPresent,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { wrapExportedFunction } from \"../../ast-transforms/utils/wrap.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\n\nexport const transformLayoutServerJs = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n\troot: boolean,\n) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\tif (!root && !isSdkImportPresent(sourceFile)) return code\n\n\tconst wrapperFunctionName = root ? \"initRootLayoutServerLoadWrapper\" : \"initServerLoadWrapper\"\n\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/server\", wrapperFunctionName)\n\n\twrapExportedFunction(sourceFile, undefined, wrapperFunctionName, \"load\")\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n\n\treturn nodeToCode(sourceFile)\n}\n", "import type { SourceFile } from \"ts-morph\"\nimport { dedent } from \"ts-dedent\"\nimport {\n\tfindImportDeclarations,\n\taddImport,\n\tremoveImport,\n\tisSdkImportPresent,\n\tgetImportSpecifiersAsStrings,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\nimport { isOptOutImportPresent } from \"./utils/imports.js\"\nimport { getSvelteFileParts, type SvelteFileParts } from \"./utils/svelte.util.js\"\n\nexport const transformSvelte = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n): string => {\n\tconst fileParts = getSvelteFileParts(code)\n\n\tif (isOptOutImportPresent(fileParts)) return code\n\n\ttransform(filePath, config, fileParts)\n\n\treturn fileParts.toString()\n}\n// TODO: what if both script tags import different variables?\n\nconst transform = (filePath: string, config: TransformConfig, fileParts: SvelteFileParts) => {\n\tfileParts.script = transformScriptTag(filePath, config, fileParts.script)\n\tfileParts.moduleScript = transformScriptTag(filePath, config, fileParts.moduleScript)\n}\n\nconst transformScriptTag = (filePath: string, config: TransformConfig, script: string) => {\n\tconst sourceFile = codeToSourceFile(script, filePath)\n\n\ttransformSdkImports(config, sourceFile)\n\n\treturn nodeToCode(sourceFile)\n}\n\nconst transformSdkImports = (config: TransformConfig, sourceFile: SourceFile) => {\n\tif (!isSdkImportPresent(sourceFile)) return\n\n\taddImport(\n\t\tsourceFile,\n\t\t`@inlang/sdk-js/adapter-sveltekit/client/${\n\t\t\tconfig.languageInUrl ? \"not-reactive\" : \"reactive-workaround\"\n\t\t}`,\n\t\t\"getRuntimeFromContext\",\n\t)\n\n\tconst imports = getImportSpecifiersAsStrings(sourceFile, \"@inlang/sdk-js\")\n\n\tconst importDeclarations = findImportDeclarations(sourceFile, \"@inlang/sdk-js\")\n\n\timportDeclarations[0]!.replaceWithText(dedent`\n\t\tconst { ${imports} } = getRuntimeFromContext()\n\t`)\n\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n}\n", "import type { SvelteFileParts } from \"./svelte.util.js\"\nimport { codeToSourceFile } from \"../../../ast-transforms/utils/js.util.js\"\nimport {\n\tisOptOutImportPresent as isOptOutImportPresentOriginal,\n\tisSdkImportPresent as isSdkImportPresentOriginal,\n} from \"../../../ast-transforms/utils/imports.js\"\n\n// TODO: test\nexport const isOptOutImportPresent = ({ script, moduleScript }: SvelteFileParts) => {\n\tconst scriptSourceFile = codeToSourceFile(script)\n\tif (isOptOutImportPresentOriginal(scriptSourceFile)) return true\n\n\tconst moduleScriptSourceFile = codeToSourceFile(moduleScript)\n\tif (isOptOutImportPresentOriginal(moduleScriptSourceFile)) return true\n\n\treturn false\n}\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: test\nexport const isSdkImportPresent = ({ script, moduleScript }: SvelteFileParts) => {\n\tconst scriptSourceFile = codeToSourceFile(script)\n\tif (isSdkImportPresentOriginal(scriptSourceFile)) return true\n\n\tconst moduleScriptSourceFile = codeToSourceFile(moduleScript)\n\tif (isSdkImportPresentOriginal(moduleScriptSourceFile)) return true\n\n\treturn false\n}\n", "import { parse } from \"svelte/compiler\"\nimport type { Ast } from \"./../../../../node_modules/svelte/types/compiler/interfaces.js\"\n\nexport const markupToAst = (markup: string) => parse(markup) as any as Ast\n\n// ------------------------------------------------------------------------------------------------\n\nconst REGEX_MODULE_SCRIPT_TAG = /(<script[^]*?context=\"module\"[^]*?>\\s*)([^]+?)(\\s*<\\/script>)/\nconst REGEX_SCRIPT_TAG = /(<script[^]*?>\\s*)([^]+?)(\\s*<\\/script>)/\nconst REGEX_STYLE_TAG = /<style[^]*?>[^]+?<\\/style>/\n\nexport type SvelteFileParts = ReturnType<typeof getSvelteFileParts>\n\nexport const getSvelteFileParts = (code: string) => {\n\tlet markupContent = code\n\tlet moduleScriptOpeningTag = '<script context=\"module\">\\n'\n\tlet moduleScriptClosingTag = \"\\n</script>\"\n\tlet moduleScriptContent = \"\"\n\tlet scriptOpeningTag = \"<script>\\n\"\n\tlet scriptClosingTag = \"\\n</script>\"\n\tlet scriptContent = \"\"\n\tlet styleTag = \"\"\n\n\tconst moduleScriptMatch = markupContent.match(REGEX_MODULE_SCRIPT_TAG)\n\tif (moduleScriptMatch) {\n\t\tmoduleScriptOpeningTag = moduleScriptMatch[1]!\n\t\tmoduleScriptContent = moduleScriptMatch[2]!\n\t\tmoduleScriptClosingTag = moduleScriptMatch[3]!\n\n\t\tmarkupContent = markupContent.replace(\n\t\t\tmoduleScriptMatch[0],\n\t\t\t\"{$_INLANG_MODULE_SCRIPT_PLACEHOLDER_$}\",\n\t\t)\n\t}\n\n\tconst scriptMatch = markupContent.match(REGEX_SCRIPT_TAG)\n\tif (scriptMatch) {\n\t\tscriptOpeningTag = scriptMatch[1]!\n\t\tscriptContent = scriptMatch[2]!\n\t\tscriptClosingTag = scriptMatch[3]!\n\n\t\tmarkupContent = markupContent.replace(scriptMatch[0], \"{$_INLANG_SCRIPT_PLACEHOLDER_$}\")\n\t}\n\n\tconst styleMatch = markupContent.match(REGEX_STYLE_TAG)\n\tif (styleMatch) {\n\t\tstyleTag = styleMatch[0]!\n\n\t\tmarkupContent = markupContent.replace(styleMatch[0], \"{$_INLANG_STYLE_PLACEHOLDER_$}\")\n\t}\n\n\treturn {\n\t\tget moduleScript(): string {\n\t\t\treturn moduleScriptContent\n\t\t},\n\t\tset moduleScript(newModuleScript: string) {\n\t\t\tmoduleScriptContent = newModuleScript\n\t\t},\n\t\tget script(): string {\n\t\t\treturn scriptContent\n\t\t},\n\t\tset script(newScript: string) {\n\t\t\tscriptContent = newScript\n\t\t},\n\t\tget markup() {\n\t\t\treturn markupContent\n\t\t},\n\t\tset markup(newMarkup: string) {\n\t\t\tmarkupContent = newMarkup\n\t\t},\n\t\ttoString() {\n\t\t\tlet code = markupContent\n\n\t\t\tcode = replacePlaceholder(\n\t\t\t\tcode,\n\t\t\t\t\"{$_INLANG_SCRIPT_PLACEHOLDER_$}\",\n\t\t\t\tscriptOpeningTag,\n\t\t\t\tscriptClosingTag,\n\t\t\t\tscriptContent,\n\t\t\t)\n\t\t\tcode = replacePlaceholder(\n\t\t\t\tcode,\n\t\t\t\t\"{$_INLANG_MODULE_SCRIPT_PLACEHOLDER_$}\",\n\t\t\t\tmoduleScriptOpeningTag,\n\t\t\t\tmoduleScriptClosingTag,\n\t\t\t\tmoduleScriptContent,\n\t\t\t)\n\t\t\tcode = replacePlaceholder(code, \"{$_INLANG_STYLE_PLACEHOLDER_$}\", \"\", \"\", styleTag, false)\n\n\t\t\treturn code.trim()\n\t\t},\n\t}\n}\n\nconst replacePlaceholder = (\n\tcode: string,\n\tplaceholder: string,\n\topenTag: string,\n\tcloseTag: string,\n\tcontent: string | undefined,\n\tinsertAtTheTop = true,\n): string => {\n\tif (code.includes(placeholder)) {\n\t\tconst newContent = content\n\t\t\t? openTag + content + closeTag // insert new content if specified\n\t\t\t: \"\" // remove placeholder if content is empty\n\t\treturn code.replace(placeholder, newContent)\n\t} else if (content) {\n\t\t// insert placeholder if it doesn't exist yet\n\t\tconst newCode = insertAtTheTop ? `${placeholder}\\n${code}` : `${code}\\n${placeholder}`\n\t\treturn replacePlaceholder(newCode, placeholder, openTag, closeTag, content)\n\t}\n\n\treturn code\n}\n", "import {\n\taddImport,\n\tfindImportDeclarations,\n\tgetImportSpecifiers,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\nimport { transformSvelte } from \"./_.svelte.js\"\nimport { dedent } from \"ts-dedent\"\nimport { isOptOutImportPresent } from \"./utils/imports.js\"\nimport { addOrMoveDataExportAndReturnIndex } from \"./utils/exports.js\"\nimport { insertSlotIfEmptyFile, wrapMarkupChildren } from \"./utils/markup.js\"\nimport { getSvelteFileParts, markupToAst } from \"./utils/svelte.util.js\"\nimport { MagicString } from \"../magic-string.js\"\n\nexport const transformLayoutSvelte = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n\troot: boolean,\n) => {\n\tconst fileParts = getSvelteFileParts(code)\n\n\tif (isOptOutImportPresent(fileParts)) return code\n\n\tif (!root) return transformSvelte(filePath, config, code)\n\n\tfileParts.script = transformScript(filePath, config, fileParts.script)\n\tfileParts.markup = transformMarkup(config, fileParts.markup)\n\n\treturn transformSvelte(filePath, config, fileParts.toString())\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst transformScript = (filePath: string, config: TransformConfig, code: string) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/client/shared\", \"addRuntimeToGlobalThis\")\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/shared\", \"getRuntimeFromData\")\n\taddImport(\n\t\tsourceFile,\n\t\t`@inlang/sdk-js/adapter-sveltekit/client/${\n\t\t\tconfig.languageInUrl ? \"not-reactive\" : \"reactive-workaround\"\n\t\t}`,\n\t\t\"addRuntimeToContext\",\n\t\t\"getRuntimeFromContext\",\n\t)\n\taddImport(sourceFile, \"$app/environment\", \"browser\")\n\n\t// remove imports to avoid conflicts, those imports get added in a reactive way\n\tremoveImport(sourceFile, \"@inlang/sdk-js\", \"i\", \"language\", \"referenceLanguage\")\n\n\tconst index = addOrMoveDataExportAndReturnIndex(sourceFile)\n\n\t// TODO: add `addRuntimeToGlobalThis` code only if needed\n\tsourceFile.insertStatements(\n\t\tindex + 1,\n\t\tdedent`\n\t\t\t$: if (browser) {\n\t\t\t\taddRuntimeToGlobalThis(getRuntimeFromData(data))\n\t\t\t\taddRuntimeToContext(getRuntimeFromData(data))\n\t\t\t\t;({ i, language } = getRuntimeFromContext())\n\t\t\t\tdocument.body.parentElement?.setAttribute('lang', language)\n\t\t\t}\n\t\t`,\n\t)\n\n\tconst insertedStatements = sourceFile.insertStatements(\n\t\tindex + 1,\n\t\tdedent`\n\t\t\taddRuntimeToGlobalThis(getRuntimeFromData(data))\n\t\t\taddRuntimeToContext(getRuntimeFromData(data))\n\t\t\tconst { referenceLanguage } = getRuntimeFromContext()\n\t\t\tlet { i, language } = getRuntimeFromContext()\n\t\t`,\n\t)\n\n\t// move @inlang/sdk-js import declarations below inserted code\n\tconst imports = findImportDeclarations(sourceFile, \"@inlang/sdk-js\")\n\tfor (const importDeclaration of imports) {\n\t\timportDeclaration.setOrder(insertedStatements.at(-1)!.getChildIndex() + 1)\n\t}\n\n\treturn nodeToCode(sourceFile)\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst transformMarkup = (config: TransformConfig, markup: string): string => {\n\tconst s = new MagicString(markup)\n\tconst ast = markupToAst(markup)\n\n\tconst inserted = insertSlotIfEmptyFile(s, ast)\n\tif (inserted) {\n\t\treturn transformMarkup(config, s.toString())\n\t}\n\n\twrapMarkupChildren(s, ast, \"{#key language}$$_INLANG_WRAP_$${/key}\")\n\n\tconst markup1 = s.toString()\n\tconst s1 = new MagicString(markup1)\n\tconst ast1 = markupToAst(markup1)\n\t// TODO: only insert `if (language)` reactive stores are not used\n\tif (!config.languageInUrl) {\n\t\twrapMarkupChildren(s1, ast1, \"{#if language || !referenceLanguage}$$_INLANG_WRAP_$${/if}\")\n\t}\n\n\treturn s1.toString()\n}\n", "import { Node, VariableStatement, type SourceFile } from \"ts-morph\"\nimport { findExport } from \"../../../ast-transforms/utils/exports.js\"\n\n// TODO: test\nexport const addOrMoveDataExportAndReturnIndex = (sourceFile: SourceFile) => {\n\tconst statements = sourceFile.getStatements()\n\t// find insertion point should come right after all imports (which ideally are on the top of the script section)\n\tlet index = statements.findIndex((statement) => !Node.isImportDeclaration(statement))\n\tif (index < 0) index = statements.length\n\n\tconst dataExport = findExport(sourceFile, \"data\")\n\tif (dataExport) {\n\t\t// move data export after imports\n\t\t;(dataExport.getParent().getParent() as VariableStatement)?.setOrder(index)\n\t} else {\n\t\tsourceFile.insertStatements(index, `export let data`)\n\t}\n\n\treturn index\n}\n", "import type {\n\tAst,\n\tTemplateNode,\n} from \"./../../../../node_modules/svelte/types/compiler/interfaces.js\"\nimport type { MagicStringType } from \"../../magic-string.js\"\nimport { InlangSdkException } from \"../../vite-plugin/exceptions.js\"\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: test\nconst canNodeBeWrapped = (node: TemplateNode) => {\n\tif (\n\t\tnode.type === \"MustacheTag\" &&\n\t\tnode.expression.type === \"Identifier\" &&\n\t\tnode.expression.name.startsWith(\"$_INLANG_\")\n\t)\n\t\treturn false\n\tif (node.type === \"Window\") return false\n\tif (node.type === \"Document\") return false\n\tif (node.type === \"Head\") return false\n\tif (node.type === \"Body\") return false\n\tif (node.type === \"Options\") return false\n\n\treturn true\n}\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: test\nconst wrapNodes = (s: MagicStringType, ast: Ast, start: number, end: number, wrapWith: string) => {\n\t// TODO: only wrap if @inlang/sdk-js imports get used inside that block or if it's a component or a <slot />\n\tconst nodes = ast.html.children?.slice(start, end) || []\n\tif (!nodes.length) return\n\n\tif (!wrapWith.includes(\"$$_INLANG_WRAP_$$\"))\n\t\tthrow new InlangSdkException(\"Could not find wrapping point.\")\n\n\tconst [before, after] = wrapWith.split(\"$$_INLANG_WRAP_$$\") as [string, string]\n\ts.appendLeft(nodes.at(0)!.start, before)\n\ts.appendLeft(nodes.at(-1)!.end, after)\n}\n\n// TODO: test\nexport const wrapMarkupChildren = (s: MagicStringType, ast: Ast, wrapWith: string) => {\n\tconst children = [...(ast.html.children?.values() || [])]\n\tlet start = 0\n\tfor (const [i, child] of children.entries()) {\n\t\tif (canNodeBeWrapped(child!)) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\twrapNodes(s, ast, start, i, wrapWith)\n\t\t\tstart = i + 1\n\t\t}\n\t}\n\n\twrapNodes(s, ast, start, children.length, wrapWith)\n}\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: tests\nconst isMarkupEmpty = (ast: Ast) =>\n\t!(ast.html.children || []).filter(\n\t\t(c) => !(c.type === \"Comment\" || (c.type === \"Text\" && !c.data.trim())),\n\t).length\n\n// TODO: tests\nexport const insertSlotIfEmptyFile = (s: MagicStringType, ast: Ast) => {\n\tif (isMarkupEmpty(ast)) {\n\t\ts.appendRight(ast.html.end || 0, \"<slot />\")\n\t\treturn true\n\t}\n\n\treturn false\n}\n", "export type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nconst comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array) {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array) {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport function decode(mappings: string): SourceMapMappings {\n  const state: [number, number, number, number, number] = new Int32Array(5) as any;\n  const decoded: SourceMapMappings = [];\n\n  let index = 0;\n  do {\n    const semi = indexOf(mappings, index);\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    state[0] = 0;\n\n    for (let i = index; i < semi; i++) {\n      let seg: SourceMapSegment;\n\n      i = decodeInteger(mappings, i, state, 0); // genColumn\n      const col = state[0];\n      if (col < lastCol) sorted = false;\n      lastCol = col;\n\n      if (hasMoreVlq(mappings, i, semi)) {\n        i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n        i = decodeInteger(mappings, i, state, 2); // sourceLine\n        i = decodeInteger(mappings, i, state, 3); // sourceColumn\n\n        if (hasMoreVlq(mappings, i, semi)) {\n          i = decodeInteger(mappings, i, state, 4); // namesIndex\n          seg = [col, state[1], state[2], state[3], state[4]];\n        } else {\n          seg = [col, state[1], state[2], state[3]];\n        }\n      } else {\n        seg = [col];\n      }\n\n      line.push(seg);\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    index = semi + 1;\n  } while (index <= mappings.length);\n\n  return decoded;\n}\n\nfunction indexOf(mappings: string, index: number): number {\n  const idx = mappings.indexOf(';', index);\n  return idx === -1 ? mappings.length : idx;\n}\n\nfunction decodeInteger(mappings: string, pos: number, state: SourceMapSegment, j: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = mappings.charCodeAt(pos++);\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  state[j] += value;\n  return pos;\n}\n\nfunction hasMoreVlq(mappings: string, i: number, length: number): boolean {\n  if (i >= length) return false;\n  return mappings.charCodeAt(i) !== comma;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const state: [number, number, number, number, number] = new Int32Array(5) as any;\n  const bufLength = 1024 * 16;\n  const subLength = bufLength - 36;\n  const buf = new Uint8Array(bufLength);\n  const sub = buf.subarray(0, subLength);\n  let pos = 0;\n  let out = '';\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) {\n      if (pos === bufLength) {\n        out += td.decode(buf);\n        pos = 0;\n      }\n      buf[pos++] = semicolon;\n    }\n    if (line.length === 0) continue;\n\n    state[0] = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      // We can push up to 5 ints, each int can take at most 7 chars, and we\n      // may push a comma.\n      if (pos > subLength) {\n        out += td.decode(sub);\n        buf.copyWithin(0, subLength, pos);\n        pos -= subLength;\n      }\n      if (j > 0) buf[pos++] = comma;\n\n      pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n\n      if (segment.length === 1) continue;\n      pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n      pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n      pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n\n      if (segment.length === 4) continue;\n      pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n    }\n  }\n\n  return out + td.decode(buf.subarray(0, pos));\n}\n\nfunction encodeInteger(\n  buf: Uint8Array,\n  pos: number,\n  state: SourceMapSegment,\n  segment: SourceMapSegment,\n  j: number,\n): number {\n  const next = segment[j];\n  let num = next - state[j];\n  state[j] = next;\n\n  num = num < 0 ? (-num << 1) | 1 : num << 1;\n  do {\n    let clamped = num & 0b011111;\n    num >>>= 5;\n    if (num > 0) clamped |= 0b100000;\n    buf[pos++] = intToChar[clamped];\n  } while (num > 0);\n\n  return pos;\n}\n", "export default class BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n", "export default class Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\tif (DEBUG) {\n\t\t\t// we make these non-enumerable, for sanity while debugging\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tprevious: { writable: true, value: null },\n\t\t\t\tnext: { writable: true, value: null },\n\t\t\t});\n\t\t} else {\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n", "import { encode } from '@jridgewell/sourcemap-codec';\n\nfunction getBtoa () {\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nexport default class SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n", "export default function guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n", "export default function getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n", "const toString = Object.prototype.toString;\n\nexport default function isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n", "export default function getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n", "export default class Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n", "import BitSet from './BitSet.js';\nimport Chunk from './Chunk.js';\nimport SourceMap from './SourceMap.js';\nimport guessIndent from './utils/guessIndent.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\nimport Stats from './utils/Stats.js';\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nexport default class MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tif (DEBUG) {\n\t\t\tObject.defineProperty(this, 'stats', { value: new Stats() });\n\t\t}\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendLeft');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendLeft');\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendRight');\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tif (DEBUG) this.stats.time('move');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\n\t\tif (DEBUG) this.stats.timeEnd('move');\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tif (DEBUG) this.stats.time('overwrite');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('overwrite');\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tif (DEBUG) this.stats.time('remove');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('remove');\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tif (DEBUG) this.stats.time('_split');\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\tif (DEBUG) this.stats.timeEnd('_split');\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n", "import MagicString from './MagicString.js';\nimport SourceMap from './SourceMap.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nexport default class Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tlet x_google_ignoreList = undefined;\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t}\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n", "import MagicStringImport from \"magic-string\"\n\nexport const MagicString = MagicStringImport as unknown as typeof MagicStringImport\nexport type MagicStringType = InstanceType<typeof MagicStringImport>\n", "import { dedent } from \"ts-dedent\"\nimport type { SourceFile } from \"ts-morph\"\nimport {\n\taddImport,\n\tisOptOutImportPresent,\n\tisSdkImportPresent,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { wrapExportedFunction } from \"../../ast-transforms/utils/wrap.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: test\nconst addImports = (\n\tast: SourceFile,\n\tconfig: TransformConfig,\n\troot: boolean,\n\twrapperFunctionName: string,\n) => {\n\taddImport(ast, \"$app/environment\", \"browser\")\n\taddImport(ast, \"@inlang/sdk-js/adapter-sveltekit/shared\", wrapperFunctionName)\n\n\tif (config.languageInUrl && config.isStatic) {\n\t\taddImport(ast, \"@inlang/sdk-js/adapter-sveltekit/shared\", \"replaceLanguageInUrl\")\n\t\taddImport(\n\t\t\tast,\n\t\t\t\"@inlang/sdk-js/detectors/client\",\n\t\t\t\"initLocalStorageDetector\",\n\t\t\t\"navigatorDetector\",\n\t\t)\n\t\taddImport(ast, \"@sveltejs/kit\", \"redirect\")\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: test\nconst getOptions = (config: TransformConfig, root: boolean) =>\n\tconfig.languageInUrl && config.isStatic\n\t\t? dedent`\n\t\t\t{\n\t\t\t\t\tbrowser,\n\t\t\t\t\tinitDetectors: () => [navigatorDetector],\n\t\t\t\t\tredirect: {\n\t\t\t\t\t\tthrowable: redirect,\n\t\t\t\t\t\tgetPath: ({ url }, language) => replaceLanguageInUrl(new URL(url), language),\n\t\t\t\t\t},\n\t\t\t}`\n\t\t: dedent`\n\t\t\t{\n\t\t\t \t\tbrowser\n\t\t\t}`\n\n// ------------------------------------------------------------------------------------------------\n\nexport const _FOR_TESTING = {\n\taddImports,\n\tgetOptions,\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const transformPageJs = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n\troot: boolean,\n) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\tif (!root && !isSdkImportPresent(sourceFile)) return code\n\n\tconst wrapperFunctionName = root ? \"initRootPageLoadWrapper\" : \"initLoadWrapper\"\n\n\taddImports(sourceFile, config, root, wrapperFunctionName)\n\n\tconst options = root ? getOptions(config, root) : undefined\n\twrapExportedFunction(sourceFile, options, wrapperFunctionName, \"load\")\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n\n\treturn nodeToCode(sourceFile)\n}\n", "import {\n\taddImport,\n\tisOptOutImportPresent,\n\tisSdkImportPresent,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport { wrapExportedFunction } from \"../../ast-transforms/utils/wrap.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\n\nexport const transformPageServerJs = (filePath: string, config: TransformConfig, code: string) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\tif (!isSdkImportPresent(sourceFile)) return code\n\n\tconst wrapperFunctionName = \"initServerLoadWrapper\"\n\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/server\", wrapperFunctionName)\n\n\twrapExportedFunction(sourceFile, undefined, wrapperFunctionName, \"load\")\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n\n\treturn nodeToCode(sourceFile)\n}\n", "import type { TransformConfig } from \"../vite-plugin/config.js\"\nimport { transformSvelte } from \"./_.svelte.js\"\n\nexport const transformPageSvelte = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n\troot: boolean,\n) => {\n\treturn transformSvelte(filePath, config, code)\n}\n", "import { findExport } from \"../../ast-transforms/utils/exports.js\"\nimport {\n\taddImport,\n\tisOptOutImportPresent,\n\tisSdkImportPresent,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport { wrapExportedFunction } from \"../../ast-transforms/utils/wrap.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\n\nexport const transformServerRequestJs = (\n\tfilePath: string,\n\tconfig: TransformConfig,\n\tcode: string,\n) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\tif (!isSdkImportPresent(sourceFile)) return code\n\n\tconst wrapperFunctionName = \"initRequestHandlerWrapper\"\n\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/server\", wrapperFunctionName)\n\n\tconst exports = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\"]\n\tfor (const exportName of exports) {\n\t\tif (findExport(sourceFile, exportName)) {\n\t\t\t// TODO: only transform exports that actually use SDK imports\n\t\t\twrapExportedFunction(sourceFile, undefined, wrapperFunctionName, exportName)\n\t\t}\n\t}\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n\n\treturn nodeToCode(sourceFile)\n}\n", "import { dedent } from \"ts-dedent\"\nimport { findExport } from \"../../ast-transforms/utils/exports.js\"\nimport { addImport, isOptOutImportPresent } from \"../../ast-transforms/utils/imports.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\nimport { InlangSdkException } from \"../vite-plugin/exceptions.js\"\nimport { filePathForOutput } from \"../vite-plugin/fileInformation.js\"\nimport { transformServerRequestJs } from \"./+server.js.js\"\n\nexport const transformLanguageJson = (filePath: string, config: TransformConfig, code: string) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\n\tconst fileName = filePathForOutput(config, filePath)\n\n\tif (findExport(sourceFile, \"GET\"))\n\t\tthrow new InlangSdkException(dedent`\n\t\t\tThe file (${fileName}) already contains a 'GET' export.\n\t\t\tPlease remove it as 'inlang' needs to inject it's own magic here.\n\t\t`)\n\n\tconst index = sourceFile.getPos()\n\tif (config.isStatic && config.inlang.sdk.resources.cache === \"build-time\")\n\t\tsourceFile.insertText(\n\t\t\tindex,\n\t\t\tdedent`\n\t\t\t\texport const prerender = true\n\t\t\t`,\n\t\t)\n\n\tsourceFile.insertText(\n\t\tindex,\n\t\tdedent`\n\t\t\texport const GET = async ({ params: { language } }) => {\n\t\t\t\tawait reloadResources()\n\t\t\t\treturn json(getResource(language) || null)\n\t\t\t}\n\t\t`,\n\t)\n\n\tif (config.svelteKit.version || \"\" >= \"1.16.3\") {\n\t\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/server\", \"initState\")\n\n\t\t// TODO the relative file path depends on the location of the route folder\n\t\tsourceFile.insertText(\n\t\t\tindex,\n\t\t\tdedent`\n\t\t\t\texport const entries = async () => {\n\t\t\t\t\tconst { languages } = await initState(await import('../../../../inlang.config.js'))\n\n\t\t\t\t\treturn languages.map(language => ({ language }))\n\t\t\t\t}\n\t\t\t`,\n\t\t)\n\t}\n\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/server\", \"getResource\", \"reloadResources\")\n\taddImport(sourceFile, \"@sveltejs/kit\", \"json\")\n\n\treturn transformServerRequestJs(filePath, config, nodeToCode(sourceFile))\n}\n", "import { Node, type Identifier, SourceFile, SyntaxKind } from \"ts-morph\"\n\nexport const findAllIdentifiersComingFromAnImport = (sourceFile: SourceFile, path: string) => {\n\tconst allIdentifiers = sourceFile.getDescendantsOfKind(SyntaxKind.Identifier)\n\treturn allIdentifiers.filter((identifier) => isIdentifierComingFromAnImport(identifier, path))\n}\n\nconst isIdentifierComingFromAnImport = (identifier: Identifier, path: string) => {\n\tconst identifierName = identifier.getText()\n\tlet currentNode: Node | undefined = identifier\n\n\twhile (currentNode) {\n\t\tlet nodes = [currentNode]\n\t\tif (currentNode.getParent()) {\n\t\t\tnodes = [...nodes, ...currentNode.getPreviousSiblings(), ...currentNode.getNextSiblings()]\n\t\t}\n\n\t\tconst checkedNodes = nodes.map((node) =>\n\t\t\tcheckIfImportStatementReached(node, path, identifierName),\n\t\t)\n\t\tif (checkedNodes.includes(false)) return false\n\t\tif (checkedNodes.includes(true)) return true\n\n\t\tcurrentNode = currentNode.getParent()\n\t}\n\n\treturn false\n}\n\nconst checkIfImportStatementReached = (node: Node, path: string, identifierName: string) => {\n\tif (shouldAbortProcessing(node, identifierName)) return false\n\n\tif (\n\t\tNode.isImportDeclaration(node) &&\n\t\tnode.getModuleSpecifier().getLiteralText() === path &&\n\t\tnode\n\t\t\t.getNamedImports()\n\t\t\t.some(\n\t\t\t\t(namedImport) =>\n\t\t\t\t\t(namedImport.getAliasNode()?.getText() || namedImport.getName()) === identifierName,\n\t\t\t)\n\t) {\n\t\treturn true\n\t}\n\n\treturn undefined\n}\n\nconst shouldAbortProcessing = (node: Node, identifierName: string) => {\n\tif (\n\t\tNode.isVariableStatement(node) &&\n\t\tnode.getDeclarations().some((declaration) => declaration.getName() === identifierName)\n\t) {\n\t\treturn true\n\t}\n\n\tconst parent = node.getParent()\n\tif (!parent) return true\n\n\tif (Node.isImportSpecifier(parent)) return true\n\n\tif (\n\t\tNode.isForOfStatement(parent) ||\n\t\tNode.isForInStatement(parent) ||\n\t\tNode.isForStatement(parent)\n\t) {\n\t\tconst initializer = parent.getInitializer()\n\t\tif (\n\t\t\tNode.isVariableDeclarationList(initializer) &&\n\t\t\tinitializer.getDeclarations().some((identifier) => identifier.getName() === identifierName)\n\t\t) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n", "import { Node } from \"ts-morph\"\nimport type { TransformConfig } from \"../../vite-plugin/config.js\"\nimport { InlangSdkException } from \"../../vite-plugin/exceptions.js\"\nimport { filePathForOutput } from \"../../vite-plugin/fileInformation.js\"\n\nexport const assertNodeInsideFunctionScope = (\n\tconfig: TransformConfig,\n\tfilePath: string,\n\tnode: Node,\n) => {\n\tlet nodeToCheck: Node | undefined = node.getParent()\n\n\twhile (nodeToCheck) {\n\t\tif (Node.isFunctionLikeDeclaration(nodeToCheck)) return\n\t\tnodeToCheck = nodeToCheck.getParent()\n\t}\n\n\tthrow new InlangSdkException(`You cannot directly access any '@inlang/sdk-js' imports in outside a function scope in this file (${filePathForOutput(\n\t\tconfig,\n\t\tfilePath,\n\t)}).\nPlease read the docs for more information on how to workaround this limitation:\nhttps://inlang.com/documentation/sdk/sveltekit/advanced#*.js`)\n}\n", "import {\n\taddImport,\n\tisOptOutImportPresent,\n\tisSdkImportPresent,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { codeToSourceFile, nodeToCode } from \"../../ast-transforms/utils/js.util.js\"\nimport { findAllIdentifiersComingFromAnImport } from \"../../ast-transforms/utils/usage.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\nimport { assertNodeInsideFunctionScope } from \"./utils/assertions.js\"\n\nexport const transformJs = (filePath: string, config: TransformConfig, code: string) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\tif (!isSdkImportPresent(sourceFile)) return code\n\n\tconst identifiers = findAllIdentifiersComingFromAnImport(sourceFile, \"@inlang/sdk-js\")\n\tfor (const identifier of identifiers) {\n\t\tassertNodeInsideFunctionScope(config, filePath, identifier)\n\t\tidentifier.replaceWithText(`getRuntimeFromGlobalThis().${identifier.getText()}`)\n\t}\n\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n\taddImport(\n\t\tsourceFile,\n\t\t\"@inlang/sdk-js/adapter-sveltekit/client/shared\",\n\t\t\"getRuntimeFromGlobalThis\",\n\t)\n\n\treturn nodeToCode(sourceFile)\n}\n", "import type { SourceFile } from \"ts-morph\"\nimport { isSdkImportPresent } from \"./imports.js\"\nimport { dedent } from \"ts-dedent\"\nimport { InlangSdkException } from \"../../adapter-sveltekit/vite-plugin/exceptions.js\"\nimport type { FileType } from \"../../adapter-sveltekit/vite-plugin/fileInformation.js\"\n\n// TODO: test\nexport const assertNoImportsFromSdkJs = (\n\tsourceFile: SourceFile,\n\tfilePath: string,\n\ttype: FileType,\n\troot = false,\n) => {\n\tif (isSdkImportPresent(sourceFile)) {\n\t\tthrow new InlangSdkException(dedent`\n\t\t\tIt is currently not supported to import something from '@inlang/sdk-js' in this file (${filePath}).\n\t\t\tPlease read the docs for more information on how to workaround this temporary limitation:\n\t\t\thttps://inlang.com/documentation/sdk/sveltekit/advanced${getSection(type, root)}\n\t\t`)\n\t}\n}\n\nconst getSection = (type: FileType, root: boolean) => {\n\tif (root) {\n\t\tswitch (type) {\n\t\t\tcase \"+layout.server.js\":\n\t\t\t\treturn \"#/routes/+layout.server.js-(root server layout)\"\n\t\t\tcase \"+layout.js\":\n\t\t\t\treturn \"#/routes/+layout.js-(root layout)\"\n\t\t\tcase \"+page.js\":\n\t\t\t\treturn \"#/routes/+page.js-(root page)\"\n\t\t\tcase \"+layout.svelte\":\n\t\t\t\treturn \"#/routes/+layout.svelte-(root svelte layout)\"\n\t\t}\n\t}\n\n\tswitch (type) {\n\t\tcase \"*.server.js\":\n\t\tcase \"*.js\":\n\t\t\treturn \"#*.js\"\n\t\tcase \"+layout.svelte\":\n\t\tcase \"+page.svelte\":\n\t\tcase \"*.svelte\":\n\t\t\treturn \"#*.svelte\"\n\t\tcase \"[language].json\":\n\t\tcase \"+layout.server.js\":\n\t\tcase \"+layout.js\":\n\t\tcase \"hooks.server.js\":\n\t\tcase \"+server.js\":\n\t\tcase \"+page.server.js\":\n\t\tcase \"+page.js\":\n\t\t\treturn \"\"\n\t\tdefault:\n\t\t\treturn unreachable(type)\n\t}\n}\n\nexport const unreachable = (value: never): never => {\n\tthrow new Error(`unhandled case '${value}'`)\n}\n", "import { assertNoImportsFromSdkJs } from \"../../ast-transforms/utils/assertions.js\"\nimport { codeToSourceFile } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\nimport { filePathForOutput } from \"../vite-plugin/fileInformation.js\"\n\nexport const transformServerJs = (filePath: string, config: TransformConfig, code: string) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tassertNoImportsFromSdkJs(sourceFile, filePathForOutput(config, filePath), \"*.server.js\")\n\n\treturn code\n}\n", "import { dedent } from \"ts-dedent\"\nimport type { SourceFile } from \"ts-morph\"\nimport {\n\taddImport,\n\tisOptOutImportPresent,\n\tremoveImport,\n} from \"../../ast-transforms/utils/imports.js\"\nimport { wrapExportedFunction } from \"../../ast-transforms/utils/wrap.js\"\nimport { nodeToCode, codeToNode, codeToSourceFile } from \"../../ast-transforms/utils/js.util.js\"\nimport type { TransformConfig } from \"../vite-plugin/config.js\"\n\n// TODO: test\nconst addImports = (\n\tsourceFile: SourceFile,\n\tconfig: TransformConfig,\n\twrapperFunctionName: string,\n) => {\n\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/server\", wrapperFunctionName)\n\n\tif (!config.isStatic && config.languageInUrl) {\n\t\taddImport(sourceFile, \"@sveltejs/kit\", \"redirect\")\n\t\taddImport(sourceFile, \"@inlang/sdk-js/detectors/server\", \"initAcceptLanguageHeaderDetector\")\n\t\taddImport(sourceFile, \"@inlang/sdk-js/adapter-sveltekit/shared\", \"replaceLanguageInUrl\")\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\n// TODO: use ast transformation instead of string manipulation\n// TODO: test\nconst getOptions = (config: TransformConfig) => {\n\tconst options = dedent`\n\t{\n\t\tinlangConfigModule: import(\"../inlang.config.js\"),\n\t\texcludedRoutes: ${JSON.stringify(config.inlang.sdk.routing.exclude)},\n\t\tgetLanguage: ${\n\t\t\tconfig.languageInUrl ? `({ url }) => url.pathname.split(\"/\")[1]` : `() => undefined`\n\t\t},\n\t\t${\n\t\t\t!config.isStatic && config.languageInUrl\n\t\t\t\t? `\n\t\t\tinitDetectors: ({ request }) => [initAcceptLanguageHeaderDetector(request.headers)],\n\t\t\tredirect: {\n\t\t\t\tthrowable: redirect,\n\t\t\t\tgetPath: ({ url }, language) => replaceLanguageInUrl(url, language),\n\t\t\t},\n\t\t`\n\t\t\t\t: \"\"\n\t\t},\n\t}`\n\n\treturn nodeToCode(codeToNode(`const x = ${options}`))\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const _FOR_TESTING = {\n\taddImports,\n\tgetOptions,\n}\n\n// ------------------------------------------------------------------------------------------------\n\nexport const transformHooksServerJs = (filePath: string, config: TransformConfig, code: string) => {\n\tconst sourceFile = codeToSourceFile(code, filePath)\n\n\tif (isOptOutImportPresent(sourceFile)) return code\n\n\tconst wrapperFunctionName = \"initHandleWrapper\"\n\n\taddImports(sourceFile, config, wrapperFunctionName)\n\n\tconst options = getOptions(config)\n\twrapExportedFunction(\n\t\tsourceFile,\n\t\toptions,\n\t\twrapperFunctionName,\n\t\t\"handle\",\n\t\t\"({ resolve, event }) => resolve(event)\",\n\t)\n\tremoveImport(sourceFile, \"@inlang/sdk-js\")\n\n\treturn nodeToCode(sourceFile)\n}\n", "import { plugin } from \"./vite-plugin/plugin.js\"\n\nexport default plugin\n"],
  "mappings": "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",
  "names": ["dedent", "i", "isDepIncluded", "isDepExcluded", "isDepNoExternaled", "isDepExternaled", "p", "import_ts_dedent", "svelteKit", "cwdFolderPath", "import_ts_dedent", "mkdir", "writeFile", "path", "readFile", "writeFile", "plugin", "import_ts_dedent", "util", "k", "_", "objectUtil", "path", "m", "x", "errorUtil", "errorMap", "transform", "version", "ctx", "result", "issues", "b", "elements", "processed", "p", "p2", "ZodFirstPartyTypeKind", "import_ts_dedent", "import_ts_dedent", "path", "import_ts_dedent", "fs", "import_ts_dedent", "import_ts_dedent", "n", "z", "path", "stat", "import_ts_dedent", "Node", "Node", "Node", "import_ts_dedent", "Node", "m", "path", "readFile", "writeFile", "Node", "path", "mkdir", "writeFile", "path", "ext", "import_ts_dedent", "import_ts_dedent", "Node", "path", "importDeclaration", "name", "Node", "SyntaxKind", "import_ts_dedent", "Node", "SyntaxKind", "import_ts_dedent", "isOptOutImportPresent", "code", "isOptOutImportPresent", "import_ts_dedent", "Node", "Node", "c", "c", "j", "n", "btoa", "j", "m", "_", "re", "MagicString", "isOptOutImportPresent", "MagicString", "import_ts_dedent", "addImports", "getOptions", "addImports", "getOptions", "import_ts_dedent", "Node", "SyntaxKind", "path", "Node", "Node", "import_ts_dedent", "import_ts_dedent", "addImports", "getOptions", "addImports", "getOptions", "_", "path"]
}
